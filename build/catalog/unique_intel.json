[
    {
        "title": "MCi_Status Overflow Bit May Be Incorrectly Set on a Single Instance of a DTLB Error",
        "problem": "A single Data Translation Look Aside Buffer (DTLB) error can incorrectly set the Overflow (bit [62]) in the MCi_Status register. A DTLB error is indicated by MCA error code (bits [15:0]) appearing as binary value, 000x 0000 0001 0100, in the MCi_Status register.",
        "implication": "Due to this erratum, the Overflow bit in the MCi_Status register may not be an accurate indication of multiple occurrences of DTLB errors. There is no other impact to normal processor functionality.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Debug Exception Flags DR6.B0-B3 Flags May be Incorrect for Disabled Breakpoints",
        "problem": "When a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled (DR7.G0-G3 and DR7.L0-L3), the DR6.B0-B3 flags may be incorrect.",
        "implication": "The debug exception DR6.B0-B3 flags may be incorrect for the load if the corresponding breakpoint enable flag in DR7 is disabled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MONITOR or CLFLUSH on the Local XAPIC's Address Space Results in Hang",
        "problem": "If the target linear address range for a MONITOR or CLFLUSH is mapped to the local xAPIC's address space, the processor will hang.",
        "implication": "When this erratum occurs, the processor will hang. The local xAPIC's address space must be uncached. The MONITOR instruction only functions correctly if the specified linear address range is of the type write-back. CLFLUSH flushes data from the cache. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Do not execute MONITOR or CLFLUSH instructions on the local xAPIC address space.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Corruption of CS Segment Register during RSM While Transitioning From Real Mode to Protected Mode",
        "problem": "During the transition from real mode to protected mode, if an SMI (System Management Interrupt) occurs between the MOV to CR0 that sets PE (Protection Enable, bit 0) and the first FAR JMP, the subsequent RSM (Resume from System Management Mode) may cause the lower two bits of CS segment register to be corrupted.",
        "implication": "The corruption of the bottom two bits of the CS segment register will have no impact unless software explicitly examines the CS segment register between enabling protected mode and the first FAR JMP. Intel\u00ae 64 and IA-32 Architectures Software Developer\u2019s Manual Volume 3A: System Programming Guide, Part 1, in the section titled \"Switching to Protected Mode\" recommends the FAR JMP immediately follows the write to CR0 to enable protected mode. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Processor May Report a #TS Instead of a #GP Fault",
        "problem": "A jump to a busy TSS (Task-State Segment) may cause a #TS (invalid TSS exception) instead of a #GP fault (general protection exception).",
        "implication": "Operation systems that access a busy TSS may get invalid TSS fault instead of a #GP fault. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "REP MOVS/STOS Executing with Fast Strings Enabled and Crossing Page Boundaries with Inconsistent Memory Types may use an Incorrect Data Size or Lead to Memory-Ordering Violations",
        "problem": "Under certain conditions as described in the Software Developers Manual section \"Out- of-Order Stores For String Operations in Pentium 4, Intel Xeon, and P6 Family Processors\" the processor performs REP MOVS or REP STOS as fast strings. Due to this erratum fast string REP MOVS/REP STOS instructions that cross page boundaries from WB/WC memory types to UC/WP/WT memory types, may start using an incorrect data size or may observe memory ordering violations.",
        "implication": "Upon crossing the page boundary the following may occur, dependent on the new page memory type: \u2022 UC the data size of each write will now always be 8 bytes, as opposed to the original data size. \u2022 WP the data size of each write will now always be 8 bytes, as opposed to the original data size and there may be a memory ordering violation. \u2022 WT there may be a memory ordering violation.",
        "workaround": "Software should avoid crossing page boundaries from WB or WC memory type to UC, WP or WT memory type within a single REP MOVS or REP STOS instruction that will execute with fast strings enabled.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Code Segment Limit/Canonical Faults on RSM May be Serviced before Higher Priority Interrupts/Exceptions and May Push the Wrong Address Onto the Stack",
        "problem": "Normally, when the processor encounters a Segment Limit or Canonical Fault due to code execution, a #GP (General Protection Exception) fault is generated after all higher priority Interrupts and exceptions are serviced. Due to this erratum, if RSM (Resume from System Management Mode) returns to execution flow that results in a Code Segment Limit or Canonical Fault, the #GP fault may be serviced before a higher priority Interrupt or Exception (e.g. NMI (Non-Maskable Interrupt), Debug break(#DB), Machine Check (#MC), etc.). If the RSM attempts to return to a non-canonical address, the address pushed onto the stack for this #GP fault may not match the non-canonical address that caused the fault.",
        "implication": "Operating systems may observe a #GP fault being serviced before higher priority Interrupts and Exceptions. Intel has not observed this erratum on any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor SSE Retired Instructions May Return Incorrect Values",
        "problem": "Performance Monitoring counter SIMD_INST_RETIRED (Event: C7H) is used to track retired SSE instructions. Due to this erratum, the processor may also count other types of instructions resulting in higher than expected values.",
        "implication": "Performance Monitoring counter SIMD_INST_RETIRED may report count higher than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Premature Execution of a Load Operation Prior to Exception Handler Invocation",
        "problem": "If any of the below circumstances occur, it is possible that the load portion of the instruction will have executed before the exception handler is entered. \u2022 If an instruction that performs a memory load causes a code segment limit violation. \u2022 If a waiting X87 floating-point (FP) instruction or MMX\u2122 technology (MMX) instruction that performs a memory load has a floating-point exception pending. \u2022 If an MMX or SSE/SSE2/SSE3/SSSE3 extensions (SSE) instruction that performs a memory load and has either CR0.EM=1 (Emulation bit set), or a floating-point Top- of-Stack (FP TOS) not equal to 0, or a DNA exception pending.",
        "implication": "In normal code execution where the target of the load operation is to write back memory there is no impact from the load being prematurely executed, or from the restart and subsequent re-execution of that instruction by the exception handler. If the target of the load is to uncached memory that has a system side-effect, restarting the instruction may cause unexpected system behavior due to the repetition of the side- effect. Particularly, while CR0.TS [bit 3] is set, a MOVD/MOVQ with MMX/XMM register operands may issue a memory load before getting the DNA exception.",
        "workaround": "Code which performs loads from memory that has side-effects can effectively workaround this behavior by using simple integer-based load instructions when accessing side-effect memory and by ensuring that all code is written such that a code segment limit violation cannot occur as a part of reading from side-effect memory.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MOV To/From Debug Registers Causes Debug Exception",
        "problem": "When in V86 mode, if a MOV instruction is executed to/from a debug registers, a general-protection exception (#GP) should be generated. However, in the case when the general detect enable flag (GD) bit is set, the observed behavior is that a debug exception (#DB) is generated instead.",
        "implication": "With debug-register protection enabled (i.e., the GD bit set), when attempting to execute a MOV on debug registers in V86 mode, a debug exception will be generated instead of the expected general-protection fault.",
        "workaround": "In general, operating systems do not set the GD bit when they are in V86 mode. The GD bit is generally set and used by debuggers. The debug exception handler should check that the exception did not occur in V86 mode before continuing. If the exception did occur in V86 mode, the exception may be directed to the general-protection exception handler.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect Address Computed For Last Byte of FXSAVE/FXRSTOR Image Leads to Partial Memory Update",
        "problem": "A partial memory state save of the 512-byte FXSAVE image or a partial memory state restore of the FXRSTOR image may occur if a memory address exceeds the 64KB limit while the processor is operating in 16-bit mode or if a memory address exceeds the 4GB limit while the processor is operating in 32-bit mode.",
        "implication": "FXSAVE/FXRSTOR will incur a #GP fault due to the memory limit violation as expected but the memory state may be only partially saved or restored.",
        "workaround": "Software should avoid memory accesses that wrap around the respective 16-bit and 32-bit mode memory limits.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Values for LBR/BTS/BTM will be Incorrect after an Exit from SMM",
        "problem": "After a return from SMM (System Management Mode), the CPU will incorrectly update the LBR (Last Branch Record) and the BTS (Branch Trace Store), hence rendering their data invalid. The corresponding data if sent out as a BTM on the system bus will also be incorrect. Note: This issue would only occur when one of the 3 above mentioned debug support facilities are used.",
        "implication": "The value of the LBR, BTS, and BTM immediately after an RSM operation should not be used.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Single Step Interrupts with Floating Point Exception Pending May Be Mishandled",
        "problem": "In certain circumstances, when a floating point exception (#MF) is pending during single-step execution, processing of the single-step debug exception (#DB) may be mishandled.",
        "implication": "When this erratum occurs, #DB will be incorrectly handled as follows: \u2022 #DB is signaled before the pending higher priority #MF (Interrupt 16) \u2022 #DB is generated twice on the same instruction",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Fault on ENTER Instruction May Result in Unexpected Values on Stack Frame",
        "problem": "The ENTER instruction is used to create a procedure stack frame. Due to this erratum, if execution of the ENTER instruction results in a fault, the dynamic storage area of the resultant stack frame may contain unexpected values (i.e. residual stack data as a result of processing the fault).",
        "implication": "Data in the created stack frame may be altered following a fault on the ENTER instruction. Please refer to \"Procedure Calls For Block-Structured Languages\" in IA-32 Intel\u00ae Architecture Software Developer's Manual, Vol. 1, Basic Architecture, for information on the usage of the ENTER instructions. This erratum is not expected to occur in ring 3. Faults are usually processed in ring 0 and stack switch occurs when transferring to ring 0. Intel has not observed this erratum on any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IRET under Certain Conditions May Cause an Unexpected Alignment Check Exception",
        "problem": "In IA-32e mode, it is possible to get an Alignment Check Exception (#AC) on the IRET instruction even though alignment checks were disabled at the start of the IRET. This can only occur if the IRET instruction is returning from CPL3 code to CPL3 code. IRETs from CPL0/1/2 are not affected. This erratum can occur if the EFLAGS value on the stack has the AC flag set, and the interrupt handler's stack is misaligned. In IA-32e mode, RSP is aligned to a 16-byte boundary before pushing the stack frame.",
        "implication": "In IA-32e mode, under the conditions given above, an IRET can get a #AC even if alignment checks are disabled at the start of the IRET. This erratum can only be observed with a software generated stack frame.",
        "workaround": "Software should not generate misaligned stack frames for use with IRET.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "General Protection Fault (#GP) for Instructions Greater than 15 Bytes May be Preempted",
        "problem": "When the processor encounters an instruction that is greater than 15 bytes in length, a #GP is signaled when the instruction is decoded. Under some circumstances, the #GP fault may be preempted by another lower priority fault (e.g. Page Fault (#PF)). However, if the preempting lower priority faults are resolved by the operating system and the instruction retried, a #GP fault will occur.",
        "implication": "Software may observe a lower-priority fault occurring before or in lieu of a #GP fault. Instructions of greater than 15 bytes in length can only occur if redundant prefixes are placed before the instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "General Protection (#GP) Fault May Not Be Signaled on Data Segment Limit Violation above 4-G Limit",
        "problem": "In 32-bit mode, memory accesses to flat data segments (base = 00000000h) that occur above the 4G limit (0ffffffffh) may not signal a #GP fault.",
        "implication": "When such memory accesses occur in 32-bit mode, the system may not issue a #GP fault.",
        "workaround": "Software should ensure that memory accesses in 32-bit mode do not occur above the 4G limit (0ffffffffh).",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LBR, BTS, BTM May Report a Wrong Address when an Exception/ Interrupt Occurs in 64-bit Mode",
        "problem": "An exception/interrupt event should be transparent to the LBR (Last Branch Record), BTS (Branch Trace Store) and BTM (Branch Trace Message) mechanisms. However, during a specific boundary condition where the exception/interrupt occurs right after the execution of an instruction at the lower canonical boundary (0x00007FFFFFFFFFFF) in 64-bit mode, the LBR return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1's. Subsequent BTS and BTM operations which report the LBR will also be incorrect.",
        "implication": "LBR, BTS and BTM may report incorrect information in the event of an exception/ interrupt.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Events for Read Miss to Level 3 Cache Fill Occupancy Counter may be Incorrect",
        "problem": "Whenever an Level 3 cache fill conflicts with another request's address, the miss to fill occupancy counter, UNC_GQ_ALLOC.RT_LLC_MISS (Event 02H), will provide erroneous results.",
        "implication": "The Performance Monitoring UNC_GQ_ALLOC.RT_LLC_MISS event may count a value higher than expected. The extent to which the value is higher than expected is determined by the frequency of the L3 address conflict.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A VM Exit on MWAIT May Incorrectly Report the Monitoring Hardware as Armed",
        "problem": "A processor write to the address range armed by the MONITOR instruction may not immediately trigger the monitoring hardware. Consequently, a VM exit on a later MWAIT may incorrectly report the monitoring hardware as armed, when it should be reported as unarmed due to the write occurring prior to the MWAIT.",
        "implication": "If a write to the range armed by the MONITOR instruction occurs between the MONITOR and the MWAIT, the MWAIT instruction may start executing before the monitoring hardware is triggered. If the MWAIT instruction causes a VM exit, this could cause its exit qualification to incorrectly report 0x1. In the recommended usage model for MONITOR/MWAIT, there is no write to the range armed by the MONITOR instruction between the MONITOR and the MWAIT.",
        "workaround": "Software should never write to the address range armed by the MONITOR instruction between the MONITOR and the subsequent MWAIT.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Aliasing of Code Pages May Cause Unpredictable System Behavior",
        "problem": "The type of memory aliasing contributing to this erratum is the case where two different logical processors have the same code page mapped with two different memory types. Specifically, if one code page is mapped by one logical processor as write-back and by another as uncachable and certain instruction fetch timing conditions occur, the system may experience unpredictable behavior.",
        "implication": "The type of memory aliasing contributing to this erratum is the case where two different logical processors have the same code page mapped with two different memory types. Specifically, if one code page is mapped by one logical processor as write-back and by another as uncachable and certain instruction fetch timing conditions occur, the system may experience unpredictable behavior.",
        "workaround": "Code pages should not be mapped with uncacheable and cacheable memory types at the same time.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Delivery Status of the LINT0 Register of the Local Vector Table May be Lost",
        "problem": "The Delivery Status bit of the LINT0 Register of the Local Vector Table will not be restored after a transition out of C6 under the following conditions \u2022 LINT0 is programmed as level-triggered \u2022 The delivery mode is set to either Fixed or ExtINT \u2022 There is a pending interrupt which is masked with the interrupt enable flag (IF)",
        "implication": "Due to this erratum, the Delivery Status bit of the LINT0 Register will unexpectedly not be set. Intel has not observed this erratum with any commercially available software or system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event SEGMENT_REG_LOADS Counts Inaccurately",
        "problem": "The performance monitor event SEGMENT_REG_LOADS (Event 06H) counts instructions that load new values into segment registers. The value of the count may be inaccurate.",
        "implication": "The performance monitor event SEGMENT_REG_LOADS may reflect a count higher or lower than the actual number of events.",
        "workaround": "None identifed.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "#GP on Segment Selector Descriptor that Straddles Canonical Boundary May Not Provide Correct Exception Error Code",
        "problem": "During a #GP (General Protection Exception), the processor pushes an error code on to the exception handler\u2019s stack. If the segment selector descriptor straddles the canonical boundary, the error code pushed onto the stack may be incorrect.",
        "implication": "An incorrect error code may be pushed onto the stack. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Improper Parity Error Signaled in the IQ Following Reset When a Code Breakpoint is set on a #GP Instruction",
        "problem": "While coming out of cold reset or exiting from C6, if the processor encounters an instruction longer than 15 bytes (which causes a #GP) and a code breakpoint is enabled on that instruction, an IQ (Instruction Queue) parity error may be incorrectly logged resulting in an MCE (Machine Check Exception).",
        "implication": "When this erratum occurs, an MCE may be incorrectly signaled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Enabled Debug Breakpoint or Single Step Trap May Be Taken after MOV SS/POP SS Instruction if it is Followed by an Instruction That Signals a Floating Point Exception",
        "problem": "A MOV SS/POP SS instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction. This is intended to allow the sequential execution of MOV SS/POP SS and MOV [r/e]SP, [r/e]BP instructions without having an invalid stack during interrupt handling. However, an enabled debug breakpoint or single step trap may be taken after MOV SS/POP SS if this instruction is followed by an instruction that signals a floating point exception rather than a MOV [r/e]SP, [r/e]BP instruction. This results in a debug exception being signaled on an unexpected instruction boundary since the MOV SS/POP SS and the following instruction should be executed automatically.",
        "implication": "This can result in incorrect signaling of a debug exception and possibly a mismatched Stack Segment and Stack Pointer. If MOV SS/POP SS is not followed by a MOV [r/e]SP, [r/e]BP, there may be a mismatched Stack Segment and Stack Pointer on any exception. Intel has not observed this erratum with any commercially available software or system.",
        "workaround": "As recommended in the IA32 Intel\u00ae Architecture Software Developer\u2019s Manual, the use of MOV SS/POP SS in conjunction with MOV [r/e]SP, [r/e]BP will avoid the failure since the MOV [r/e]SP, [r/e]BP will not generate a floating point exception. Developers of debug tools should be aware of the potential incorrect debug event signaling created by this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_MPERF Counter Stops Counting During On-Demand TM1",
        "problem": "According to the Intel\u00ae 64 and IA-32 Architectures Software Developer\u2019s Manual Volume 3A: System Programming Guide, the ratio of IA32_MPERF (MSR E7H) to IA32_APERF (MSR E8H) should reflect actual performance while TM1 or on-demand throttling is activated. Due to this erratum, IA32_MPERF MSR stops counting while TM1 or on-demand throttling is activated, and the ratio of the two will indicate higher processor performance than actual.",
        "implication": "The incorrect ratio of IA32_APERF/IA32_MPERF can mislead software P-state (performance state) management algorithms under the conditions described above. It is possible for the Operating System to observe higher processor utilization than actual, which could lead the OS into raising the P-state. During TM1 activation, the OS P-state request is irrelevant and while on-demand throttling is enabled, it is expected that the OS will not be changing the P-state. This erratum should result in no practical implication to software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Over Count Correctable Cache MESI State Errors",
        "problem": "Under a specific set of conditions, correctable Level 2 cache hierarchy MESI state errors may be counted more than once per occurrence of a correctable error.",
        "implication": "Correctable Level 2 cache hierarchy MESI state errors may be reported in the MCi_STATUS register at a rate higher than their actual occurrence.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Synchronous Reset of IA32_APERF/IA32_MPERF Counters on Overflow Does Not Work",
        "problem": "When either the IA32_MPERF or IA32_APERF MSR (E7H, E8H) increments to its maximum value of 0xFFFF_FFFF_FFFF_FFFF, both MSRs are supposed to synchronously reset to 0x0 on the next clock. This synchronous reset does not work. Instead, both MSRs increment and overflow independently.",
        "implication": "Software cannot rely on synchronous reset of the IA32_APERF/IA32_MPERF registers.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Disabling Thermal Monitor While Processor is Hot, Then Re-enabling, May Result in Stuck Core Operating Ratio",
        "problem": "If a processor is at its TCC (Thermal Control Circuit) activation temperature and then Thermal Monitor is disabled by a write to IA32_MISC_ENABLES MSR (1A0H) bit [3], a subsequent re-enable of Thermal Monitor will result in an artificial ceiling on the maximum core P-state. The ceiling is based on the core frequency at the time of Thermal Monitor disable. This condition will only correct itself once the processor reaches its TCC activation temperature again.",
        "implication": "Since Intel requires that Thermal Monitor be enabled in order to be operating within specification, this erratum should never be seen during normal operation.",
        "workaround": "Software should not disable Thermal Monitor during processor operation.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The PECI Throttling Counter May Not be Accurate",
        "problem": "Under certain throttling circumstances, the PECI (Platform Environment Control Interface) throttling counter may not be accurate. If the throttling counter is zero, then the counter accurately reflects that throttling never occurred.",
        "implication": "If the PECI throttle counter is non-zero, it may not be accurate.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PECI Does Not Support PCI Configuration Reads/Writes to Misaligned Addresses",
        "problem": "The PECI (Platform Environment Control Interface) specification allows for partial reads from or writes to misaligned addresses within the PCI configuration space. However, the PECI client does not properly interpret addresses that are Dword (4 byte) misaligned and may read or write incorrect data.",
        "implication": "Due to this erratum, writes to or reads from Dword misaligned addresses could result in unintended side effects and unpredictable behavior.",
        "workaround": "PECI host controllers may issue byte, word and Dword reads and writes as long as they are aligned to Dword addresses.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "OVER Bit for IA32_MCi_STATUS Register May Get Set on Specific lnternal Error",
        "problem": "If a specific type of internal unclassified error is detected, as identified by IA32_MCi_STATUS.MCACOD=0x0405, the IA32_MCi_ STATUS.OVER (overflow) bit [62] may be erroneously set.",
        "implication": "The OVER bit of the MCi_STATUS register may be incorrectly set for a specific internal unclassified error.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing the Local Vector Table (LVT) when an Interrupt is Pending May Cause an Unexpected Interrupt",
        "problem": "If a local interrupt is pending when the LVT entry is written, an interrupt may be taken on the new interrupt vector even if the mask bit is set.",
        "implication": "An interrupt may immediately be generated with the new vector when a LVT entry is written, even if the new LVT entry has the mask bit set. If there is no Interrupt Service Routine (ISR) set up for that vector the system will GP fault. If the ISR does not do an End of Interrupt (EOI) the bit for the vector will be left set in the in-service register and mask all interrupts at the same or lower priority.",
        "workaround": "Any vector programmed into an LVT entry must have an ISR associated with it, even if that vector was programmed as masked. This ISR routine must do an EOI to clear any unexpected interrupts that may occur. The ISR associated with the spurious vector does not generate an EOI, therefore the spurious vector should not be used when writing the LVT.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Processor Core May Not Wake Up from S1 State",
        "problem": "If there is an interrupt pended at the same time as the package is entering S1 and one of the cores in the package is entering C3, it is possible that the core entering C3 may not wake up from the S1 state.",
        "implication": "Due to this erratum, the processor core may not wake up from S1 state.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Reading Reserved APIC Registers May Not Signal an APIC Error",
        "problem": "Reads of reserved APIC registers in xAPIC compatibility mode should signal an APIC error with the Illegal Register Address bit [11] set in the Error Status Register (offset 0x280). Due to the erratum, the error is neither logged nor signaled.",
        "implication": "A reserved APIC register access error interrupt may not be logged or signaled, even though the APIC error interrupt is enabled, on a read of a reserved APIC register.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Logical Processor Receiving a SIPI after a VM Entry into WFS State May Become Unresponsive",
        "problem": "A logical processor may become unresponsive after receiving a SIPI (Start-up Interprocessor Interrupt) following a VM Entry into a WFS (Wait-for-SIPI) state.",
        "implication": "The logical processor that receives a SIPI while in the WFS state may stop responding.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Controller May Deliver Incorrect Data When Memory Ranks Are In Power-Down",
        "problem": "When one or more memory ranks are in Power-Down (as controlled by MC_CHANNEL_{0,1,2}_CKE_TIMING CSR parameters), certain memory access patterns may result in incorrect data.",
        "implication": "Due this erratum, incorrect data may result.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Faulting MMX Instruction May Incorrectly Update x87 FPU Tag Word",
        "problem": "Under a specific set of conditions, MMX stores (MOVD, MOVQ, MOVNTQ, MASKMOVQ) which cause memory access faults (#GP, #SS, #PF, or #AC), may incorrectly update the x87 FPU tag word register. This erratum will occur when the following additional conditions are also met. \u2022 The MMX store instruction must be the first MMX instruction to operate on x87 FPU state (i.e. the x87 FP tag word is not already set to 0x0000). \u2022 For MOVD, MOVQ, MOVNTQ stores, the instruction must use an addressing mode that uses an index register (this condition does not apply to MASKMOVQ).",
        "implication": "If the erratum conditions are met, the x87 FPU tag word register may be incorrectly set to a 0x0000 value when it should not have been modified.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Floating-Point Store Instruction May Cause an Unexpected x87 FPU Floating-Point Error (#MF)",
        "problem": "If a floating-point store instruction (FST or FSTP) causes an inexact-result exception (#P) and such exceptions are unmasked, the next \u201cwaiting\u201d x87 FPU instruction or WAIT/FWAIT instruction will incur an x87 FPU Floating-Point Error (#MF). Due to this erratum, the #MF may occur prematurely and prevent the floating-point store instruction from executing. This may occur when the logical processor is in VMX non- root operation and either (1) the \u201cuse EPT\u201d VM-execution control is 1; or (2) the \u201cvirtual APIC accesses\u201d VM-execution control is 1 and the store is to the APIC-access page.",
        "implication": "Due to this erratum, a floating-point store instruction may cause a #MF that should be held pending until the next \u201cwaiting\u201d x87 FPU instruction or WAIT/FWAIT instruction.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect TLB Translation May Occur After Exit from C6",
        "problem": "Under certain conditions when C6 and two logical processors on the same core are enabled on a processor, an instruction fetch occurring after a logical processor exits from C6 may incorrectly use the translation lookaside buffer (TLB) address mapping belonging to the other logical processor in the processor core.",
        "implication": "When this erratum occurs, unpredictable behavior may result.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "USB 1.1 ISOCH Audio Glitches with Intel\u00ae QuickPath Interconnect Locks and Deep C-States",
        "problem": "An interrupt directed at a Core in C3 or C6 that collides with an Intel\u00ae QuickPath Interconnect Lock sequence may delay ISOCH transactions to DRAM long enough to underrun USB 1.1 buffers.",
        "implication": "USB 1.1 Audio devices may have audio glitches.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Stack Pointer May Become Incorrect In Loops with Unbalanced Push and Pop Operations",
        "problem": "If a loop has an unbalanced number of Push and Pop operations, under a specific set of conditions, it is possible that the stack pointer (SP/ESP/RSP) may become incorrect.",
        "implication": "When this erratum occurs, unpredictable behavior may result. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A P-state Change While another Core is in C6 May Prevent Further C- state and P-state Transitions",
        "problem": "Under a specific set of conditions, when one core is in C6 and another core transitions from Pn to a non-Pn ratio, further C-state and P-state changes may be blocked.",
        "implication": "The processor may stop responding to additional requests for deeper sleep state or ratio changes.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Store Parity Errors May Not Log Correct Address in IA32_MCi_ADDR",
        "problem": "When store parity errors in the Level 0 hierarchy (as defined in the LL subfield of the IA32_MCi_STATUS MSR) occur, it is possible that the address of the error will not be logged in IA32_MCi_ADDR MSR. The error itself will be logged properly.",
        "implication": "The address in IA32_MCi_ADDR may be incorrect after certain store parity errors occur.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "xAPIC Timer May Decrement Too Quickly Following an Automatic Reload While in Periodic Mode",
        "problem": "When the xAPIC Timer is automatically reloaded by counting down to zero in periodic mode, the xAPIC Timer may slip in its synchronization with the external clock. The xAPIC timer may be shortened by up to one xAPIC timer tick.",
        "implication": "When the xAPIC Timer is automatically reloaded by counting down to zero in periodic mode, the xAPIC Timer may slip in its synchronization with the external clock. The xAPIC timer may be shortened by up to one xAPIC timer tick.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Undefined Opcodes Crossing a Segment Limit May Result in #UD Instead of #GP Exception",
        "problem": "Processor may take a #UD (Invalid Opcode) exception instead of a #GP (General Protection) exception when certain undefined opcodes (opcodes 0F 01 D0 - 0F 01 D5) extend beyond the segment limit.",
        "implication": "Due to this erratum, processor may not take a #GP exception in this situation.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Indication of A20M Support is Inverted",
        "problem": "The value read back from VLW_CAPABILITY MSR (1F0H) bit [1] (A20M support) is inverted. Therefore, reading back a \u20181\u2019 (which should indicate A20M is supported) actually indicates A20M is not supported, and vice versa.",
        "implication": "Software relying on this bit to determine whether A20M feature is supported by the processor will read back the opposite value of what is supported.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Reported Memory Type May Not Be Used to Access the VMCS and Referenced Data Structures",
        "problem": "Bits 53:50 of the IA32_VMX_BASIC MSR report the memory type that the processor uses to access the VMCS and data structures referenced by pointers in the VMCS. Due to this erratum, a VMX access to the VMCS or referenced data structures will instead use the memory type that the MTRRs (memory-type range registers) specify for the physical address of the access.",
        "implication": "Bits 53:50 of the IA32_VMX_BASIC MSR report that the WB (write-back) memory type will be used but the processor may use a different memory type.",
        "workaround": "Software should ensure that the VMCS and referenced data structures are located at physical addresses that are mapped to WB memory type by the MTRRs.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "After VM Entry, Instructions May Incorrectly Operate as if CS.D=0",
        "problem": "If bit 13 (L) and bit 14 (D/B) of the guest CS access rights field in the VMCS are both 1 and VM entry takes the processor out of IA-32e mode, instructions executed after VM entry may operate as if CS.D=0.",
        "implication": "Instructions executed after VM entry may use the wrong operation size. Intel has not observed this erratum with any commercially available system.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Spurious Machine Check Error May Occur When Logical Processor is Woken Up",
        "problem": "The first time a logical processor is woken up after power on (including resume from system sleep states) an Internal Parity Error may be detected and logged when no real parity error occurred.",
        "implication": "When this erratum occurs, a spurious Internal Parity Error may be logged. However, no machine check exception will be signaled in this case.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "B0-B3 Bits in DR6 For Non-Enabled Breakpoints May be Incorrectly Set",
        "problem": "Some of the B0-B3 bits (breakpoint conditions detect flags, bits [3:0]) in DR6 may be incorrectly set for non-enabled breakpoints when the following sequence happens: 1. MOV or POP instruction to SS (Stack Segment) selector 2. Next instruction is FP (Floating Point) that gets FP assist 3. Another instruction after the FP instruction completes successfully 4. A breakpoint occurs due to either a data breakpoint on the preceding instruction or a code breakpoint on the next instruction. Due to this erratum a non-enabled breakpoint triggered on step 1 or step 2 may be reported in B0-B3 after the breakpoint occurs in step 4.",
        "implication": "Due to this erratum, B0-B3 bits in DR6 may be incorrectly set for non-enabled breakpoints.",
        "workaround": "Software should not execute a floating point instruction directly after a MOV SS or POP SS instruction.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Core C6 May Clear Previously Logged TLB Errors",
        "problem": "Following an exit from core C6, previously logged TLB (Translation Lookaside Buffer) errors in IA32_MCi_STATUS may be cleared.",
        "implication": "Due to this erratum, TLB errors logged in the associated machine check bank prior to core C6 entry may be cleared. Provided machine check exceptions are enabled, the machine check exception handler can log any uncorrectable TLB errors prior to core C6 entry. The TLB marks all detected errors as uncorrectable.",
        "workaround": "As long as machine check exceptions are enabled, the machine check exception handler can log the TLB error prior to core C6 entry. This will ensure the error is logged before it is cleared.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang When Two Logical Processors Are in Specific Low Power States",
        "problem": "When two logical processors in a physical core have entered the C1 and C6 idle states respectively, it is possible that the processor may hang and log a machine check error with IA32_MCi_STATUS.MCACOD = 0x0106. The error does not occur when either core has entered C3 or when both logical processors enter the same idle state.",
        "implication": "Due to this erratum, a hang may occur and a machine check may be logged while two logical processors are in a low power state.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MOVNTDQA from WC Memory May Pass Earlier Locked Instructions",
        "problem": "An execution of MOVNTDQA that loads from WC (write combining) memory may appear to pass an earlier locked instruction to a different cache line.",
        "implication": "Software that expects a lock to fence subsequent MOVNTDQA instructions may not operate properly. If the software does not rely on locked instructions to fence the subsequent execution of MOVNTDQA then this erratum does not apply.",
        "workaround": "Software that requires a locked instruction to fence subsequent executions of MOVNTDQA should insert an LFENCE instruction before the first execution of MOVNTDQA following the locked instruction. If there is already a fencing or serializing instruction between the locked instruction and the MOVNTDQA, then an additional LFENCE is not necessary.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event MISALIGN_MEM_REF May Over Count",
        "problem": "The MISALIGN_MEM_REF Performance Monitoring (Event 05H) may over count memory misalignment events, possibly by orders of magnitude.",
        "implication": "Software relying on MISALIGN_MEM_REF to count cache line splits for optimization purposes may read excessive number of memory misalignment events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Changing the Memory Type for an In-Use Page Translation May Lead to Memory-Ordering Violations",
        "problem": "Under complex microarchitectural conditions, if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers, software may see load operations execute out of order.",
        "implication": "Memory ordering may be violated. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should ensure pages are not being actively used before requesting their memory type be changed.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Writes to IA32_CR_PAT or IA32_EFER MSR May Cause an Incorrect ITLB Translation",
        "problem": "Under certain conditions, writes to IA32_CR_PAT (277H) or IA32_EFER (C0000080H) MSRs may result in an incorrect ITLB (instruction translation lookaside buffer) translation.",
        "implication": "Due this erratum, unpredictable system behavior may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The \"Virtualize APIC Accesses\" VM-Execution Control May be Ignored",
        "problem": "If a VM exit occurs while the \u201cvirtualize APIC accesses\u201d and \u201cenable VPID\u201d VM- execution controls are both 1 and the VM-exit MSR-store count is not 0, the logical processor may operate as if the \u201cvirtualize APIC accesses\u201d VM-execution control was 0 following a subsequent VM entry.",
        "implication": "This erratum may prevent VMM software from virtualizing memory-mapped APIC accesses if it is using VPIDs (virtual-processor identifiers) and is saving MSRs on VM exits.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "C6 Transitions May Cause Spurious Updates to the xAPIC Error Status Register",
        "problem": "If any of the LVT entries are not initialized, reads from xAPIC Error Status Register following a C6 transition may report a spurious illegal vector received.",
        "implication": "Due to this erratum, reads to xAPIC Error Status Register may report illegal vector received when none was actually received.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Critical ISOCH Traffic May Cause Unpredictable System Behavior When Write Major Mode Enabled",
        "problem": "Under a specific set of conditions, critical ISOCH (isochronous) traffic may cause unpredictable system behavior with write major mode enabled.",
        "implication": "Due to this erratum unpredictable system behavior may occur.",
        "workaround": "Write major mode must be disabled in the BIOS by writing the write major mode threshold value to its maximum value of 1FH in ISOCHEXITTRESHOLD bits [19:15], ISOCHENTRYTHRESHOLD bits [14:10], WMENTRYTHRESHOLD bits [9:5], and WMEXITTHRESHOLD bits [4:0] of the MC_CHANNEL_{0,1,2}_WAQ_PARAMS register.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Running with Write Major Mode Disabled May Lead to a System Hang",
        "problem": "With write major mode disabled, reads will be favored over writes and under certain circumstances this can lead to a system hang.",
        "implication": "Due to this erratum a system hang may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Controller Address Parity Error Injection Does Not Work Correctly",
        "problem": "When MC_CHANNEL_{0,1,2}_ECC_ERROR_INJECT.INJECT_ADDR_PARITY bit [4] = 1 an error may be injected on any command on the channel and not just RD or WR CAS commands that match MC_CHANNEL_{0,1,2}_ADDR_MATCH.",
        "implication": "Address parity error injection cannot be used to reliably target a DIMM or memory location within a channel. When the address parity errors occur, the IA32_MCi_MISC register reflects the DIMM ID of the DIMM that detected error and not necessarily the DIMM that was targeted by the error injection settings.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Controller Opportunistic Refreshes Might be Missed",
        "problem": "If a system meets all 3 conditions below, opportunistic refresh capability might be degraded. 1. 2x refresh enabled and opportunistic refreshes enabled through tTHROT_OPPREFRESH field in the MC_CHANNEL_{0,1,2}_REFRESH_TIMING 2. DDR3-800 DIMMS or DDR3-1066 DIMMS with tREFI value programmed more than 5% lower than the nominal value 3. More than 2 DIMMs populated",
        "implication": "Due to this erratum, a corner condition can cause a persistent degradation of opportunistic refresh capability.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Delivery of Certain Events Immediately Following a VM Exit May Push a Corrupted RIP onto the Stack",
        "problem": "If any of the following events is delivered immediately following a VM exit to 64-bit mode from outside 64-bit mode, bits 63:32 of the RIP value pushed on the stack may be cleared to 0: 1. A non-maskable interrupt (NMI) 2. A machine-check exception (#MC) 3. A page fault (#PF) during instruction fetch, or 4. A general-protection exception (#GP) due to an attempt to decode an instruction whose length is greater than 15 bytes.",
        "implication": "Unexpected behavior may occur due to the incorrect value of the RIP on the stack. Specifically, return from the event handler via IRET may encounter an unexpected page fault or may begin fetching from an unexpected code address.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Combination of a Bus Lock and a Data Access that is Split Across Page Boundaries May Lead to Processor Livelock",
        "problem": "Under certain complex micro-architectural conditions, the coincidence of a bus lock initiated by one logical processor of an Intel\u00ae Hyper-Threading Technology enabled processor core and data accesses that are split across page boundaries, initiated on the other logical processor on the same core, may lead to processor livelock.",
        "implication": "Due to this erratum, a livelock may occur that can only be terminated by a processor reset. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "CPUID Instruction Returns Incorrect Brand String",
        "problem": "When a CPUID instruction is executed with EAX = 80000002H, 80000003H and 80000004H, the return values contain the brand string \u201cIntel(R) Core(TM) CPU\u201d when it should have \u201cIntel(R) Core(TM) i7 CPU\u201d. In addition, the processor number will be incorrect. The return value will be will have an additional zero between the processor number and the @ symbol (for example: \u201cIntel(R) Core(TM) CPU nnn0 @ x.xx GHz\u201d where nnn is a processor number and x.xx is the frequency).",
        "implication": "When this erratum occurs, the processor will report the incorrect brand string.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "An Unexpected Page Fault May Occur Following the Unmapping and Re-mapping of a Page",
        "problem": "An unexpected page fault (#PF) may occur for a page under the following conditions: \u2022 The paging structures initially specify a valid translation for the page. \u2022 Software modifies the paging structures so that there is no valid translation for the page (e.g., by clearing to 0 the present bit in one of the paging-structure entries used to translate the page). \u2022 Software later modifies the paging structures so that the translation is again a valid translation for the page (e.g., by setting to 1 the bit that was cleared earlier). \u2022 A subsequent instruction loads from a linear address on the page. \u2022 Software did not invalidate TLB entries for the page between the first modification of the paging structures and the load from the linear address. In this case, the load bye the later instruction may cause a page fault that indicates that there is no translation for the page.",
        "implication": "Software may see an unexpected page fault that indicates that there is no translation for the page.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Two xAPIC Timer Event Interrupts May Unexpectedly Occur",
        "problem": "If an xAPIC timer event is enabled and while counting down the current count reaches 1 at the same time that the processor thread begins a transition to a low power C- state, the xAPIC may generate two interrupts instead of the expected one when the processor returns to C0.",
        "implication": "Due to this erratum, two interrupts may unexpectedly be generated by an xAPIC timer event.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "EOI Transaction May Not be Sent if Software Enters Core C6 During an Interrupt Service Routine",
        "problem": "If core C6 is entered after the start of an interrupt service routine but before a write to the APIC EOI (End of Interrupt) register, and the core is woken up by an event other than a fixed interrupt source the core may drop the EOI transaction the next time APIC EOI register is written and further interrupts from the same or lower priority level will be blocked.",
        "implication": "EOI transactions may be lost and interrupts may be blocked when core C6 is used during interrupt service routines.",
        "workaround": "Software should check the ISR register and if any interrupts are in service only enter C1.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "FREEZE_WHILE_SMM Does Not Prevent Event From Pending PEBS During SMM",
        "problem": "In general, a PEBS record should be generated on the first count of the event after the counter has overflowed. However, IA32_DEBUGCTL_MSR.FREEZE_WHILE_SMM (MSR 1D9H, bit [14]) prevents performance counters from counting during SMM (System Management Mode). Due to this erratum, if 1. A performance counter overflowed before an SMI 2. A PEBS record has not yet been generated because another count of the event has not occurred 3. The monitored event occurs during SMM then a PEBS record will be saved after the next RSM instruction. When FREEZE_WHILE_SMM is set, a PEBS should not be generated until the event occurs outside of SMM.",
        "implication": "A PEBS record may be saved after an RSM instruction due to the associated performance counter detecting the monitored event during SMM; even when FREEZE_WHILE_SMM is set.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS Records For Load Latency Monitoring May Contain an Incorrect Linear Address",
        "problem": "The load latency performance monitoring feature stores information about a load into a record in the PEBS (Precise event-based sampling) buffer in the DS save area. This information includes the Data Source Encoding, Latency Value, and Data Linear Address of the load causing the performance counter to overflow. Under certain conditions it is possible for the linear address to be incorrect.",
        "implication": "The linear address reported by the load latency performance monitoring feature for PEBS may be incorrect.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS Field \u201cData Linear Address\u201d is Not Sign Extended to 64 Bits",
        "problem": "The Data Linear Address field of the PEBS (Precise Event-Based Sampling) record is not correctly sign extended to 64 bits and may appear as a non-canonical address when observed in the PEBS record.",
        "implication": "The PEBS Data Linear Address field may not have the sign bit correctly extended to bits [63:48].",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Core C6 May Not Operate Correctly in the Presence of Bus Locks",
        "problem": "The processor state may be incorrect after core C6 exit if system bus locks are in progress at the time of core C6 entry.",
        "implication": "The processor may begin fetching from the wrong address or have incorrect state after an exit from core C6.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Turbo Boost Technology May be Limited Immediately After Package C-state Exit with Intel\u00ae QPI L1 Mode Disabled",
        "problem": "If the processor is resident in package C3 or C6 for greater than 100ms and Intel\u00ae QPI (Intel\u00ae QuickPath Interconnect) link L1 mode is disabled, it is possible for Intel\u00ae Turbo Boost Technology input parameters to be incorrect. As a result, on exit from the package C-state the processor may not enter Turbo Boost for up to 2 ms.",
        "implication": "Turbo Boost may be limited after exiting a package C-state (C3 and C6) that lasted longer than 100 ms.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "APIC Error \u201cReceived Illegal Vector\u201d May be Lost",
        "problem": "APIC (Advanced Programmable Interrupt Controller) may not update the ESR (Error Status Register) flag Received Illegal Vector bit [6] properly when an illegal vector error is received on the same internal clock that the ESR is being written (as part of the write-read ESR access flow). The corresponding error interrupt will also not be generated for this case.",
        "implication": "Due to this erratum, an incoming illegal vector error may not be logged into ESR properly and may not generate an error interrupt.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "CPUID Incorrectly Indicates the UnHalted Reference Cycle Architectural Event is Supported",
        "problem": "The architectural performance monitoring event for UnHalted Reference Cycles (3CH, Umask 01H) is not supported on the processor. The CPUID instruction, when executed with EAX = 0AH, should return bit 2 of EBX as 1 to indicate that this event is not supported. Due to this erratum, CPUID will improperly return bit 2 as 0.",
        "implication": "Software relying on the CPUID instruction to determine support of the UnHalted Reference Cycles event will incorrectly assume the event is available.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Architectural Performance Monitor Event \u2018Branch Misses Retired\u2019 is Counted Incorrectly",
        "problem": "The Architectural Performance Monitor Event \u2018branch misses retired\u2019 (Event C5H) is not counted correctly and may result in an under count or an over count.",
        "implication": "The Architectural Performance Monitor Event \u2018branch misses retired\u2019 will not show accurate results when counted.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum which reports via CPUID that this event is not available.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "DR6.B0-B3 May Not Report All Breakpoints Matched When a MOV/POP SS is Followed by a Store Instruction",
        "problem": "Normally, data breakpoints matches that occur on a MOV SS, r/m or POP SS will not cause a debug exception immediately after MOV/POP SS but will be delayed until the instruction boundary following the next instruction is reached. After the debug exception occurs, DR6.B0-B3 bits will contain information about data breakpoints matched during the MOV/POP SS as well as breakpoints detected by the following instruction. Due to this erratum, DR6.B0-B3 bits may not contain information about data breakpoints matched during the MOV/POP SS when the following instruction is a store instruction.",
        "implication": "When this erratum occurs, DR6 may not contain information about all breakpoints matched. This erratum will not be observed under the recommended usage of the MOV SS,r/m or POP SS instructions (i.e., following them only with an instruction that writes (E/R)SP).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Uncorrectable Error Logged in IA32_CR_MC2_STATUS May also Result in a System Hang",
        "problem": "Uncorrectable errors logged in IA32_CR_MC2_STATUS MSR (409H) may also result in a system hang causing an Internal Timer Error (MCACOD = 0x0400h) to be logged in another machine check bank (IA32_MCi_STATUS).",
        "implication": "Uncorrectable errors logged in IA32_CR_MC2_STATUS can further cause a system hang and an Internal Timer Error to be logged.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_PERF_GLOBAL_CTRL MSR May be Incorrectly Initialized",
        "problem": "The IA32_PERF_GLOBAL_CTRL MSR (38FH) bits [34:32] may be incorrectly set to 7H after reset; the correct value should be 0H.",
        "implication": "The IA32_PERF_GLOBAL_CTRL MSR bits [34:32] may be incorrect after reset (EN_FIXED_CTR{0, 1, 2} may be enabled).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Interrupts Generated From Uncore Fixed Counters (394H) May be Ignored",
        "problem": "Performance monitor interrupts (PMI\u2019s) from Uncore fixed counters are ignored when Uncore general performance monitor counters 3B0H-3BFH are not programmed.",
        "implication": "This erratum blocks a usage model in which each of the cores can sample its own performance monitor events synchronously based on single interrupt from the Uncore.",
        "workaround": "Program any one of the Uncore general performance monitor counters with a valid performance monitor event and enable the event by setting the local enable bit in the corresponding performance monitor event select MSR. For the usage model where no counting is desired, program that Uncore general performance counter's global enable bit to be zero.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processors with SMT May Hang on P-State Transition or ACPI Clock Modulation Throttling",
        "problem": "When SMT is enabled, it is possible that a P-state transition or ACPI clock modulation throttling may hang and log a machine check error with IA32_MCi_STATUS.MCACOD = 0x0150. This hang condition requires a specific sequence of instructions coincident with the P-state or ACPI event.",
        "implication": "When this erratum occurs, the processor will unexpectedly hang. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Counter MEM_INST_RETIRED.STORES May Count Higher than Expected",
        "problem": "Performance Monitoring counter MEM_INST_RETIRED.STORES (Event: 0BH, Umask: 02H) is used to track retired instructions which contain a store operation. Due to this erratum, the processor may also count other types of instructions including WRMSR and MFENCE.",
        "implication": "Performance Monitoring counter MEM_INST_RETIRED.STORES may report counts higher than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Sleeping Cores May Not be Woken Up on Logical Cluster Mode Broadcast IPI Using Destination Field Instead of Shorthand",
        "problem": "If software sends a logical cluster broadcast IPI using a destination shorthand of 00B (No Shorthand) and writes the cluster portion of the Destination Field of the Interrupt Command Register to all ones while not using all 1s in the mask portion of the Destination Field, target cores in a sleep state that are identified by the mask portion of the Destination Field may not be woken up. This erratum does not occur if the destination shorthand is set to 10B (All Including Self) or 11B (All Excluding Self).",
        "implication": "When this erratum occurs, cores which are in a sleep state may not wake up to handle the broadcast IPI. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Use destination shorthand of 10B or 11B to send broadcast IPIs.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Faulting Executions of FXRSTOR May Update State Inconsistently",
        "problem": "The state updated by a faulting FXRSTOR instruction may vary from one execution to another.",
        "implication": "Software that relies on x87 state or SSE state following a faulting execution of FXRSTOR may behave inconsistently.",
        "workaround": "Software handling a fault on an execution of FXRSTOR can compensate for execution variability by correcting the cause of the fault and executing FXRSTOR again.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unexpected Intel\u00ae QPI Link Behavior May Occur When a CRC Error Happens During L0s",
        "problem": "When a QPI (Intel QuickPath Interconnect) agent requests L0s entry while a CRC (Cyclic Redundancy Check) error occurs during this flit or on the flit just before it, the requesting QPI agent may enter L0s and turn its drivers off. During this time noise on the link may be interpreted as a QPI command by the remote QPI agent, and may result in unexpected behavior.",
        "implication": "Unexpected QPI link behavior may occur when CRC error happens on or just before L0s entry request.",
        "workaround": "Disable L0s.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event EPT.EPDPE_MISS May be Counted While EPT is Disabled",
        "problem": "Performance monitor event EPT.EPDPE_MISS (Event: 4FH, Umask: 08H) is used to count Page Directory Pointer table misses while EPT (extended page tables) is enabled. Due to this erratum, the processor will count Page Directory Pointer table misses regardless of whether EPT is enabled or not.",
        "implication": "Due to this erratum, performance monitor event EPT.EPDPE_MISS may report counts higher than expected.",
        "workaround": "Software should ensure this event is only enabled while in EPT mode.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Counters May Count Incorrectly",
        "problem": "Under certain circumstances, a general purpose performance counter, IA32_PMC0-4 (C1H \u2013 C4H), may count at core frequency or not count at all instead of counting the programmed event.",
        "implication": "The Performance Monitor Counter IA32_PMCx may not properly count the programmed event. Due to the requirements of the workaround there may be an interruption in the counting of a previously programmed event during the programming of a new event.",
        "workaround": "Before programming the performance event select registers, IA32_PERFEVTSELx MSR (186H \u2013 189H), the internal monitoring hardware must be cleared. This is accomplished by first disabling, saving valid events and clearing from the select registers, then programming three event values 0x4300D2, 0x4300B1 and 0x4300B5 into the IA32_PERFEVTSELx MSRs, and finally continuing with new event programming and restoring previous programming if necessary. Each performance counter, IA32_PMCx, must have its corresponding IA32_PREFEVTSELx MSR programmed with at least one of the event values and must be enabled in IA32_PERF_GLOBAL_CTRL MSR (38FH) bits [3:0]. All three values must be written to either the same or different IA32_PERFEVTSELx MSRs before programming the performance counters. Note that the performance counter will not increment when its IA32_PERFEVTSELx MSR has a value of 0x4300D2, 0x4300B1 or 0x4300B5 because those values have a zero UMASK field (bits [15:8]).",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Forward Progress Mechanism Interacting With Certain MSR/CSR Writes May Cause Unpredictable System Behavior",
        "problem": "Under specific internal conditions, a mechanism within the processor to ensure forward progress may interact with writes to a limited set of MSRs/CSRs and consequently may lead to unpredictable system behavior.",
        "implication": "This erratum may cause unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "USB 1.1 Isoch Memory Latencies May Increase During Package C3/C6 Transitions",
        "problem": "USB 1.1 Isoch memory response latencies may increase during package C3/C6 transitions due to non-optimal C3/C6 Exit operation.",
        "implication": "Increased Isoch latencies may cause perturbations in system operation. (ex: audio glitches).",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Incorrectly Demote Processor C6 State to a C3 State",
        "problem": "The auto demotion feature on the processor demotes processor C6 C-state requests to C3 in a more aggressive manner than expected, leading to low C6 residency.",
        "implication": "Due to this erratum, the system may exhibit higher than expected idle power due to low C6 residency.",
        "workaround": "It possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event Offcore_response_0 (B7H) Does Not Count NT Stores to Local DRAM Correctly",
        "problem": "When a IA32_PERFEVTSELx MSR is programmed to count the Offcore_response_0 event (Event:B7H), selections in the OFFCORE_RSP_0 MSR (1A6H) determine what is counted. The following two selections do not provide accurate counts when counting NT (Non-Temporal) Stores: - OFFCORE_RSP_0 MSR bit [14] is set to 1 (LOCAL_DRAM) and bit [7] is set to 1 (OTHER): NT Stores to Local DRAM are not counted when they should have been. - OFFCORE_RSP_0 MSR bit [9] is set to (OTHER_CORE_HIT_SNOOP) and bit [7] is set to 1 (OTHER): NT Stores to Local DRAM are counted when they should not have been.",
        "implication": "The counter for the Offcore_response_0 event may be incorrect for NT stores.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "EFLAGS Discrepancy on Page Faults and on EPT-Induced VM Exits after a Translation Change",
        "problem": "This erratum is regarding the case where paging structures are modified to change a linear address from writable to non-writable without software performing an appropriate TLB invalidation. When a subsequent access to that address by a specific instruction (ADD, AND, BTC, BTR, BTS, CMPXCHG, DEC, INC, NEG, NOT, OR, ROL/ROR, SAL/SAR/SHL/SHR, SHLD, SHRD, SUB, XOR, and XADD) causes a page fault or an EPT- induced VM exit, the value saved for EFLAGS may incorrectly contain the arithmetic flag values that the EFLAGS register would have held had the instruction completed without fault or VM exit. For page faults, this can occur even if the fault causes a VM exit or if its delivery causes a nested fault.",
        "implication": "None identified. Although the EFLAGS value saved by an affected event (a page fault or an EPT-induced VM exit) may contain incorrect arithmetic flag values, Intel has not identified software that is affected by this erratum. This erratum will have no further effects once the original instruction is restarted because the instruction will produce the same results as if it had initially completed without fault or VM exit.",
        "workaround": "If the handler of the affected events inspects the arithmetic portion of the saved EFLAGS value, then system software should perform a synchronized paging structure modification and TLB invalidation.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang if MC_CHANNEL_{0,1,2}_MC_DIMM_INIT_CMD.DO_ZQCL Commands Are Not Issued in Increasing Populated DDR3 Rank Order",
        "problem": "ZQCL commands are used during initialization to calibrate DDR3 termination. A ZQCL command can be issued by writing 1 to the MC_CHANNEL_{0,1,2}_MC_DIMM_INIT_CMD.DO_ZQCL (Device 4,5,6, Function 0, Offset 15, bit[15]) field and it targets the DDR3 rank specified in the RANK field (bits[7:5]) of the same register. If the ZQCL commands are not issued in increasing populated rank order then ZQ calibration may not complete, causing the system to hang.",
        "implication": "Due to this erratum the system may hang if writes to the MC_CHANNEL_{0,1,2}_MC_DIMM_INIT_CMD.DO_ZQCL field are not in increasing populated DDR3 rank order.",
        "workaround": "It is possible for Intel provided BIOS reference code to contain a workaround for this erratum. Please refer to the latest version of BIOS Memory Reference Code and release notes.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LER and LBR MSRs May Be Incorrectly Updated During a Task Switch",
        "problem": "LER (Last Exception Record) and LBR (Last Brand Record) MSRs (MSR_LER_FROM_LIP (1DDH), MSR_LER_TO_LIP (1DEH) and MSR_LASTBRANCH{0:15}_FROM_IP (680H \u2013 68FH)) may contain incorrect values after a fault or trap that does a task switch.",
        "implication": "After a task switch the value of the LER and LBR MSRs may be updated to point to incorrect instructions.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Virtualized WRMSR to the IA32_EXT_XAPIC_TPR MSR Uses Incorrect Value for TPR Threshold",
        "problem": "If the \u201cvirtualize x2APIC mode\u201d VM-execution control is 1, an attempt to write to the IA32_EXT_XAPIC_TPR MSR (808H) using the WRMSR instruction should cause a trap- like VM exit if it reduces the value of the TPR shadow below that of the TPR threshold VM-execution control field. Due to this erratum, such a VM exit may fail to occur when specified. In addition, such a VM exit may occur even if the TPR shadow is not reduced below the TPR threshold.",
        "implication": "Failure to cause the specified VM exits may prevent a virtual-machine monitor (VMM) from delivering virtual interrupts in a timely manner. Generation of incorrect VM exits may cause a VMM to deliver virtual interrupts to a guest prematurely.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Back to Back Uncorrected Machine Check Errors May Overwrite IA32_MC3_STATUS.MSCOD",
        "problem": "When back-to-back uncorrected machine check errors occur that would both be logged in the IA32_MC3_STATUS MSR (40CH), the IA32_MC3_STATUS.MSCOD (bits [31:16]) field may reflect the status of the most recent error and not the first error. The rest of the IA32_MC3_STATUS MSR contains the information from the first error.",
        "implication": "Software should not rely on the value of IA32_MC3_STATUS.MSCOD if IA32_MC3_STATUS.OVER (bit [62]) is set.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Intensive Workloads with Core C6 Transitions May Cause System Hang",
        "problem": "Under a complex set of internal conditions, a system running a high cache stress and I/ O workload combined with the presence of frequent core C6 transitions may result in a system hang.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Corrected Errors With a Yellow Error Indication May be Overwritten by Other Corrected Errors",
        "problem": "A corrected cache hierarchy data or tag error that is reported with IA32_MCi_STATUS.MCACOD (bits [15:0]) with value of 000x_0001_xxxx_xx01 (where x stands for zero or one) and a yellow threshold-based error status indication (bits [54:53] equal to 10B) may be overwritten by a corrected error with a no tracking indication (00B) or green indication (01B).",
        "implication": "Corrected errors with a yellow threshold-based error status indication may be overwritten by a corrected error without a yellow indication.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PSI# Signal May Incorrectly be Left Asserted",
        "problem": "When some of the cores in the processor are in C3/C6 state, the PSI# (Power Status Indicator) signal may incorrectly be left asserted when another core makes a frequency change request without changing the operating voltage. Since this erratum results in a possible maximum core current greater than the PSI# threshold of 20A, PSI# should have been de-asserted.",
        "implication": "Due to this erratum, platform voltage regulator tolerances may be exceeded and a subsequent system reset may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A String Instruction that Re-maps a Page May Encounter an Unexpected Page Fault",
        "problem": "An unexpected page fault (#PF) may occur for a page under the following conditions: \u2022 The paging structures initially specify a valid translation for the page. \u2022 Software modifies the paging structures so that there is no valid translation for the page (e.g., by clearing to 0 the present bit in one of the paging-structure entries used to translate the page). \u2022 An iteration of a string instruction modifies the paging structures so that the translation is again a valid translation for the page (e.g., by setting to 1 the bit that was cleared earlier). \u2022 A later iteration of the same string instruction loads from a linear address on the page. \u2022 Software did not invalidate TLB entries for the page between the first modification of the paging structures and the string instruction. In this case, the load in the later iteration may cause a page fault that indicates that there is no translation for the page (e.g., with bit 0 clear in the page-fault error code, indicating that the fault was caused by a not-present page).",
        "implication": "Software may see an unexpected page fault that indicates that there is no translation for the page. Intel has not observed this erratum with any commercially available software or system.",
        "workaround": "Software should not update the paging structures with a string instruction that accesses pages mapped the modified paging structures.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Events DCACHE_CACHE_LD and DCACHE_CACHE_ST May Overcount",
        "problem": "The performance monitor events DCACHE_CACHE_LD (Event 40H) and DCACHE_CACHE_ST (Event 41h) count cacheable loads and stores that hit the L1 cache. Due to this erratum, in addition to counting the completed loads and stores, the counter will incorrectly count speculative loads and stores that were aborted prior to completion.",
        "implication": "The performance monitor events DCACHE_CACHE_LD and DCACHE_CACHE_ST may reflect a count higher than the actual number of events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance Monitor Events INSTR_RETIRED and MEM_INST_RETIRED May Count Inaccurately",
        "problem": "The performance monitor event INSTR_RETIRED (Event C0H) should count the number of instructions retired, and MEM_INST_ RETIRED (Event 0BH) should count the number of load or store instructions retired. However, due to this erratum, they may undercount.",
        "implication": "The performance monitor event INSTR_RETIRED and MEM_INST_RETIRED may reflect a count lower than the actual number of events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A Page Fault May Not be Generated When the PS bit is set to \"1\" in a PML4E or PDPTE",
        "problem": "On processors supporting Intel 64 architecture, the PS bit (Page Size, bit 7) is reserved in PML4Es and PDPTEs. If the translation of the linear address of a memory access encounters a PML4E or a PDPTE with PS set to 1, a page fault should occur. Due to this erratum, PS of such an entry is ignored and no page fault will occur due to its being set.",
        "implication": "Software may not operate properly if it relies on the processor to deliver page faults when reserved bits are set in paging-structure entries.",
        "workaround": "Software should not set bit 7 in any PML4E or PDPTE that has Present Bit (Bit 0) set to \"1\".",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "tRP Timing Violations May be Observed Near a Self Refresh Entry",
        "problem": "When entering package C3, C6 or S3 states, tRP violations may be observed near a self refresh (that is part of the C3, C6 or S3 entry).",
        "implication": "tRP timing violation may occur on DRAM entry to self refresh while entering package C3, C6 or S3 states. Intel has not observed this erratum with any commercially available software. This condition has only been produced in simulation and affects a pre-charge to banks already pre-charged.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Concurrent Updates to a Segment Descriptor May be Lost",
        "problem": "If a logical processor attempts to set the accessed bit in a code or data segment descriptor while another logical processor is modifying the same descriptor, both modifications of the descriptor may be lost.",
        "implication": "Due to this erratum, updates to segment descriptors may not be preserved. Intel has not observed this erratum with any commercially available software or system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Controller Clock Circuits May Show a Temperature Sensitive Dependence on Power-On Conditions",
        "problem": "A large temperature delta between power-on and run time may affect memory controller clock circuits and subsequently could result in memory errors.",
        "implication": "Correctable/Uncorrectable ECC errors may be observed on a system with memory ECC enabled. On systems that do not have memory ECC enabled, unpredictable system behavior may be observed.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum, along with the latest Intel Tylersburg Platform CPU/QPI/Memory Reference Code.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PMIs May be Lost During Core C6 Transitions",
        "problem": "If a performance monitoring counter overflows and causes a PMI (Performance Monitoring Interrupt) at the same time that the core is entering C6, then the PMI may be lost.",
        "implication": "PMIs may be lost during a C6 transition.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Uncacheable Access to a Monitored Address Range May Prevent Future Triggering of the Monitor Hardware",
        "problem": "It is possible that an address range which is being monitored via the MONITOR instruction could be written without triggering the monitor hardware. A read from the monitored address range which is issued as uncacheable (for example having the CR0.CD bit set) may prevent subsequent writes from triggering the monitor hardware. A write to the monitored address range which is issued as uncacheable, may not trigger the monitor hardware and may prevent subsequent writes from triggering the monitor hardware.",
        "implication": "The MWAIT instruction will not exit the optimized power state and resume program flow if the monitor hardware is not triggered.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "BIST Results May be Additionally Reported After a GETSEC[WAKEUP] or INIT-SIPI Sequence",
        "problem": "BIST results should only be reported in EAX the first time a logical processor wakes up from the Wait-For-SIPI state. Due to this erratum, BIST results may be additionally reported after INIT-SIPI sequences and when waking up RLP\u2019s from the SENTER sleep state using the GETSEC[WAKEUP] command.",
        "implication": "An INIT-SIPI sequence may show a non-zero value in EAX upon wakeup when a zero value is expected. RLP\u2019s waking up for the SENTER sleep state using the GETSEC[WAKEUP] command may show a different value in EAX upon wakeup than before going into the SENTER sleep state.",
        "workaround": "If necessary software may save the value in EAX prior to launching into the secure environment and restore upon wakeup and/or clear EAX after the INIT-SIPI sequence.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Pending x87 FPU Exceptions (#MF) May be Signaled Earlier Than Expected",
        "problem": "x87 instructions that trigger #MF normally service interrupts before the #MF. Due to this erratum, if an instruction that triggers #MF is executed while Enhanced Intel SpeedStep\u00ae Technology transitions, Intel Turbo Boost Technology transitions, or Thermal Monitor events occur, the pending #MF may be signaled before pending interrupts are serviced.",
        "implication": "Software may observe #MF being signaled before pending interrupts are serviced.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VM Exits Due to \u201cNMI-Window Exiting\u201d May Be Delayed by One Instruction",
        "problem": "If VM entry is executed with the \u201cNMI-window exiting\u201d VM-execution control set to 1, a VM exit with exit reason \u201cNMI window\u201d should occur before execution of any instruction if there is no virtual-NMI blocking, no blocking of events by MOV SS, and no blocking of events by STI. If VM entry is made with no virtual-NMI blocking but with blocking of events by either MOV SS or STI, such a VM exit should occur after execution of one instruction in VMX non-root operation. Due to this erratum, the VM exit may be delayed by one additional instruction.",
        "implication": "VMM software using \u201cNMI-window exiting\u201d for NMI virtualization should generally be unaffected, as the erratum causes at most a one-instruction delay in the injection of a virtual NMI, which is virtually asynchronous. The erratum may affect VMMs relying on deterministic delivery of the affected VM exits.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VM Exits Due to EPT Violations Do Not Record Information About Pre- IRET NMI Blocking",
        "problem": "With certain settings of the VM-execution controls VM exits due to EPT violations set bit 12 of the exit qualification if the EPT violation was a result of an execution of the IRET instruction that commenced with non-maskable interrupts (NMIs) blocked. Due to this erratum, such VM exits will instead clear this bit.",
        "implication": "Due to this erratum, a virtual-machine monitor that relies on the proper setting of bit 12 of the exit qualification may deliver NMIs to guest software prematurely.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Multiple Performance Monitor Interrupts are Possible on Overflow of IA32_FIXED_CTR2",
        "problem": "When multiple performance counters are set to generate interrupts on an overflow and more than one counter overflows at the same time, only one interrupt should be generated. However, if one of the counters set to generate an interrupt on overflow is the IA32_FIXED_CTR2 (MSR 30BH) counter, multiple interrupts may be generated when the IA32_FIXED_CTR2 overflows at the same time as any of the other performance counters.",
        "implication": "Multiple counter overflow interrupts may be unexpectedly generated.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LBRs May Not be Initialized During Power-On Reset of the Processor",
        "problem": "If a second reset is initiated during the power-on processor reset cycle, the LBRs (Last Branch Records) may not be properly initialized.",
        "implication": "Due to this erratum, debug software may not be able to rely on the LBRs out of power- on reset.",
        "workaround": "Ensure that the processor has completed its power-on reset cycle prior to initiating a second reset.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unexpected Interrupts May Occur on C6 Exit If Using APIC Timer to Generate Interrupts",
        "problem": "If the APIC timer is being used to generate interrupts, unexpected interrupts not related to the APIC timer may be signaled when a core exits the C6 power state. This erratum may occur when the APIC timer is near expiration when entering the core C6 state.",
        "implication": "Due to this erratum, unexpected interrupt vectors could be sent from the APIC to a logical processor.",
        "workaround": "Software should stop the APIC timer (by writing 0 to the Initial Count Register) before allowing the core to enter the C6 state.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LBR, BTM or BTS Records May have Incorrect Branch From Information After an Enhanced Intel SpeedStep Technology Transition, T-states, C1E, or Adaptive Thermal Throttling",
        "problem": "The \u201cFrom\u201d address associated with the LBR (Last Branch Record), BTM (Branch Trace Message) or BTS (Branch Trace Store) may be incorrect for the first branch after an Enhanced Intel SpeedStep Technology transition, Tstates, C1E (C1 Enhanced), or Adaptive Thermal Throttling.",
        "implication": "When the LBRs, BTM or BTS are enabled, some records may have incorrect branch \u201cFrom\u201d addresses for the first branch after an Intel SpeedStep Technology transition, T-states, C1E, or Adaptive Thermal Throttling.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Redirection to Probe Mode May be delayed beyond Intended Instruction",
        "problem": "An attempt to redirect to probe mode (i.e. by hitting hardware breakpoints) may result in a slip of several instructions before the break is taken. This does not impact single- step operation.",
        "implication": "In-Target Probe debug software may not break on the expected instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VMX-Preemption Timer Does Not Count Down at the Rate Specified",
        "problem": "The VMX-preemption timer should count down by 1 every time a specific bit in the TSC (Time Stamp Counter) changes. (This specific bit is indicated by IA32_VMX_MISC bits [4:0] (0x485h) and has a value of 5 on the affected processors.) Due to this erratum, the VMX-preemption timer may instead count down at a different rate and may do so only intermittently.",
        "implication": "The VMX-preemption timer may cause VM exits at a rate different from that expected by software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Multiple Performance Monitor Interrupts are Possible on Overflow of Fixed Counter 0",
        "problem": "The processor can be configured to issue a PMI (performance monitor interrupt) upon overflow of the IA32_FIXED_CTR0 MSR (309H). A single PMI should be observed on overflow of IA32_FIXED_CTR0, however multiple PMIs are observed when this erratum occurs. This erratum only occurs when IA32_FIXED_CTR0 overflows and the processor and counter are configured as follows: \u2022 Intel\u00ae Hyper-Threading Technology is enabled \u2022 IA32_FIXED_CTR0 local and global controls are enabled \u2022 IA32_FIXED_CTR0 is set to count events only on its own thread (IA32_FIXED_CTR_CTRL MSR (38DH) bit [2] = \u20180) \u2022 PMIs are enabled on IA32_FIXED_CTR0 (IA32_FIXED_CTR_CTRL MSR bit [3] = \u20181) \u2022 Freeze_on_PMI feature is enabled (IA32_DEBUGCTL MSR (1D9H) bit [12] = \u20181)",
        "implication": "When this erratum occurs there may be multiple PMIs observed when IA32_FIXED_CTR0 overflows.",
        "workaround": "Disable the FREEZE_PERFMON_ON_PMI feature in IA32_DEBUGCTL MSR (1D9H) bit [12].",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VM Exits Due to LIDT/LGDT/SIDT/SGDT Do Not Report Correct Operand Size",
        "problem": "When a VM exit occurs due to a LIDT, LGDT, SIDT, or SGDT instruction with a 32-bit operand, bit 11 of the VM-exit instruction information field should be set to 1. Due to this erratum, this bit is instead cleared to 0 (indicating a 16bit operand).",
        "implication": "Virtual-machine monitors cannot rely on bit 11 of the VM-exit instruction information field to determine the operand size of the instruction causing the VM exit.",
        "workaround": "Virtual-machine monitor software may decode the instruction to determine operand size.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Events STORE_BLOCKS.NOT_STA and STORE_BLOCKS.STA May Not Count Events Correctly",
        "problem": "Performance Monitor Events STORE_BLOCKS.NOT_STA and STORE_BLOCKS.STA should only increment the count when a load is blocked by a store. Due to this erratum, the count will be incremented whenever a load hits a store, whether it is blocked or can forward. In addition this event does not count for specific threads correctly.",
        "implication": "If Intel Hyper-Threading Technology is disabled, the Performance Monitor events STORE_BLOCKS.NOT_STA and STORE_BLOCKS.STA may indicate a higher occurrence of loads blocked by stores than have actually occurred. If Intel Hyper-Threading Technology is enabled, the counts of loads blocked by stores may be unpredictable and they could be higher or lower than the correct count.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Storage of PEBS Record Delayed Following Execution of MOV SS or STI",
        "problem": "When a performance monitoring counter is configured for PEBS (Precise Event Based Sampling), overflow of the counter results in storage of a PEBS record in the PEBS buffer. The information in the PEBS record represents the state of the next instruction to be executed following the counter overflow. Due to this erratum, if the counter overflow occurs after execution of either MOV SS or STI, storage of the PEBS record is delayed by one instruction.",
        "implication": "When this erratum occurs, software may observe storage of the PEBS record being delayed by one instruction following execution of MOV SS or STI. The state information in the PEBS record will also reflect the one instruction delay.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "INVLPG Following INVEPT or INVVPID May Fail to Flush All Translations for a Large Page",
        "problem": "This erratum applies if the address of the memory operand of an INVEPT or INVVPID instruction resides on a page larger than 4KBytes and either (1) that page includes the low 1 MBytes of physical memory; or (2) the physical address of the memory operand matches an MTRR that covers less than 4 MBytes. A subsequent execution of INVLPG that targets the large page and that occurs before the next VM-entry instruction may fail to flush all TLB entries for the page. Such entries may persist in the TLB until the next VM-entry instruction.",
        "implication": "Accesses to the large page between INVLPG and the next VM-entry instruction may incorrectly use translations that are inconsistent with the in-memory page tables.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The PECI Bus May be Tri-stated After System Reset",
        "problem": "During power-up, the processor may improperly assert the PECI (Platform Environment Control Interface) pin. This condition is cleared as soon as Bus Clock starts toggling. However, if the PECI host (also referred to as the master or originator) incorrectly determines this asserted state as another PECI host initiating a transaction, it may release control of the bus resulting in a permanent tri-state condition.",
        "implication": "Due to this erratum, the PECI host may incorrectly determine that it is not the bus master and consequently PECI commands initiated by the PECI software layer may receive incorrect/invalid responses.",
        "workaround": "To workaround this erratum the PECI host should pull the PECI bus low to initiate a PECI transaction. For platforms that route the PECI bus to the PCH, Intel has implemented a workaround in the PCH firmware for this erratum. For platforms that route the PECI bus to another device, please consult your third party vendor to understand the possible implications of this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LER MSRs May Be Unreliable",
        "problem": "Due to certain internal processor events, updates to the LER (Last Exception Record) MSRs, MSR_LER_FROM_LIP (1DDH) and MSR_LER_TO_LIP (1DEH), may happen when no update was expected.",
        "implication": "The values of the LER MSRs may be unreliable.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Exit From the Core C6-state May Result in the Dropping of an Interrupt",
        "problem": "In a complex set of internal conditions when the processor exits from Core C6 state, it is possible that an interrupt may be dropped.",
        "implication": "Due to this erratum, an interrupt may be dropped. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PMIs During Core C6 Transitions May Cause the System to Hang",
        "problem": "If a performance monitoring counter overflows and causes a PMI (Performance Monitoring Interrupt) at the same time that the core enters C6, then this may cause the system to hang.",
        "implication": "Due to this erratum, the processor may hang when a PMI coincides with core C6 entry.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Page Split Lock Accesses Combined With Complex Internal Events May Cause Unpredictable System Behavior",
        "problem": "A 2MB Page Split Lock (a locked access that spans two 2MB large pages) coincident with additional requests that have particular address relationships in combination with a timing sensitive sequence of complex internal conditions may cause unpredictable system behavior.",
        "implication": "This erratum may cause unpredictable system behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_MC8_CTL2 MSR is Not Cleared on Processor Warm Reset",
        "problem": "After processor warm reset the IA32_MC8_CTL2 MSR (288H) should be zero. Due to this erratum the IA32_MC8_CTL2 MSR is not zeroed on processor warm reset.",
        "implication": "When this erratum occurs, the IA32_MC8_CTL2 MSR will not be zeroed by warm reset. Software that expects the values to be 0 coming out of warm reset may not behave as expected.",
        "workaround": "BIOS should zero the IA32_MC8_CTL2 MSR after a warm reset.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Combination of a Page-Split Lock Access And Data Accesses That Are Split Across Cacheline Boundaries May Lead to Processor Livelock",
        "problem": "Under certain complex micro-architectural conditions, the simultaneous occurrence of a page-split lock and several data accesses that are split across cacheline boundaries may lead to processor livelock.",
        "implication": "Due to this erratum, a livelock may occur that can only be terminated by a processor reset. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "FP Data Operand Pointer May Be Incorrectly Calculated After an FP Access Which Wraps a 4-Gbyte Boundary in Code That Uses 32-Bit Address Size in 64-bit Mode",
        "problem": "The FP (Floating Point) Data Operand Pointer is the effective address of the operand associated with the last non-control FP instruction executed by the processor. If an 80- bit FP access (load or store) occurs in a 16-bit mode other than protected mode (in which case the access will produce a segment limit violation), the memory access wraps a 64-Kbyte boundary, and the FP environment is subsequently saved, the value contained in the FP Data Operand Pointer may be incorrect.",
        "implication": "Due to this erratum, the FP Data Operand Pointer may be incorrect. Wrapping an 80-bit FP load around a 4-Gbyte boundary in this way is not a normal programming practice. Intel has not observed this erratum with any commercially available software.",
        "workaround": "If the FP Data Operand Pointer is used in an operating system which may run 16-bit FP code, care must be taken to ensure that no 80-bit FP accesses are wrapped around a 64-Kbyte boundary.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Events for Hardware Prefetches Which Miss The L1 Data Cache May be Over Counted",
        "problem": "Hardware prefetches that miss the L1 data cache but cannot be processed immediately due to resource conflicts will count and then retry. This may lead to incorrectly incrementing the L1D_PREFETCH.MISS (event 4EH, umask 02H) event multiple times for a single miss.",
        "implication": "The count reported by the L1D_PREFETCH.MISS event may be higher than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VM Exit May Incorrectly Clear IA32_PERF_GLOBAL_CTRL [34:32]",
        "problem": "If the \u201cload IA32_PERF_GLOBAL_CTRL\u201d VM-exit control is 1, a VM exit should load the IA32_PERF_GLOBAL_CTRL MSR (38FH) from the IA32_PERF_GLOBAL_CTRL field in the guest-state area of the VMCS. Due to this erratum, such a VM exit may instead clear bits 34:32 of the MSR, loading only bits 31:0 from the VMCS.",
        "implication": "All fixed-function performance counters will be disabled after an affected VM exit, even if the VM exit should have enabled them based on the IA32_PERF_GLOBAL_CTRL field in the guest-state area of the VMCS.",
        "workaround": "A VM monitor that wants the fixed-function performance counters to be enabled after a VM exit may do one of two things: (1) clear the \u201cload IA32_PERF_GLOBAL_CTRL\u201d VM- exit control; or (2) include an entry for the IA32_PERF_GLOBAL_CTRL MSR in the VM- exit MSR-load list.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae QPI Lane May Be Dropped During Full Frequency Deskew Phase of Training",
        "problem": "A random QPI Lane may be dropped during the lane deskew phase while the QPI Bus is training at full frequency.",
        "implication": "When there are multiple resets after the QPI Bus has reached full speed operation there is a small chance that a lane could be dropped during the deskew phase of training. In the case of a lane being dropped this will be detected and a retry will be done until the link is established and the lane is re-trained.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PerfMon Overflow Status Can Not be Cleared After Certain Conditions Have Occurred",
        "problem": "Under very specific timing conditions, if software tries to disable a PerfMon counter through MSR IA32_PERF_GLOBAL_CTRL (0x38F) or through the per-counter event- select (e.g. MSR 0x186) and the counter reached its overflow state very close to that time, then due to this erratum the overflow status indication in MSR IA32_PERF_GLOBAL_STAT (0x38E) may be left set with no way for software to clear it..",
        "implication": "Due to this erratum, software may be unable to clear the PerfMon counter overflow status indication.",
        "workaround": "Software may avoid this erratum by clearing the PerfMon counter value prior to disabling it and then clearing the overflow status indication bit.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Unexpected Page Fault or EPT Violation May Occur After Another Logical Processor Creates a Valid Translation for a Page",
        "problem": "An unexpected page fault (#PF) or EPT violation may occur for a page under the following conditions: \u2022 The paging structures initially specify no valid translation for the page. \u2022 Software on one logical processor modifies the paging structures so that there is a valid translation for the page (e.g., by setting to 1 the present bit in one of the paging-structure entries used to translate the page). \u2022 Software on another logical processor observes this modification (e.g., by accessing a linear address on the page or by reading the modified paging-structure entry and seeing value 1 for the present bit). \u2022 Shortly thereafter, software on that other logical processor performs a store to a linear address on the page.In this case, the store may cause a page fault or EPT violation that indicates that there is no translation for the page (e.g., with bit 0 clear in the page-fault error code, indicating that the fault was caused by a not-present page). Intel has not observed this erratum with any commercially available software.",
        "implication": "An unexpected page fault may be reported. There are no other side effects due to this erratum.",
        "workaround": "System software can be constructed to tolerate these unexpected page faults. See Section \u201cPropagation of Paging-Structure Changes to Multiple Processors\u201d of Volume 3A of IA-32 Intel\u00ae Architecture Software Developer\u2019s Manual, for recommendations for software treatment of asynchronous paging-structure updates.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "L1 Data Cache Errors May be Logged With Level Set to 1 Instead of 0",
        "problem": "When an L1 Data Cache error is logged in IA32_MCi_STATUS[15:0], which is the MCA Error Code Field, with a cache error type of the format 0000 0001 RRRR TTLL, the LL field may be incorrectly encoded as 01b instead of 00b.",
        "implication": "An error in the L1 Data Cache may report the same LL value as the L2 Cache. Software should not assume that an LL value of 01b is the L2 Cache.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Stack Pushes May Not Occur Properly for Events Delivered Immediately After VM Entry to 16-Bit Software",
        "problem": "The stack pushes for an event delivered after VM entry and before execution of an instruction in VMX non-root operation may not occur properly. The erratum applies only if the VM entry establishes IA32_EFER.LMA = 0 and CS.D = 0 and only if the event handler is also invoked with CS.D = 0.",
        "implication": "This erratum affects events that are pending upon completion of VM entry and that do not cause VM exits. Examples include debug exceptions, interrupts, and general- protection faults generated in virtual-8086 mode by the mode\u2019s virtual interrupt mechanism. The erratum applies only if the VM entry is not to IA-32e mode and is to 16-bit operation, and only if the relevant handler uses 16-bit operation. The incorrect stack pushes resulting from the erratum may cause incorrect guest operation. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PerfMon Event LOAD_HIT_PRE.SW_PREFETCH May Overcount",
        "problem": "PerfMon event LOAD_HIT_PRE.SW_PREFETCH (event 4CH, umask 01H) should count load instructions hitting an ongoing software cache fill request initiated by a preceding software prefetch instruction. Due to this erratum, this event may also count when there is a preceding ongoing cache fill request initiated by a locking instruction.",
        "implication": "PerfMon event LOAD_HIT_PRE.SW_PREFETCH may overcount.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Successive Fixed Counter Overflows May be Discarded",
        "problem": "Under specific internal conditions, when using Freeze PerfMon on PMI feature (bit 12 in IA32_DEBUGCTL.Freeze_PerfMon_on_PMI, MSR 1D9H), if two or more PerfMon Fixed Counters overflow very closely to each other, the overflow may be mishandled for some of them. This means that the counter\u2019s overflow status bit (in MSR_PERF_GLOBAL_STATUS, MSR 38EH) may not be updated properly; additionally, PMI interrupt may be missed if software programs a counter in Sampling-Mode (PMI bit is set on counter configuration).",
        "implication": "Successive Fixed Counter overflows may be discarded when Freeze PerfMon on PMI is used.",
        "workaround": "Software can avoid this by: 1. Avoid using Freeze PerfMon on PMI bit. 2. Enable only one fixed counter at a time when using Freeze PerfMon on PMINone identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "#GP May be Signaled When Invalid VEX Prefix Precedes Conditional Branch Instructions",
        "problem": "When a 2-byte opcode of a conditional branch (opcodes 0F8xH, for any value of x) instruction resides in 16-bit code-segment and is associated with invalid VEX prefix, it may sometimes signal a #GP fault (illegal instruction length > 15-bytes) instead of a #UD (illegal opcode) fault.",
        "implication": "Due to this erratum, #GP fault instead of a #UD may be signaled on an illegal instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Logical Processor May Wake From Shutdown State When Branch- Trace Messages or Branch-Trace Stores Are Enabled",
        "problem": "Normally, a logical processor that entered the shutdown state will remain in that state until a break event (NMI, SMI, INIT) occurs. Due to this erratum, if CR4.MCE (Machine Check Enable) is 0 and a branch-trace message or branch-trace store is pending at the time of a machine check, the processor may not remain in shutdown state. In addition, if the processor was in VMX non-root operation when it improperly woke from shutdown state, a subsequent VM exit may save a value of 2 into the activity-state field in the VMCS (indicating shutdown) even though the VM exit did not occur while in shutdown state.",
        "implication": "This erratum may result in unexpected system behavior. If a VM exit saved a value of 2 into the activity-state field in the VMCS, the next VM entry will take the processor to shutdown state.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "Task Switch to a TSS With an Inaccessible LDTR Descriptor May Cause Unexpected Faults",
        "problem": "A task switch may load the LDTR (Local Descriptor Table Register) with an incorrect segment descriptor if the LDT (Local Descriptor Table) segment selector in the new TSS specifies an inaccessible location in the GDT (Global Descriptor Table).",
        "implication": "Future accesses to the LDT may result in unpredictable system behavior.",
        "workaround": "Operating system code should ensure that segment selectors used during task switches to the GDT specify offsets within the limit of the GDT and that the GDT is fully paged into memory.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "Changes to Reserved Bits of Some Non-Architectural MSR\u2019s May Cause Unpredictable System Behavior",
        "problem": "Under normal circumstances, an operation fails if it attempts to modify a reserved bit of a model-specific register (MSR). Due to this erratum and for some non-architectural MSRs, such an attempt may cause unpredictable system behavior.",
        "implication": "Unpredictable system behavior may occur if software attempts to modify reserved bits of some non-architectural MSRs. (Note that documentation of the WRMSR instruction states that \"Undefined or reserved bits in an MSR should be set to values previously read.\")",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "VM Entries That Return From SMM Using VMLAUNCH May Not Update The Launch State of the VMCS",
        "problem": "Successful VM entries using the VMLAUNCH instruction should set the launch state of the VMCS to \u201claunched\u201d. Due to this erratum, such a VM entry may not update the launch state of the current VMCS if the VM entry is returning from SMM.",
        "implication": "Subsequent VM entries using the VMRESUME instruction with this VMCS will fail. RFLAGS.ZF is set to 1 and the value 5 (indicating VMRESUME with non-launched VMCS) is stored in the VM-instruction error field. This erratum applies only if dual monitor treatment of SMI and SMM is active.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "VM Entry May Clear Bytes 81H-83H on Virtual-APIC Page When \u201cUse TPR Shadow\u201d Is 0",
        "problem": "VM entry should not clear bytes 81H-83H on the virtual-APIC page if the \u201cuse TPR shadow\u201d VM-execution control is 0. Due to this erratum, VM entry will do so if the \u201cvirtualize x2APIC mode\u201d VM-execution control is 1.",
        "implication": "VM entries with the 0-setting of the \u201cuse TPR shadow\u201d VM-execution control and the 1- setting of the \u201cvirtualize x2APIC mode\u201d VM-execution control cause any non-zero data at bytes 81H-83H on the virtual-APIC page to be lost. Note that this combination of settings is not allowed; any such VM entry will fail after clearing these bytes.",
        "workaround": "Software should always set the \"use TPR shadow\" VM-execution control to 1 whenever it sets that \u201cvirtualize x2APIC mode\u201d VM-execution control to 1.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "A First Level Data Cache Parity Error May Result in Unexpected Behavior",
        "problem": "When a load occurs to a first level data cache line resulting in a parity error in close proximity to other software accesses to the same cache line and other locked accesses the processor may exhibit unexpected behavior.",
        "implication": "Due to this erratum unpredictable system behavior may occur. Intel has not observed this erratum with any commercially available system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "An Event May Intervene Before a System Management Interrupt That Results from IN or INS",
        "problem": "If an I/O instruction (IN, INS, OUT, or OUTS) results in an SMI (system-management interrupt), the processor will set the IO_SMI bit at offset 7FA4H in SMRAM. This interrupt should be delivered immediately after execution of the I/O instruction so that the software handling the SMI can cause the I/O instruction to be re-executed. Due to this erratum, it is possible for another event (e.g., a nonmaskable interrupt) to be delivered before the SMI that follows the execution of an IN or INS instruction.",
        "implication": "If software handling an affected SMI uses I/O instruction restart, the handler for the intervening event will not be executed.",
        "workaround": "The SMM handler has to evaluate the saved context to determine if the SMI was triggered by an instruction that read from an I/O port. The SMM handler must not restart an I/O instruction if the platform has not been configured to generate a synchronous SMI for the recorded I/O port address.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "VM Exits Due to \u201cNMI-Window Exiting\u201d May Not Occur Following a VM Entry to the Shutdown State",
        "problem": "If VM entry is made with the \"virtual NMIs\" and \"NMI-window exiting\", VM-execution controls set to 1, and if there is no virtual-NMI blocking after VM entry, a VM exit with exit reason \"NMI window\" should occur immediately after VM entry unless the VM entry put the logical processor in the wait-for SIPI state. Due to this erratum, such VM exits do not occur if the VM entry put the processor in the shutdown state.",
        "implication": "A VMM may fail to deliver a virtual NMI to a virtual machine in the shutdown state.",
        "workaround": "Before performing a VM entry to the shutdown state, software should check whether the \u201cvirtual NMIs\u201d and \u201cNMI-window exiting\u201d VM-execution controls are both 1. If they are, software should clear \u201cNMI-window exiting\u201d and inject an NMI as part of VM entry.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "Execution of INVVPID Outside 64-Bit Mode Cannot Invalidate Translations For 64-Bit Linear Addresses",
        "problem": "Executions of the INVVPID instruction outside 64-bit mode with the INVVPID type \"individual-address invalidation\" ignore bits 63:32 of the linear address in the INVVPID descriptor and invalidate translations for bits 31:0 of the linear address.",
        "implication": "The INVVPID instruction may fail to invalidate translations for linear addresses that set bits in the range 63:32. Because this erratum applies only to executions outside 64-bit mode, it applies only to attempts by a 32-bit virtual-machine monitor (VMM) to invalidate translations for a 64-bit guest. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "A Combination of Data Accesses That Are Split Across Cacheline Boundaries May Lead to a Processor Hang",
        "problem": "Under certain complex micro-architectural conditions, closely spaced data accesses that are split across cacheline boundaries may lead to a processor hang.",
        "implication": "Due to this erratum, the processor may hang. This erratum has not been observed with any general purpose operating systems.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "A Machine Check Occurring During VM Entry May Cause Unpredictable Behavior",
        "problem": "A machine check occurring during VM entry may cause the VM entry to fail. Due to this erratum, such a VM entry failure may be followed by unpredictable behavior, including a processor hang.",
        "implication": "This erratum may result in a system hang. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "MCI_ADDR May be Incorrect For Cache Parity Errors",
        "problem": "In cases when a WBINVD instruction evicts a line containing an address or data parity error (MCACOD of 0x124, and MSCOD of 0x10), the address of this error should be logged in the MCi_ADDR register. Due to this erratum, the logged address may be incorrect, even though MCi_Status.ADDRV (bit 63) is set.",
        "implication": "The address reported in MCi_ADDR may not be correct for cases of a parity error found during WBINVD execution.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "The Corrected Error Count Overflow Bit in IA32_ MC0_STATUS is Not Updated When the UC Bit is Set",
        "problem": "After a UC (uncorrected) error is logged in the IA32_MC0_STATUS MSR (401H), corrected errors will continue to be counted in the lower 14 bits (bits 51:38) of the Corrected Error Count. Due to this erratum, the sticky count overflow bit (bit 52) of the Corrected Error Count will not get updated when the UC bit (bit 61) is set to 1.",
        "implication": "The Corrected Error Count Overflow indication will be lost if the overflow occurs after an uncorrectable error has been logged.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "The Upper 32 Bits of CR3 May be Incorrectly Used With 32-Bit Paging",
        "problem": "When 32-bit paging is in use, the processor should use a page directory located at the 32-bit physical address specified in bits 31:12 of CR3; the upper 32 bits of CR3 should be ignored. Due to this erratum, the processor will use a page directory located at the 64-bit physical address specified in bits 63:12 of CR3.",
        "implication": "The processor may use an unexpected page directory or, if EPT (Extended Page Tables) is in use, cause an unexpected EPT violation. This erratum applies only if software enters 64-bit mode, loads CR3 with a 64-bit value, and then returns to 32-bit paging without changing CR3. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software that has executed in 64-bit mode should reload CR3 with a 32-bit value before returning to 32-bit paging.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "EPT Violations May Report Bits 11:0 of Guest Linear Address Incorrectly",
        "problem": "If a memory access to a linear address requires the processor to update an accessed or dirty flag in a paging-structure entry and if that update causes an EPT violation, the processor should store the linear address into the \u201cguest linear address\u201d field in the VMCS. Due to this erratum, the processor may store an incorrect value into bits 11:0 of this field. (The processor correctly stores the guest-physical address of the paging- structure entry into the \u201cguest-physical address\u201d field in the VMCS.)",
        "implication": "Software may not be easily able to determine the page offset of the original memory access that caused the EPT violation. Intel has not observed this erratum to impact the operation of any commercially available software.",
        "workaround": "Software requiring the page offset of the original memory access address can derive it by simulating the effective address computation of the instruction that caused the EPT violation.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "SMRAM State-Save Area Above the 4GB Boundary May Cause Unpredictable System Behavior",
        "problem": "If BIOS uses the RSM instruction to load the SMBASE register with a value that would cause any part of the SMRAM state-save area to have an address above 4-GBytes, subsequent transitions into and out of SMM (system-management mode) might save and restore processor state from incorrect addresses.",
        "implication": "This erratum may cause unpredictable system behavior. Intel has not observed this erratum with any commercially available system.",
        "workaround": "Ensure that the SMRAM state-save area is located entirely below the 4GB address boundary.",
        "status": "For the steppings affected, see the Summary Table of Change."
    },
    {
        "title": "Virtual-APIC Page Accesses With 32-Bit PAE Paging May Cause a System Crash",
        "problem": "If a logical processor has EPT (Extended Page Tables) enabled, is using 32-bit PAE paging, and accesses the virtual-APIC page then a complex sequence of internal processor micro-architectural events may cause an incorrect address translation or machine check on either logical processor.",
        "implication": "This erratum may result in unexpected faults, an uncorrectable TLB error logged in IA32_MCi_STATUS.MCACOD (bits [15:0]) with a value of 0000_0000_0001_xxxxb (where x stands for 0 or 1), a guest or hypervisor crash, or other unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Interrupt Remapping May Lead to a System Hang",
        "problem": "Under complex micro-architectural conditions, back-to-back interrupt requests when interrupt remapping is enabled may lead to a system hang.",
        "implication": "When this erratum occurs, the system hang may be associated with a queued invalidation of the IOAPIC that does not complete.",
        "workaround": "None Identified",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Memory Controller tTHROT_OPREF Timings May Be Violated during Self-Refresh Entry",
        "problem": "During self-refresh entry, the memory controller may issue more refreshes than permitted by tTHROT_OPREF (bits 29:19 in MC_CHANNEL_{0,1}_REFRESH_TIMING CSR).",
        "implication": "The intention of tTHROT_OPREF is to limit current. Since current supply conditions near self refresh entry are not critical, there is no measurable impact due to this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Infinite Stream of Interrupts May Occur If an ExtINT Delivery Mode Interrupt Is Received While All Cores Are in C6",
        "problem": "If all logical processors in a core are in C6, an ExtINT delivery mode interrupt is pending in the xAPIC and interrupts are blocked with EFLAGS.IF=0, the interrupt will be processed after C6 wakeup and after interrupts are re-enabled (EFLAGS.IF=1). However, the pending interrupt event will not be cleared.",
        "implication": "Due to this erratum, an infinite stream of interrupts will occur on the core servicing the external interrupt. Intel has not observed this erratum with any commercially-available software/system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "DR6 May Contain Incorrect Information When the First Instruction after a MOV SS,r/m or POP SS Is a Store",
        "problem": "Normally, each instruction clears the changes in DR6 (Debug Status Register) caused by the previous instruction. However, the instruction following a MOV SS,r/m (MOV to the stack segment selector) or POP SS (POP stack segment selector) instruction will not clear the changes in DR6 because data breakpoints are not taken immediately after a MOV SS,r/m or POP SS instruction. Due to this erratum, any DR6 changes caused by a MOV SS,r/m or POP SS instruction may be cleared if the following instruction is a store.",
        "implication": "When this erratum occurs, incorrect information may exist in DR6. This erratum will not be observed under normal usage of the MOV SS,r/m or POP SS instructions (i.e., following them with an instruction that writes [e/r]SP). When debugging or when developing debuggers, this behavior should be noted.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Rapid Core C3/C6 Transitions May Cause Unpredictable System Behavior",
        "problem": "Under a complex set of internal conditions, cores rapidly performing C3/C6 transitions in a system with Intel\u00ae Hyper-Threading Technology enabled may cause a machine check error (IA32_MCi_STATUS.MCACOD = 0x0106), system hang or unpredictable system behavior.",
        "implication": "This erratum may cause a machine check error, system hang or unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "DPRSLPVR Signal May Be Incorrectly Asserted on Transition between Low Power C-states",
        "problem": "On entry to or exit from package C6 states, DPRSLPVR (Deeper Sleep Voltage Regulator) signal may be incorrectly asserted.",
        "implication": "Due to this erratum, platform voltage regulator may shutdown",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Logical Processor May Use Incorrect VPID after VM Entry That Returns From SMM",
        "problem": "A logical processor in VMX root operation should use VPID 0000H. Due to this erratum, a logical processor may instead use VPID 1FB3H if VMX root operation was entered using a VM entry that returns from SMM.",
        "implication": "After a VM entry that sets the \"enable VPID\" VM-execution control and that establishes VPID 1FB3H, the logical processor may erroneously use TLB entries that were cached in VMX root operation.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "MSR_TURBO_RATIO_LIMIT MSR May Return Intel\u00ae Turbo Boost Technology Core Ratio Multipliers for Non-Existent Core Configurations",
        "problem": "MSR_TURBO_RATIO_LIMIT MSR (1ADH) is designed to describe the maximum Intel Turbo Boost Technology potential of the processor. On some processors, a non-zero Intel Turbo Boost Technology value will be returned for non-existent core configurations.",
        "implication": "Due to this erratum, software using the MSR_TURBO_RATIO_LIMIT MSR to report Intel Turbo Boost Technology processor capabilities may report erroneous results.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express x16 Port Logs Bad TLP Correctable Error When Receiving a Duplicate TLP",
        "problem": "In the PCI Express 2.0 Specification a receiver should schedule an ACK and discard a duplicate TLP (Transaction Layer Packet) before ending the transaction within the data link layer. In the processor, the PCI Express x16 root port will set the Bad TLP status bit in the Correctable Error Status Register (Bus 0; Device 1 and 6; Function 0; Offset 1D0h; bit 6) in addition to scheduling an ACK and discarding the duplicate TLP. Note: The duplicate packet can be received only as a result of a correctable error in the other end point (Transmitter).",
        "implication": "The processor does not comply with the PCI Express 2.0 Specification. This does not impact functional compatibility or interoperability with other PCIe devices.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express x16 Root Port Incorrectly NAK's a Nullified TLP",
        "problem": "In the processor, the PCI Express root port may NAK a nullified TLP (Transaction Layer Packet). This behavior is a result of an incorrect DW (Double Word) enable generation on the processors when packets end with EDB (End Bad Symbol). This also occurs only if total TLP length <= 8 DW in which CRC (Cyclic Redundancy Check) check/framing upstream checks will fail. This failure causes a NAK to be unexpectedly generated for TLP's which have packets with inverted CRC and EDB's. The PCI-e specification revision 2.0 states that such cycles should be dropped and no NAK should be generated. The processor should NAK a nullified TLP only when there is a CRC error or a sequence check fail.",
        "implication": "The processor does not comply with the PCI Express 2.0 Specification. This does not impact functional compatibility or interoperability with other PCIe devices.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express Graphics x16 Receiver Error Reported When Receiver With L0s Enabled and Link Retrain Performed",
        "problem": "If the Processor PCI Express root port is the receiver with L0s enabled and the root port itself initiates a transition to the recovery state via the retrain link configuration bit in the 'Link Control' register (Bus 0; Device 1 and 6; Function 0; Offset B0H; bit 5), then the root port may not mask the receiver or bad DLLP (Data Link Layer Packet) errors as expected. These correctable errors should only be considered valid during PCIe configuration and L0 but not L0s. This causes the processor to falsely report correctable errors in the 'Device Status' register (Bus 0; Device 1 and 6; Function 0; Offset AAH; bit 0) upon receiving the first FTS (Fast Training Sequence) when exiting Receiver L0s. Under normal conditions there is no reason for the Root Port to initiate a transition to Recovery. Note: This issue is only exposed when a recovery event is initiated by the processor.",
        "implication": "The processor does not comply with the PCI Express 2.0 Specification. This does not impact functional compatibility or interoperability with other PCIe devices.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Internal Parity Error May Be Incorrectly Signaled during C6 Exit",
        "problem": "In a complex set of internal conditions an internal parity error may occur during a Core C6 exit.",
        "implication": "Due to this erratum, an uncorrected error may be reported and a machine check exception may be triggered.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Extra APIC Timer Interrupt May Occur during a Write to the Divide Configuration Register",
        "problem": "If the APIC timer Divide Configuration Register (Offset 03E0H) is written at the same time that the APIC timer Current Count Register (Offset 0390H) reads 1H, it is possible that the APIC timer will deliver two interrupts.",
        "implication": "Due to this erratum, two interrupts may unexpectedly be generated by an APIC timer event.",
        "workaround": "Software should reprogram the Divide Configuration Register only when the APIC timer interrupt is disarmed.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "TXT.PUBLIC.KEY Is Not Reliable",
        "problem": "Intel TXT (Intel Trusted Execution Technology) capable processors, the TXT.PUBLIC.KEY value (Intel TXT registers FED3_0400H to FED3_041FH) is not reliable.",
        "implication": "Due to this erratum, the TXT.PUBLIC.KEY value should not be relied on or used for retrieving the hash of the Intel TXT public key for the platform.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "8259 Virtual Wire B Mode Interrupt May Be Dropped When It Collides with Interrupt Acknowledge Cycle from the Preceding Interrupt",
        "problem": "If an un-serviced 8259 Virtual Wire B Mode (8259 connected to IOAPIC) External Interrupt is pending in the APIC and a second 8259 Virtual Wire B Mode External Interrupt arrives, the processor may incorrectly drop the second 8259 Virtual Wire B Mode External Interrupt request. This occurs when both the new External Interrupt and Interrupt Acknowledge for the previous External Interrupt arrive at the APIC at the same time.",
        "implication": "Due to this erratum, any further 8259 Virtual Wire B Mode External Interrupts will subsequently be ignored.",
        "workaround": "Do not use 8259 Virtual Wire B mode when using the 8259 to deliver interrupts.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "CPUID Incorrectly Reports a C-State as Available When This State Is Unsupported",
        "problem": "CPUID incorrectly reports a non-zero value in CPUID MONITOR/MWAIT leaf (5H) EDX [19:16] when the processor does not support an MWAIT with a target C-state EAX [7:4] > 3.",
        "implication": "If an MWAIT instruction is executed with a target C-state EAX [7:4] > 3 then unpredictable system behavior may result.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Processor Hangs on Package C6 State Exit",
        "problem": "An internal timing condition in the processor power management logic will result in processor hangs upon a Package C6 state exit.",
        "implication": "Due to this erratum, the processor will hang during Package C6 state exitNone identified.",
        "workaround": "is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "A Synchronous SMI May Be Delayed",
        "problem": "A synchronous SMI (System Management Interrupt) occurs as a result of an SMI generating I/O Write instruction and should be handled prior to the next instruction executing. Due to this erratum, the processor may not observe the synchronous SMI prior to execution of the next instruction.",
        "implication": "Due to this erratum, instructions after the I/O Write instruction, which triggered the SMI, may be allowed to execute before the SMI handler. Delayed delivery of the SMI may make it difficult for an SMI Handler to determine the source of the SMI. Software that relies on the IO_SMI bit in SMM save state or synchronous SMI behavior may not function as expected.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express Cards May Not Train to x16 Link Width",
        "problem": "The Maximum Link Width field in the Link Capabilities register (LCAP; Bus 0; Device 1; Function 0; offset 0xAC; bits [9:4]) may limit the width of the PCI Express link to x8, even though the processor may actually be capable of supporting the full x16 width.",
        "implication": "Implication: PCI Express x16 Graphics Cards used in normal operation and PCI Express CLB (Compliance Load Board) Cards used during PCI Express Compliance mode testing may only train to x8 link width.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "The APIC Timer Current Count Register May Prematurely Read 0x0 While the Timer Is Still Running",
        "problem": "The APIC Timer Current Counter Register may prematurely read 0x00000000 while the timer is still running. This problem occurs when a core frequency or C-state transition occurs while the APIC timer countdown is in progress.",
        "implication": "Due to this erratum, certain software may incorrectly assess that the APIC timer countdown is complete when it is actually still running. This erratum does not affect the delivery of the timer interrupt.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "FSW May Be Corrupted If an x87 Store Instruction Causes a Page Fault in VMX Non-Root Operation After a PD Exit",
        "problem": "The X87 FSW (FPU Status Word) may be corrupted if execution of a floating-point store instruction (FST, FSTP, FIST, FISTP, FISTTP) causes a page fault in VMX non-root operation.",
        "implication": "This erratum may result in unexpected behavior of software that uses x87 FPU instructions.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "CKE May go Low Within tRFC(min) After a PD Exit",
        "problem": "After a refresh command is issued, followed by an early PD(Power Down) Entry and Exit, the CKE (Clock Enable) signal may be asserted low prior to tRFC(min), the Minimum Refresh Cycle timing. This additional instance of CKE being low causes the processor not to meet the JEDEC DDR3 DRAM specification requirement (Section 4.17.4 Power-Down clarifications - Case 3).",
        "implication": "Due to this erratum, the processor may not meet the JEDEC DDR3 DRAM specification requirement that states: \u201cCKE cannot be registered low twice within a tRFC(min) window\u201d. Intel has not observed any functional failure due to this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Under Certain Low Temperature Conditions, Some Uncore Performance Monitoring Events May Report Incorrect Results",
        "problem": "Due to this erratum, under certain low operating temperatures, a small number of Last Level Cache and external bus performance monitoring events in the uncore report incorrect counts. This erratum may affect event codes in the ranges 00H to 0CH and 40H to 43H.",
        "implication": "Due to this erratum, the count value for some uncore Performance Monitoring Events may be inaccurate. The degree of under or over counting is dependent on the occurrences of the erratum condition while the counter is active. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "VM Entry to 64-Bit Mode May Fail if Bits 48 And 47 of Guest RIP Are Different",
        "problem": "VM entry to 64-bit mode should allow any value for bits [47:0] of the RIP field in the guest-state area as long as bits 63:48 are identical. Due to this erratum, such a VM entry may fail if bit 47 of the field has a value different from that of bit 48.",
        "implication": "It is not possible to perform VM entry to a 64-bit guest that has made a transition to a non-canonical instruction pointer.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VM Entry Loading an Unusable SS Might Not Set SS.B to 1",
        "problem": "If the unusable bit (bit 16) is 1 in the guest SS (Stack Segment) access-rights field, VM entry should set the B bit (default stack-pointer size) in the SS (stack segment) register to 1. Due to this erratum, VM entry may instead load SS.B from bit 14 of the guest SS access-rights field, potentially clearing SS.B to 0.",
        "implication": "This erratum can affect software only if a far RET instruction is executed after a VM entry that erroneously clears the B bit and only if the following other three conditions are also true: (1) the SS register is not loaded between VM entry and far RET; (2) the far RET instruction is executed in 64-bit mode with an immediate operand; (3) the far RET instruction makes a transition to compatibility mode without changing CPL (Current Privilege Level). Due to the far RET being executed with an immediate operand, an adjustment is made to the stack pointer. Normally, when SS is unusable the SS.B bit is 1 and the adjustment will be to the 32-bit ESP register. Due to this erratum, the adjustment will incorrectly be made to the 16-bit SP register. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Accesses to a VMCS May Not Operate Correctly If CR0.CD is Set on Any Logical Processor of a Core",
        "problem": "The VMX (virtual-machine extensions) are controlled by the VMCS (virtual-machine control structure). If CR0.CD is set on any logical processor of a core, operations using the VMCS may not function correctly. Such operations include the VMREAD and VMWRITE instructions as well as VM entries and VM exits.",
        "implication": "If CR0.CD is set on either logical processor in a core, the VMWRITE instruction may not correctly update the VMCS and the VMREAD instruction may not return correct data. VM entries may not load state properly and may not establish VMX controls properly. VM exits may not save or load state properly.",
        "workaround": "VMMs (Virtual-machine monitors) should ensure that CR0.CD is clear on all logical processors of a core before entering VMX operation on any logical processor. Software should not set CR0.CD on a logical processor if any logical processor of the same core is in VMX operation. VMM software should prevent guest software from setting CR0.CD by setting bit 30 in the CR0 guest/host mask field in every VMCS.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Correctable and Uncorrectable Cache Errors May be Reported Until the First Core C6 Transition",
        "problem": "On a subset of processors it is possible that correctable/uncorrectable cache errors may be logged and/or a machine check exception may occur prior to the first core C6 transition. The errors will be logged in IA32_MC5_STATUS MSR (415H) with the MCACOD (Machine Check Architecture Error Code) bits [15:0] indicating a Cache Hierarchy Error of the form 000F 0001 RRRR TTLL.",
        "implication": "Due to this erratum, correctable/uncorrectable cache error may be logged or signaled.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "DTS Temperature Data May Be Incorrect On a Return From the Package C6 Low Power State",
        "problem": "The DTS (Digital Thermal Sensor) temperature value may be incorrect for a small period of time (less than 2ms) after a return from the package C6 low power state.",
        "implication": "The DTS temperature data (including temperatures read by Platform Environment Control Interface) may be reported lower than the actual temperature. Fan speed control or other system functions which are reliant on correct DTS temperature data may behave unpredictably.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "USB Devices May Not Function Properly With Integrated Graphics While Running Targeted Stress Graphics Workloads With Non- Matching Memory Configurations",
        "problem": "When the integrated graphics engine continuously generates a large stream of writes to system memory, and Intel Flex Memory Technology is enabled, with a different amount of memory in each channel, the memory arbiter may temporarily stop servicing other device-initiated traffic. In some cases this can cause certain USB devices, such as keyboard and mouse, to become unresponsive. Intel has only observed this erratum with targeted stress content. This erratum is not seen when the platform is configured with single channel or dual channel symmetric memory and is not dependent on the memory frequency.",
        "implication": "Due to this erratum, certain USB devices may become unresponsive.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VM Entry May Omit Consistency Checks Related to Bit 14 (BS) of the Pending Debug Exception Field in Guest-State Area of the VMCS",
        "problem": "Section \u201cChecks on Guest Non-Register State\u201d of Volume 3B specifies consistency checks that VM entry should perform for bit 14 (BS, indicating a pending single-step exception) of the pending debug exception field in guest-state area of the VMCS. These checks enforce the consistency of that bit with other fields in the guest-state area. Due to this erratum, VM entry may fail to perform these checks.",
        "implication": "A logical processor may enter VMX non-root operation with a pending single-step debug exception that not consistent other register state; this may result in unexpected behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "When using VMWRITE to write to a field in the guest-state area, software should ensure that the value written is consistent with the state of other guest-state fields.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Intel Turbo Boost Technology Ratio Changes May Cause Unpredictable System Behavior",
        "problem": "When Intel Turbo Boost Technology is enabled as determined by the TURBO_MODE_DISABLE bit being \u201c0\u201d in the IA32_MISC_ENABLES MSR (1A0H), the process of locking to new ratio may cause the processor to run with incorrect ratio settings. The result of this erratum may be unpredictable system behavior.",
        "implication": "Due to this erratum, unpredictable system behavior may be observed.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of VMPTRLD May Corrupt Memory If Current-VMCS Pointer is Invalid",
        "problem": "If the VMCLEAR instruction is executed with a pointer to the current-VMCS (virtual- machine control structure), the current-VMCS pointer becomes invalid as expected. A subsequent execution of the VMPTRLD (Load Pointer to Virtual-Machine Control Structure) instruction may erroneously overwrite the four bytes at physical address 0000008FH.",
        "implication": "Due to this erratum, the four bytes in system memory at physical address 0000008FH may be corrupted.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Executing The GETSEC Instruction While Throttling May Result in a Processor Hang",
        "problem": "If the processor throttles due to either high temperature thermal conditions or due to an explicit operating system throttling request (TT1) while executing GETSEC[SENTER] or GETSEC[SEXIT] instructions, then under certain circumstances, the processor may hang. Intel has not been observed this erratum with any commercially available software.",
        "implication": "Possible hang during execution of GETSEC instruction.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "MCIP Bit Not Checked on SENTER or ENTERACCS",
        "problem": "Problem: When an ILP (Initiating Logical Processor) executes GETSEC with either the SENTER or ENTERACCS leaf function, the processor should check the MCIP (Machine Check In Progress) bit in the IA32_MCG_STATUS MSR (17AH) to determine if any machine check exception is being processed. If a machine check is in progress the ILP should generate a general protection exception. Due to this erratum, the general protection exception is not generated.",
        "implication": "If GETSEC is executed with either the SENTER or ENTERACCS leaf function, and a machine check exception is being processed, ILP will enter an authenticated execution mode instead of generating a general protection exception.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "EOI-Broadcast Suppression May Not Function Properly if Enabled or Disabled While an Interrupt is in Service",
        "problem": "If a processor supports EOI-broadcast suppression, a write to the local APIC\u2019s EOI register does not generate a broadcast EOI (even if the interrupt is level-triggered) if bit 12of the local APIC\u2019s SVR (Spurious-Interrupt Vector Register) is set at the time of the write. Due to this erratum, the local APIC decides whether to generate a broadcast EOI based on the value that bit 12 of the SVR had at the time at which the most recent interrupt was delivered or the time of the most recent write to the EOI register (whichever is later).",
        "implication": "If software modifies bit 12 of SVR while servicing an interrupt, the next write to the EOI register may not use the new bit value.",
        "workaround": "Software should not modify bit 12 of SVR while servicing a level-triggered interrupt.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Unexpected Load May Occur on Execution of Certain Opcodes",
        "problem": "If software executes an instruction with an opcode of the form 66 0F 38 8x (where x is in therange 0 to 6), the processor may unexpectedly perform a load operation (the data loaded is not used). The load occurs even if the instruction causes a VM exit or a fault (including an invalid-opcode exception). If the VMXON instruction has been executed successfully, the load is from the physical address in the VMXON pointer plus 408H;otherwise, it is from physical address 407H. The affected opcodes include the INVEPT and INVVPID instructions as well as five invalid opcodes.",
        "implication": "This erratum may cause incorrect side effects if the load accesses a memory-mapped I/ O device. Intel has not observed this erratum with any commercially available system.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VM Entry Loading an Unusable SS Might Not Clear Bits 3:0 of the SS Base Address",
        "problem": "If the unusable bit (bit 16) is 1 in the guest SS access-rights field, VM entry should clear bits 3:0 of the base address of the SS register. Due to this erratum, VM entry may instead load these bits from the guest SS base-address field, leaving them with a non- zero value.",
        "implication": "Following a VM entry affected by this erratum, the exception caused by an SSE access through SS outside 64-bit mode may use the wrong exception vector (#GP instead of #SS or vice versa, dependent on the linear address being aligned or misaligned). Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Intel\u00ae Trusted Execution Technology ACM Revocation",
        "problem": "SINIT ACM i7_QUAD_SINIT_20.BIN or earlier are revoked and will not launch with new processor configuration information.",
        "implication": "Due to this erratum, SINIT ACM i7_QUAD_SINIT_20.BIN and earlier will be revoked.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum. All Intel\u00ae TXT enabled software must use SINIT ACM i7_QUAD_SINIT_51.BIN or later.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Intel\u00ae Processor Graphics VT-d IOTLB Invalidation Operation May Fail to Complete",
        "problem": "Intel\u00ae Processor Graphics IOTLB (Input Output Translation Look-aside Buffer) invalidation operation submitted through IVT (Invalidate IOTLB) bit 63 of the IOTLB_REG (GFXVTBAR offset 0x108) register on the Intel VT-d (Intel Virtualization Technology for Directed I/O) engine may fail to complete if there are ongoing translations active in the graphics device command streamer. As a result of the failed operation the VT-d software could remain indefinitely in a polling loop waiting for the IVT bit to become clear.",
        "implication": "Due to this erratum, the VT-d software may continuously execute code in a polling loop causing the system software to hang.",
        "workaround": "This erratum can be avoided by software supporting VT-d ensuring that the graphics command streamer is idle as a precondition for IOTLB invalidations affecting Intel Processor Graphics.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "IA32_VMX_VMCS_ENUM MSR (48AH) Does Not Properly Report The Highest Index Value Used For VMCS Encoding",
        "problem": "IA32_VMX_VMCS_ENUM MSR (48AH) bits 9:1 report the highest index value used for any VMCS encoding. Due to this erratum, the value 21 is returned in bits 9:1 although there is a VMCS field whose encoding uses the index value 23.",
        "implication": "Software that uses the value reported in IA32_VMX_VMCS_ENUM[9:1] to read and write all VMCS fields may omit one field.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VM Exit May Set IA32_EFER.NXE When IA32_MISC_ENABLE Bit 34 is Set to 1",
        "problem": "When \u201cXD Bit Disable\u201d in the IA32_MISC_ENABLE MSR (1A0H) bit 34 is set to 1, it should not be possible to enable the \u201cexecute disable\u201d feature by setting IA32_EFER.NXE. Due to this erratum, a VM exit that occurs with the 1-setting of the \u201cload IA32_EFER\u201d VM-exit control may set IA32_EFER.NXE even if IA32_MISC_ENABLE bit 34 is set to 1. This erratum can occur only if IA32_MISC_ENABLE bit 34 was set by guest software in VMX non-root operation.",
        "implication": "Software in VMX root operation may execute with the \u201cexecute disable\u201d feature enabled despite the fact that the feature should be disabled by the IA32_MISC_ENABLE MSR. Intel has not observed this erratum with any commercially available software.",
        "workaround": "A virtual-machine monitor should not allow guest software to write to the IA32_MISC_ENABLE MSR.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "An IRET Instruction That Results in a Task Switch Does Not Serialize The Processor",
        "problem": "An IRET instruction that results in a task switch by returning from a nested task does not serialize the processor (contrary to the Software Developer\u2019s Manual Vol. 3 section",
        "implication": "Software which depends on the serialization property of IRET during task switching may not behave as expected. Intel has not observed this erratum to impact the operation of any commercially available software.",
        "workaround": "None identified. Software can execute an MFENCE instruction immediately prior to the IRET instruction if serialization is needed.",
        "status": "For the stepping affected, see the Summary Tables of Changes."
    },
    {
        "title": "DR6.B0-B3 May Not Report All Breakpoints Matched When a MOV/POP SS is Followed by a Store or an MMX Instruction",
        "problem": "Normally, data breakpoints matches that occur on a MOV SS, r/m or POP SS will not cause a debug exception immediately after MOV/POP SS but will be delayed until the instruction boundary following the next instruction is reached. After the debug exception occurs, DR6.B0-B3 bits will contain information about data breakpoints matched during the MOV/POP SS as well as breakpoints detected by the following instruction. Due to this erratum, DR6.B0-B3 bits may not contain information about data breakpoints matched during the MOV/POP SS when the following instruction is either an MMX instruction that uses a memory addressing mode with an index or a store instruction.",
        "implication": "When this erratum occurs, DR6 may not contain information about all breakpoints matched. This erratum will not be observed under the recommended usage of the MOV SS,r/m or POP SS instructions (i.e., following them only with an instruction that writes (E/R)SP).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "IO_SMI Indication in SMRAM State Save Area May be Set Incorrectly",
        "problem": "The IO_SMI bit in SMRAM's location 7FA4H is set to \u201c1\u201d by the CPU to indicate a System Management Interrupt (SMI) occurred as the result of executing an instruction that reads from an I/O port. Due to this erratum, the IO_SMI bit may be incorrectly set by: \u2022A non-I/O instruction \u2022SMI is pending while a lower priority event interrupts \u2022A REP I/O read \u2022A I/O read that redirects to MWAIT",
        "implication": "SMM handlers may get false IO_SMI indication.",
        "workaround": "The SMM handler has to evaluate the saved context to determine if the SMI was triggered by an instruction that read from an I/O port. The SMM handler must not restart an I/O instruction if the platform has not been configured to generate a synchronous SMI for the recorded I/O port address.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PEBS Record not Updated when in Probe Mode",
        "problem": "When a performance monitoring counter is configured for PEBS (Precise Event Based Sampling), overflows of the counter can result in storage of a PEBS record in the PEBS buffer. Due to this erratum, if the overflow occurs during probe mode, it may be ignored and a new PEBS record may not be added to the PEBS buffer.",
        "implication": "Due to this erratum, the PEBS buffer may not be updated by overflows that occur during probe mode.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Unsupported PCIe* Upstream Access May Complete with an Incorrect Byte Count",
        "problem": "PCIe* Upstream IO and Configuration accesses are not supported. If an IO or Configuration request is received upstream, the integrated PCIe controller will treat it as an unsupported request, the request will be dropped, and a completion will be sent with the UR (Unsupported Request) completion status. This completion, according to the PCIe specification, should indicate a byte count of 4. Due to this erratum, the byte count is set to the same byte count as the offending request.",
        "implication": "The processor response to an unsupported PCIe access may not fully comply to the PCIe specification.",
        "workaround": "PCIe agents should not issue unsupported accesses.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Malformed PCIe* Transactions May be Treated as Unsupported Requests Instead of as Critical Errors",
        "problem": "PCIe MSG/MSG_D TLPs (Transaction Layer Packets) with incorrect Routing Code as well as the deprecated TCfgRD and TCfgWr types should be treated as malformed transactions leading to a critical error. Due to this erratum, the integrated PCIe controller's root ports may treat such messages as UR (Unsupported Requests).",
        "implication": "Legacy malformed PCIe transactions may be treated as UR instead of as critical errors.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Root Port May Not Initiate Link Speed Change",
        "problem": "PCIe specification rev 2.0 requires the upstream component to maintain the PCIe link at the target link speed or the highest speed supported by both components on the link, whichever is lower. PCIe root port will not initiate the link speed change without being triggered by the software. System BIOS will trigger the link speed change under normal boot scenarios. However, BIOS is not involved in some scenarios such as link disable/re-enable or secondary bus reset and therefore the speed change may not occur unless initiated by the downstream component. This erratum does not affect the ability of the downstream component to initiate a link speed change. All known 5.0Gb/ s-capable PCIe downstream components have been observed to initiate the link speed change without relying on the root port to do so.",
        "implication": "Due to this erratum, the PCIe root port may not initiate a link speed change during some hardware scenarios causing the PCIe link to operate at a lower than expected speed. Intel has not observed this erratum with any commercially available platform.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Incorrect Address Computed For Last Byte of FXSAVE/FXRSTOR or XSAVE/XRSTOR Image Leads to Partial Memory Update",
        "problem": "A partial memory state save of the FXSAVE or XSAVE image or a partial memory state restore of the FXRSTOR or XRSTOR image may occur if a memory address exceeds the 64KB limit while the processor is operating in 16-bit mode or if a memory address exceeds the 4GB limit while the processor is operating in 32-bit mode.",
        "implication": "FXSAVE/FXRSTOR or XSAVE/XRSTOR will incur a #GP fault due to the memory limit violation as expected but the memory state may be only partially saved or restored.",
        "workaround": "Software should avoid memory accesses that wrap around the respective 16-bit and 32-bit mode memory limits.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "FP Data Operand Pointer May Be Incorrectly Calculated After an FP Access Which Wraps a 64-Kbyte Boundary in 16-Bit Code",
        "problem": "The FP (Floating Point) Data Operand Pointer is the effective address of the operand associated with the last non-control FP instruction executed by the processor. If an 80- bit FP access (load or store) occurs in a 16-bit mode other than protected mode (in which case the access will produce a segment limit violation), the memory access wraps a 64-Kbyte boundary, and the FP environment is subsequently saved, the value contained in the FP Data Operand Pointer may be incorrect.",
        "implication": "Due to this erratum, the FP Data Operand Pointer may be incorrect. Wrapping an 80-bit FP load around a segment boundary in this way is not a normal programming practice. Intel has not observed this erratum with any commercially available software.",
        "workaround": "If the FP Data Operand Pointer is used in an operating system which may run 16-bit FP code, care must be taken to ensure that no 80-bit FP accesses are wrapped around a 64-Kbyte boundary.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Spurious Interrupts May be Generated From the Intel\u00ae VT-d Remap Engine",
        "problem": "If software clears the F (Fault) bit 127 of the Fault Recording Register (FRCD_REG at offset 0x208 in Remap Engine BAR) by writing 1b through RW1C command (Read Write 1 to Clear) when the F bit is already clear then a spurious interrupt from Intel\u00ae VT-d (Intel\u00ae Virtualization Technology for Directed I/O) Remap Engine may be observed.",
        "implication": "Due to this erratum, spurious interrupts will occur from the Intel VT-d Remap Engine following RW1C clearing F bit.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Fault Not Reported When Setting Reserved Bits of Intel\u00ae VT-d Queued Invalidation Descriptors",
        "problem": "Reserved bits in the Queued Invalidation descriptors of Intel VT-d (Virtualization Technology for Directed I/O) are expected to be zero, meaning that software must program them as zero while the processor checks if they are not zero. Upon detection of a non-zero bit in a reserved field, an Intel VT-d fault should be recorded. Due to this erratum, the processor does not check reserved bit values for Queued Invalidation descriptors.",
        "implication": "Due to this erratum, faults will not be reported when writing to reserved bits of Intel VT-d Queued Invalidation Descriptors.",
        "workaround": "None identified",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VPHMINPOSUW Instruction in Vex Format Does Not Signal #UD When vex.vvvv !=1111b",
        "problem": "Processor does not signal #UD fault when executing the reserved instruction VPHMINPOSUW with vex.vvvv !=1111b.",
        "implication": "Executing VPHMINPOSUW with vex.vvvv !=1111b results in the same behavior as executing with vex.vvvv=1111b.",
        "workaround": "Software should not use VPHMINPOSUW with vex.vvvv !=1111b, in order to ensure future compatibility.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "LBR, BTM or BTS Records May have Incorrect Branch From Information After an EIST/T-state/S-state/C1E Transition or Adaptive Thermal Throttling",
        "problem": "The \u201cFrom\u201d address associated with the LBR (Last Branch Record), BTM (Branch Trace Message) or BTS (Branch Trace Store) may be incorrect for the first branch after a transition of: \u2022 EIST (Enhanced Intel\u00ae SpeedStep Technology). \u2022 T-state (Thermal Monitor states). \u2022 S1-state (ACPI package sleep state). \u2022 C1E (Enhanced C1 Low Power state). \u2022 Adaptive Thermal Throttling.",
        "implication": "When the LBRs, BTM or BTS are enabled, some records may have incorrect branch \u201cFrom\u201d addresses for the first branch after a transition of EIST, T-states, S-states, C1E, or Adaptive Thermal Throttling.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Clock Modulation Duty Cycle Cannot be Programmed to 6.25%",
        "problem": "When programming field T_STATE_REQ of the IA32_CLOCK_MODULATION MSR (19AH) bits [3:0] to '0001, the actual clock modulation duty cycle will be 12.5% instead of the expected 6.25% ratio.",
        "implication": "Due to this erratum, it is not possible to program the clock modulation to a 6.25% duty cycle.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of VAESIMC or VAESKEYGENASSIST With An Illegal Value for VEX.vvvv May Produce a #NM Exception",
        "problem": "The VAESIMC and VAESKEYGENASSIST instructions should produce a #UD (Invalid- Opcode) exception if the value of the vvvv field in the VEX prefix is not 1111b. Due to this erratum, if CR0.TS is \u201c1\u201d, the processor may instead produce a #NM (Device-Not- Available) exception.",
        "implication": "Due to this erratum, some undefined instruction encodings may produce a #NM instead of a #UD exception.",
        "workaround": "Software should always set the vvvv field of the VEX prefix to 1111b for instances of the VAESIMC and VAESKEYGENASSIST instructions.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express* Graphics Receiver Error Reported When Receiver With L0s Enabled and Link Retrain Performed",
        "problem": "If the Processor PCI Express* root port is the receiver with L0s enabled and the root port itself initiates a transition to the recovery state via the retrain link configuration bit in the 'Link Control' register (Bus 0; Device 1; Functions 0, 1, 2 and Device 6; Function 0; Offset B0H; bit 5), then the root port may not mask the receiver or bad DLLP (Data Link Layer Packet) errors as expected. These correctable errors should only be considered valid during PCIe configuration and L0 but not L0s. This causes the processor to falsely report correctable errors in the 'Device Status' register (Bus 0; Device 1; Functions 0, 1, 2 and Device 6; Function 0; Offset AAH; bit 0) upon receiving the first FTS (Fast Training Sequence) when exiting Receiver L0s. Under normal conditions there is no reason for the Root Port to initiate a transition to Recovery. Note: This issue is only exposed when a recovery event is initiated by the processor.",
        "implication": "The processor does not comply with the PCI Express 2.0 Specification. This does not impact functional compatibility or interoperability with other PCIe devices.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Unexpected #UD on VZEROALL/VZEROUPPER",
        "problem": "Execution of the VZEROALL or VZEROUPPER instructions in 64-bit mode with VEX.W set to 1 may erroneously cause a #UD (invalid-opcode exception).",
        "implication": "The affected instructions may produce unexpected invalid-opcode exceptions in 64-bit mode.",
        "workaround": "Compilers should encode VEX.W = 0 for executions of the VZEROALL and VZEROUPPER instructions in 64-bit mode to ensure future compatibility.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Perfmon Event LD_BLOCKS.STORE_FORWARD May Overcount",
        "problem": "Perfmon LD_BLOCKS.STORE_FORWARD (event 3H, umask 01H) may overcount in the cases of 4KB address aliasing and in some cases of blocked 32-byte AVX load operations. 4KB address aliasing happens when unrelated load and store that have different physical addresses appear to overlap due to partial address check done on the lower 12 bits of the address. In some cases, such memory aliasing can cause load execution to be significantly delayed. Blocked AVX load operations refer to 32-byte AVX loads that are blocked due to address conflict with an older store.",
        "implication": "The perfmon event LD_BLOCKS.STORE_FORWARD may overcount for these cases.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Conflict Between Processor Graphics Internal Message Cycles And Graphics Reads From Certain Physical Memory Ranges May Cause a System Hang",
        "problem": "Processor Graphics internal message cycles occurring concurrently with a physical memory read by graphics from certain memory ranges may cause memory reads to be stalled resulting in a system hang. The following physical page (4K) addresses cannot be assigned to Processor Graphics: 00_2005_0xxx, 00_2013_0xxx, 00_2013_8xxx and 00_4000_4xxx.",
        "implication": "Due to this erratum, accesses by the graphics engine to the defined memory ranges may cause memory reads to be stalled, resulting in a system hang.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of Opcode 9BH with the VEX Opcode Extension May Produce a #NM Exception",
        "problem": "Attempt to use opcode 9BH with a VEX opcode extension should produce a #UD (Invalid-Opcode) exception. Due to this erratum, if CR0.MP and CR0.TS are both 1, the processor may produce a #NM (Device-Not-Available) exception if one of the following conditions exists: \u202266H, F2H, F3H or REX as a preceding prefix. \u2022An illegal map specified in the VEX.mmmmm field.",
        "implication": "Due to this erratum, some undefined instruction encodings may produce a #NM instead of a #UD exception.",
        "workaround": "Software should not use opcode 9BH with the VEX opcode extension.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A Write to the IA32_FIXED_CTR1 MSR May Result in Incorrect Value in Certain Conditions",
        "problem": "Under specific internal conditions, if software tries to write the IA32_FIXED_CTR1 MSR (30AH) a value that has all bits [31:1] set while the counter was just about to overflow when the write is attempted (i.e. its value was 0xFFFF FFFF FFFF), then due to this erratum the new value in the MSR may be corrupted.",
        "implication": "Due to this erratum, IA32_FIXED_CTR1 MSR may be written with a corrupted value.",
        "workaround": "Software may avoid this erratum by writing zeros to the IA32_FIXED_CTR1 MSR, before the desired write operation.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Instruction Fetch May Cause Machine Check if Page Size and Memory Type Was Changed Without Invalidation",
        "problem": "This erratum may cause a machine-check error (IA32_MCi_STATUS.MCACOD=0150H) on the fetch of an instruction that crosses a 4-KByte address boundary. It applies only if (1) the 4-KByte linear region on which the instruction begins is originally translated using a 4-KByte page with the WB memory type; (2) the paging structures are later modified so that linear region is translated using a large page (2-MByte, 4-MByte, or 1- GByte) with the UC memory type; and (3) the instruction fetch occurs after the paging- structure modification but before software invalidates any TLB entries for the linear region.",
        "implication": "Due to this erratum, an unexpected machine check with error code 0150H may occur, possibly resulting in a shutdown. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should not write to a paging-structure entry in a way that would change, for any linear address, both the page size and the memory type. It can instead use the following algorithm: first clear the P flag in the relevant paging-structure entry (e.g., PDE); then invalidate any translations for the affected linear addresses; and then modify the relevant paging-structure entry to set the P flag and establish the new page size and memory type.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Reception of Certain Malformed Transactions May Cause PCIe* Port to Hang Rather Than Reporting an Error",
        "problem": "If the processor receives an upstream malformed non posted packet for which the type field is IO, Configuration or the deprecated TCfgRd and the format is 4 DW header, then due to this erratum the integrated PCIe controller may hang instead of reporting the malformed packet error or issuing an unsupported request completion transaction.",
        "implication": "Due to this erratum, the processor may hang without reporting errors when receiving a malformed PCIe transaction. Intel has not observed this erratum with any commercially available device.",
        "workaround": "None identified. Upstream transaction initiators should avoid issuing unsupported requests with 4 DW header formats.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "PCIe* LTR Incorrectly Reported as Being Supported",
        "problem": "LTR (Latency Tolerance Reporting) is a new optional feature specified in PCIe rev. 2.1. The processor reports LTR as supported in LTRS bit in DCAP2 register (bus 0; Device 1; Function 0; offset 0xc4), but this feature is not supported.",
        "implication": "Due to this erratum, LTR is always reported as supported by the LTRS bit in the DCAP2 register.",
        "workaround": "None the identified.",
        "status": "For steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance-Counter Overflow Indication May Cause Undesired Behavior",
        "problem": "Under certain conditions (listed below) when a performance counter overflows, its overflow indication may remain set indefinitely. This erratum affects the general- purpose performance counters IA32_PMC{0-7} and the fixed-function performance counters IA32_FIXED_CTR{0-2}. The erratum may occur if any of the following conditions are applied concurrent to when an actual counter overflow condition is reached: 1. Software disables the counter either globally through the IA32_PERF_GLOBAL_CTRL MSR (38FH), or locally through the IA32_PERFEVT- SEL{0-7} MSRs (186H-18DH), or the IA32_FIXED_CTR_CTRL MSR (38DH). 2. Software sets the IA32_DEBUGCTL MSR (1D9H) FREEZE_PERFMON_ON_PMI bit [12]. 3. The processor attempts to disable the counters by updating the state of the IA32_PERF_GLOBAL_CTRL MSR (38FH) as part of transitions such as VM exit, VM entry, SMI, RSM, or processor C-state.",
        "implication": "Due to this erratum, the corresponding overflow status bit in IA32_PERF_GLOBAL_STATUS MSR (38DH) for an affected counter may not get cleared when expected. If a corresponding counter is configured to issue a PMI (performance monitor interrupt), multiple PMIs may be signaled from the same overflow condition. Likewise, if a corresponding counter is configured in PEBS mode (applies to only the general purpose counters), multiple PEBS events may be signaled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "XSAVE Executed During Paging-Structure Modification May Cause Unexpected Processor Behavior",
        "problem": "Execution of XSAVE may result in unexpected behavior if the XSAVE instruction writes to a page while another logical processor clears the dirty flag or the accessed flag in any paging-structure entry that maps that page.",
        "implication": "This erratum may cause unpredictable system behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "C-state Exit Latencies May be Higher Than Expected",
        "problem": "Core C-state exit can be delayed if a P-state transition is requested before the pending C-state exit request is completed. Under certain internal conditions the core C-state exit latencies may be over twice the value specified in the Intel\u00ae 64 and IA-32 Architectures Optimization Reference Manual.",
        "implication": "While typical exit latencies are not impacted, the worst case core C-state exit latency may be over twice the value specified in the Intel\u00ae 64 and IA-32 Architectures Optimization Reference Manual and may lead to a delay in servicing interrupts. Intel has not observed any system failures due to this erratum.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "MSR_Temperature_Target May Have an Incorrect Value in the Temperature Control Offset Field",
        "problem": "Under certain conditions the value in MSR_Temperature_Target (1A2H) bits [15:8] (Temperature Control Offset) may indicate a temperature up to 25 degrees higher than intended.",
        "implication": "Due to this erratum, fan speed control algorithms that rely on this value may not function as expected",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Intel\u00ae VT-d Interrupt Remapping Will Not Report a Fault if Interrupt Index Exceeds FFFFH",
        "problem": "With Intel VT-d (Virtualization Technology for Directed I/O) interrupt remapping, if subhandle valid (bit 3) is set in the address of an interrupt request, the interrupt index is computed as the sum of the interrupt request\u2019s handle and subhandle. If the sum is greater than FFFFH (the maximum possible interrupt-remapping table size), a remapping fault with fault reason 21H should be reported. Due to this erratum, this condition is not reported as a fault. Instead, the low 16 bits of the sum are erroneously used as an interrupt index to access the interrupt-remapping table.",
        "implication": "If the interrupt index of an interrupt request exceeds FFFFH, a remapping fault with fault reason 21H is not reported and, instead, the request uses the IRTE (interrupt- remapping table entry) indexed by the low 16 bits of the interrupt index.",
        "workaround": "Software can use requestor-id verification to block the interrupts that would be delivered due to this erratum. Interrupts blocked in this way produce a remapping fault with fault reason 26H.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "PCIe* Link Speed May Not Change From 5.0 GT/s to 2.5 GT/s",
        "problem": "If a PCI Express device changes its supported PCIe link speed from 5.0 GT/s to 2.5 GT/ s without initiating a speed change request and subsequently the L1 power management mode is entered, further retrains initiated by software will not change speed to 2.5 GT/s.",
        "implication": "Intel has not observed any PCI Express device that changes supported link speed without actually initiating a speed change.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "TSC Deadline Not Armed While in APIC Legacy Mode",
        "problem": "Under specific timing conditions, when in Legacy APIC Mode, writing to IA32_TSC_DEADLINE MSR (6E0H) may fail to arm the TSC Deadline (Time Stamp Counter Deadline) event as expected. Exposure to this erratum is dependent on the proximity of TSC_Deadline MSR Write to a Timer CCR register read or to a write to the Timer LVT that enabled the TSC Deadline mode (writing 10 to bits [18:17] of Timer LVT).",
        "implication": "Due to this erratum the expected timer event will either not be generated or will be generated at a wrong time. The TSC Deadline may fail until an LVT write to transition from \u201cTSC Deadline mode\u201d back to \u201cTimer mode\u201d occurs or until the next reset.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Upstream TCfgWr May Cause Unpredictable System Behavior",
        "problem": "TCfgWr (Trusted Configuration Writes) is a PCIe Base spec deprecated transaction type which should be treated as a malformed packet. If a PCIe upstream TCfgWr request is received, then due to this erratum the request may not be managed as a Malformed Packet.",
        "implication": "Upstream memory writes subsequent to a TCfgWr transaction may cause unpredictable system behavior. Intel has not observed any PCIe Device that sends such a TCfgWr request.",
        "workaround": "PCIe end points should not initiate upstream TCfgWr requests.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Processor May Fail to Acknowledge a TLP Request",
        "problem": "When a PCIe root port\u2019s receiver is in Receiver L0s power state and the port initiates a Recovery event, it will issue Training Sets to the link partner. The link partner will respond by initiating an L0s exit sequence. Prior to transmitting its own Training Sets, the link partner may transmit a TLP (Transaction Layer Packet). Due to this erratum, the root port may not acknowledge the TLP request.",
        "implication": "After completing the Recovery event, the PCIe link partner will replay the TLP request. The link partner may set a Correctable Error status bit, which has no functional effect.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of FXSAVE or FXRSTOR With the VEX Prefix May Produce a #NM Exception",
        "problem": "Attempt to use FXSAVE or FXRSTOR with a VEX prefix should produce a #UD (Invalid- Opcode) exception. If either the TS or EM flag bits in CR0 are set, a #NM (device-not- available) exception will be raised instead of #UD exception.",
        "implication": "Due to this erratum a #NM exception may be signaled instead of a #UD exception on an FXSAVE or an FXRSTOR with a VEX prefix.",
        "workaround": "Software should not use FXSAVE or FXRSTOR with the VEX prefix.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Unexpected #UD on VPEXTRD/VPINSRD",
        "problem": "Execution of the VPEXTRD or VPINSRD instructions outside of 64-bit mode with VEX.W set to 1 may erroneously cause a #UD (invalid-opcode exception).",
        "implication": "The affected instructions may produce unexpected invalid-opcode exceptions outside 64-bit mode.",
        "workaround": "Software should encode VEX.W = 0 for executions of the VPEXTRD and VPINSRD instructions outside 64-bit mode.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A Read from The APIC-Timer CCR May Disarm The TSC_Deadline Counter",
        "problem": "When in TSC Deadline mode with TSC_Deadline timer armed (IA32_TSC_DEADLINE<>0, MSR 6E0H), a read from the local APIC\u2019s CCR (current count register) using RDMSR 0839H may disarm the TSC Deadline timer without generating an interrupt as specified in the APIC Timer LVT (Local Vector Table) entry.",
        "implication": "Due to this erratum, unexpected disarming of the TSC_Deadline counter and possible loss of an interrupt may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "An Unexpected PMI May Occur After Writing a Large Value to IA32_FIXED_CTR2",
        "problem": "If the fixed-function performance counter IA32_FIXED_CTR2 MSR (30BH) is configured to generate a performance-monitor interrupt (PMI) on overflow and the counter\u2019s value is greater than FFFFFFFFFFC0H, then this erratum may incorrectly cause a PMI if software performs a write to this counter.",
        "implication": "A PMI may be generated unexpectedly when programming IA32_FIXED_CTR2. Other than the PMI, the counter programming is not affected by this erratum as the attempted write operation does succeed.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "RDMSR From The APIC-Timer CCR May Disarm The APIC Timer in TSC Deadline Mode",
        "problem": "When in TSC Deadline mode with TSC_Deadline timer armed (IA32_TSC_DEADLINE<>0, MSR 6E0H), a read from the local APIC\u2019s CCR (current count register) in APIC MMIO space may disarm the TSC Deadline timer without generating an interrupt as specified in the APIC Timer LVT (Local Vector Table) entry.",
        "implication": "Due to this erratum, unexpected disarming of the APIC timer and possible loss of an interrupt may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes \uf020"
    },
    {
        "title": "RC6 Entry Can be Blocked by Asynchronous Intel\u00ae VT-d Flows",
        "problem": "The graphics Command Streamer can get into a state that will effectively inhibit graphic RC6 (Render C6) power management state entry until render reset occurs. Any asynchronous Intel VT-d (Virtualization Technology for Directed I/O) access to IOTLB can potentially cause graphics Command Streamer to get into this RC6 inhibited state.",
        "implication": "Average power will increase until RC6 is activated with a render reset.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Repeated PCIe* and/or DMI L1 Transitions During Package Power States May Cause a System Hang",
        "problem": "Under a complex set of internal conditions when the processor is in a deep power state (package C3, C6 or C7) and the PCIe and/or DMI links are toggling in and out of L1 state, internal states of the processor may become inaccessible resulting in a system hang.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express* Differential Peak-Peak Tx Voltage Swing May Violate the Specification",
        "problem": "Under certain conditions, including extreme voltage and temperature, the peak-peak voltage may be higher than the specification.",
        "implication": "Violation of PCI Express Base Specification of the VTX--DIFF-PP voltage. No failures have been observed due to this erratum.",
        "workaround": "None identified. Sugar Bay and Bromolow-WS",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Presence Detect State May Not be Accurate After a Warm Reset",
        "problem": "Under certain conditions, when there is no PCIe device present, the status of Presence Detect State bit (SLOTSTS Device 1; Function 0,1,2; Offset BAH; bit [6] and/or Device 6; Function 0; Offset BAH; bit [6]) may not be accurate after a warm reset.",
        "implication": "The Presence Detect State bit may incorrectly report a PCIe device is present even though no device is actually present, which may result in a system hang.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Display Corruption May be Seen After Graphics Voltage Rail (VCC_AXG) Power Up",
        "problem": "Powering up the processor graphics logic in the cases of initial poweron or Sx resume state power up may cause a nondeterministic state in the processor graphics logic.",
        "implication": "This erratum may cause improper 3D rendering and may result in display corruption.",
        "workaround": "A graphics driver workaround has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCMPESTRI, PCMPESTRM, VPCMPESTRI and VPCMPESTRM Always Operate with 32-bit Length Registers",
        "problem": "In 64-bit mode, using REX.W=1 with PCMPESTRI and PCMPESTRM or VEX.W=1 with VPCMPESTRI and VPCMPESTRM should support a 64-bit length operation with RAX/ RDX. Due to this erratum, the length registers are incorrectly interpreted as 32-bit values.",
        "implication": "Due to this erratum, using REX.W=1 with PCMPESTRI and PCMPESTRM as well as VEX.W=1 with VPCMPESTRI and VPCMPESTRM do not result in promotion to 64-bit length registers.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Interrupt From Local APIC Timer May Not Be Detectable While Being Delivered",
        "problem": "If the local-APIC timer\u2019s CCR (current-count register) is 0, software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the delivery-status bit in the LVT timer register and then reading the bit in the IRR (interrupt-request register) corresponding to the vector in the LVT timer register. If both values are read as 0, no timer interrupt should be in the process of being delivered. Due to this erratum, a timer interrupt may be delivered even if the CCR is 0 and the LVT and IRR bits are read as 0. This can occur only if the DCR (Divide Configuration Register) is greater than or equal to 4. The erratum does not occur if software writes zero to the Initial Count Register before reading the LVT and IRR bits.",
        "implication": "Software that relies on reads of the LVT and IRR bits to determine whether a timer interrupt is being delivered may not operate properly.",
        "workaround": "Software that uses the local-APIC timer must be prepared to handle the timer interrupts, even those that would not be expected based on reading CCR and the LVT and IRR bits; alternatively, software can avoid the problem by writing zero to the Initial Count Register before reading the LVT and IRR bits.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A PCIe* Device That Initially Transmits Minimal Posted Data Credits May Cause a System Hang",
        "problem": "Under certain conditions, if a PCIe device that initially transmits posted data credits less than Max_Payload_Size/16 + 4 (16B/4DW is unit of data flow control) and is the target of a Peer-to-Peer write of Max_Payload_Size, the system may hang due to Posted Data credit starvation.",
        "implication": "Under certain conditions, the processor may encounter a Posted Data credit starvation scenario and hang.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Some Model Specific Branch Events May Overcount",
        "problem": "Under certain internal conditions the following model specific performance monitoring branch events may overcount: \u2022BR_INST_RETIRED.NOT_TAKEN \u2022BR_INST_RETIRED.NEAR_TAKEN \u2022BR_MISP_RETIRED.NOT_TAKEN \u2022BR_MISP_RETIRED.TAKEN",
        "implication": "Due to this erratum the events may overcount.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Some Performance Monitoring Events in AnyThread Mode May Get Incorrect Count",
        "problem": "Performance monitoring AnyThread mode allows a given thread to monitor events as a result of any thread running on the same core. Due to this erratum, on systems with SMT enabled, counting any of the following performance monitoring events in AnyThread mode may get incorrect values: \u2022INST_RETIRED; \u2022OTHER_ASSISTS; \u2022UOPS_RETIRED; \u2022MACHINE_CLEARS; \u2022BR_INST_RETIRED; \u2022BR_MISP_RETIRED; \u2022SIMD_INST_RETIRED; \u2022FP_ASSIST; \u2022HW_INTERRUPTS; \u2022ROB_MISC_EVENTS; \u2022MEM_LOAD_RETIRED; \u2022MEM_LOAD_LLC_HIT_RETIRED; \u2022MEM_LOAD_LLC_MISS_RETIRED; \u2022MEM_LOAD_MISC_RETIRED;",
        "implication": "Incorrect results when counting the above performance monitoring events in AnyThread mode with SMT on.",
        "workaround": "In order to get a correct count for the above events, software may count the same event on both threads of the same physical core, and at post-processing stage sum-up the two values to get the core\u2019s net value.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PDIR May Not Function Properly With FREEZE_PERFMON_ON_PMI",
        "problem": "When the PDIR (Precise Distribution for Instructions Retired) mechanism is activated (INST_RETIRED.ALL (event C0H, umask value 00H) on Counter 1 programmed in PEBS mode) along with FREEZE_PERFMON_ON_PMI, bit 11, in the IA32_DEBUGCTL MSR (1D9h), the processor may behave in an undefined manner.",
        "implication": "Due to this erratum when FREEZE_PERFMON_ON_PMI is programmed along with PDIR the processor behavior is undefined. This can result in any of but not limited to the following: incorrect PMI interrupts, incorrect PEBS events or invalid processor state.",
        "workaround": "A software driver should not program FreezeOnPMI in conjunction with the PDIR mechanism.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "For A Single Logical Processor Package, HTT May be Set to Zero Even Though The Package Reserves More Than One APIC ID",
        "problem": "When maximum number of addressable IDs for logical processors in this physical package (CPUID.01H.EBX[23:16]) and maximum number of addressable IDs for processor cores in the physical package, (CPUID.04H.EAX[31:26]) indicate more than one reserved APIC ID, HTT (Multi-Threading, CPUID.01H.EDX[28]) should be set to One. However, due to this erratum, it may be set to Zero.",
        "implication": "Software written expecting HTT to be Zero only when a single APIC ID is reserved for the package may not function correctly.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "LBR May Contain Incorrect Information When Using FREEZE_LBRS_ON_PMI",
        "problem": "When FREEZE_LBRS_ON_PMI is enabled (bit 11 of IA32_DEBUGCTL MSR (1D9H) is set), and a taken branch retires at the same time that a PMI (Performance Monitor Interrupt) occurs, then under certain internal conditions the record at the top of the LBR stack may contain an incorrect \u201cFrom\u201d address.",
        "implication": "When the LBRs are enabled with FREEZE_LRBS_ON_PMI, the \u201cFrom\u201d address at the top of the LBR stack may be incorrect.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Programming PDIR And an Additional Precise PerfMon Event May Cause Unexpected PMI or PEBS Events",
        "problem": "PDIR (Precise Distribution for Instructions Retired) mechanism is activated by programming INST_RETIRED.ALL (event C0H, umask value 00H) on Counter 1. When PDIR is activated in PEBS (Precise Event Based Sampling) mode with an additional precise PerfMon event, an incorrect PMI or PEBS event may occur.",
        "implication": "Due to this erratum, when another PEBS event is programmed along with PDIR, an incorrect PMI or PEBS event may occur.",
        "workaround": "Software should not program another PEBS event in conjunction with the PDIR mechanism.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance Monitoring May Overcount Some Events During Debugging",
        "problem": "If the debug-control register (DR7) is configured so that some but not all of the breakpoints in the debug-address registers (DR0-DR3) are enabled and one or more of the following performance-monitoring counters are locally enabled (via IA32_CR_PERMON_EVNTSEL_CNTR{3:0}):\uf020 \uf020 BR_INST_RETIRED\uf020 BR_MISP_RETIRED\uf020 FP_ASSIST\uf020 FP_ASSIST\uf020 INST_RETIRED\uf020 MACHINE_CLEARS\uf020 MEM_LOAD_UOPS_LLC_HIT_RETIRED\uf020 MEM_LOAD_UOPS_MISC_RETIRED.LLC_MISS\uf020 MEM_LOAD_UOPS_RETIRED\uf020 MEM_TRANS_RETIRED\uf020 MEM_UOPS_RETIRED\uf020 OTHER_ASSISTS\uf020 ROB_MISC_EVENTS.LBR_INSERTS\uf020 UOPS_RETIRED\uf020 \uf020 Any of the globally enabled (via IA32_CR_EMON_PERF_GLOBAL_CTRL) counters may overcount certain events when a disabled breakpoint condition is met",
        "implication": "Performance-monitor counters may indicate a number greater than the number of events that occurred.",
        "workaround": "Software can disable all breakpoints by clearing DR7. Alternatively, software can ensure that, for a breakpoint disabled in DR7, the corresponding debug-address register contains an address that prevents the breakpoint condition from being met (e.g., a non-canonical address).",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "LTR Message is Not Treated as an Unsupported Request",
        "problem": "The PCIe* root port does not support LTR (Latency Tolerance Reporting) capability. However, a received LTR message is not treated as a UR (Unsupported Request).",
        "implication": "Due to this erratum, an LTR message does not generate a UR error.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Use of VMASKMOV to Access Memory Mapped I/O or Uncached Memory May Cause The Logical Processor to Hang",
        "problem": "Under a complex set of conditions, using VMASKMOV to reference memory mapped I/O or uncached memory may cause the logical processor to hang.",
        "implication": "Due to this erratum, the logical processor may hang. Intel's Software Developers Manual states \u201cVMASKMOV should not be used to access memory mapped I/O and un- cached memory as the access and the ordering of the individual loads or stores it does is implementation specific.\u201d Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PEBS May Unexpectedly Signal a PMI After The PEBS Buffer is Full",
        "problem": "The Software Developer\u2019s Manual states that no PMI should be generated when PEBS index reaches PEBS Absolute Maximum. Due to this erratum a PMI may be generated even though the PEBS buffer is full.",
        "implication": "PEBS may trigger a PMI even though the PEBS index has reached the PEBS Absolute Maximum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "XSAVEOPT May Fail to Save Some State after Transitions Into or Out of STM",
        "problem": "The XSAVEOPT instruction may optimize performance by not saving state that has not been modified since the last execution of XRSTOR. This optimization should occur only if the executions of XSAVEOPT and XRSTOR are either both or neither in SMM (system- management mode). Due to this erratum, this optimization may be performed by the first execution of XSAVEOPT after a transition into or out of the STM (SMM-transfer monitor) if the most recent execution of XRSTOR occurred before that transition. For transitions into the STM, the erratum applies only to transitions using the VMCALL instruction. This erratum can occur only if the two executions are at the same privilege level, use the same linear address, and are either both or neither in VMX non-root operation. The erratum does not apply if software in SMM never uses XRSTOR or XSAVEOPT.",
        "implication": "This erratum may lead to unpredictable system behavior.",
        "workaround": "STM software should execute the XRSTOR instruction with the value 0 in EDX:EAX after each transition into the STM (after setting CR4.OSXSAVE) and before each transition out of the STM. Bytes 512 to 575 of the save area used by XRSTOR should be allocated in memory, but bytes 0 to 511 need not be. Bytes 512 to 535 should all be 0.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Performance Monitor Precise Instruction Retired Event May Present Wrong Indications",
        "problem": "When the PDIR (Precise Distribution for Instructions Retired) mechanism is activated (INST_RETIRED.ALL (event C0H, umask value 00H) on Counter 1 programmed in PEBS mode), the processor may return wrong PEBS/PMI interrupts and/or incorrect counter values if the counter is reset with a SAV below 100 (Sample-After-Value is the counter reset value software programs in MSR IA32_PMC1[47:0] in order to control interrupt frequency).",
        "implication": "Due to this erratum, when using low SAV values, the program may get incorrect PEBS or PMI interrupts and/or an invalid counter state.",
        "workaround": "The sampling driver should avoid using SAV<100.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "The Value in IA32_MC3_ADDR MSR May Not be Accurate When MCACOD 0119H is Reported in IA32_MC3_Status",
        "problem": "Under certain conditions, when the The Machine Check Error Code (MCACOD) in the IA32_MC3_STATUS (MSR 040DH) register is 0119H, the value in IA32_MC3_ADDR MSR (40EH) may refer to the incoming MLC (Mid-Level Cache) cache line instead of the evicted cache line.",
        "implication": "The address in IA32_MC3_ADDR MSR (40EH) may not be accurate for MLC cache read errors with MSCOD of 119H.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "MSR_PKG_Cx_RESIDENCY MSRs May Not be Accurate",
        "problem": "If the processor is in a package C-state for an extended period of time (greater than 40 seconds) with no wake events, the value in the MSR_PKG_C{2,3,6,7}_RESIDENCY MSRs (60DH and 3F8H\u20133FAH) will not be accurate.",
        "implication": "Utilities that report C-state residency times will report incorrect data in cases of long duration package C-states.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Enabling/Disabling PEBS May Result in Unpredictable System Behavior",
        "problem": "Under certain conditions, enabling or disabling PEBS (Precise Event Based Sampling) via WRMSR to IA32_PEBS_ENABLE MSR may result in unpredictable system behavior near or coincident to this instruction.",
        "implication": "Due to this erratum, unpredictable system behavior may result.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VEX.L is Not Ignored with VCVT*2SI Instructions",
        "problem": "The VEX.L bit should be ignored for the VCVTSS2SI, VCVTSD2SI, VCVTTSS2SI, and VCVTTSD2SI instructions, however due to this erratum the VEX.L bit is not ignored and will cause a #UD.",
        "implication": "Unexpected #UDs will be seen when the VEX.L bit is set to 1 with VCVTSS2SI, VCVTSD2SI, VCVTTSS2SI, and VCVTTSD2SI instructions.",
        "workaround": "Software should ensure that the VEX.L bit is set to 0 for all scalar instructions.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Instruction Fetches Page-Table Walks May be Made Speculatively to Uncacheable Memory",
        "problem": "Page-table walks on behalf of instruction fetches may be made speculatively to uncacheable (UC) memory.",
        "implication": "If any paging structures are located at addresses in uncacheable memory that are used for memory-mapped I/O, such I/O operations may be invoked as a result of speculative execution that would never actually occur in the executed code path. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should avoid locating paging structures at addresses in uncacheable memory that are used for memory-mapped I/O",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Reported Maximum Memory Frequency Capability May Be Higher Than Expected",
        "problem": "The Intel\u00ae Pentium\u00ae Processor G645, Intel\u00ae Pentium\u00ae Processor G645T and Intel\u00ae Celeron\u00ae Processor G555 are specified for 1066 MT/s maximum DDR3 memory frequency, but report support for 1333 MT/s.The value in the DDR3 Maximum Frequency Capability (CAPID0_A - Capabilities A Register Device 0; Function 0; Offset E4\u2013E7H; bits [2:0]) may indicate a higher than expected value of 110b, specifying that the memory controller will operate at a maximum of 1333 MT/s. The memory interface will operate as per the table below. Processor DDR3 DIMM One DIMM/Channel Two DIMM/Channel Number Type Memory Frequency Memory Frequency 1066 1066 MT/s 1066 MT/s G645 >=1333 1333 MT/s 1333 MT/s 1066 1066 MT/s 1066 MT/s G645T >=1333 1333 MT/s 1333 MT/s 1066 1066 MT/s 1066 MT/s G555 >=1333 1333 MT/s 1066 MT/s",
        "implication": "There may be a slight increase to power or thermal characteristics at the faster memory speed. At the faster memory speed the processor still functions correctly and within the published power and thermal specifications.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "The Processor May Not Properly Execute Code Modified Using A Floating-Point Store",
        "problem": "Under complex internal conditions, a floating-point store used to modify the next sequential instruction may result in the old instruction being executed instead of the new instruction.",
        "implication": "Self- or cross-modifying code may not execute as expected. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified. Do not use floating-point stores to modify code.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Execution of GETSEC[SEXIT] May Cause a Debug Exception to be Lost",
        "problem": "A debug exception occurring at the same time that GETSEC[SEXIT] is executed or when an SEXIT doorbell event is serviced may be lost.",
        "implication": "Due to this erratum, there may be a loss of a debug exception when it happens concurrently with the execution of GETSEC[SEXIT]. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "VM Exits Due to GETSEC May Save an Incorrect Value for \u201cBlocking by STI\u201d in the Context of Probe-Mode Redirection",
        "problem": "The GETSEC instruction causes a VM exit when executed in VMX non-root operation. Such a VM exit should set bit 0 in the Interruptability-state field in the virtual-machine control structure (VMCS) if the STI instruction was blocking interrupts at the time GETSEC commenced execution. Due to this erratum, a VM exit executed in VMX non-root operation may erroneously clear bit 0 if redirection to probe mode occurs on the GETSEC instruction.",
        "implication": "After returning from probe mode, a virtual interrupt may be incorrectly delivered prior to GETSEC instruction. Intel has not observed this erratum with any commercially software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Specific Graphics Blitter Instructions May Result in Unpredictable Graphics Controller Behavior",
        "problem": "Specific source-copy blitter instructions in Intel\u00ae HD Graphics 2000 and 3000 Processor may result in unpredictable behavior when a blit source and destination overlap.",
        "implication": "Due to this erratum, the processor may exhibit unpredictable graphics controller behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "IA32_MC5_CTL2 is Not Cleared by a Warm Reset",
        "problem": "IA32_MC5_CTL2 MSR (285H) is documented to be cleared on any reset. Due to this erratum this MSR is only cleared upon a cold reset.",
        "implication": "The algorithm documented in Software Developer\u2019s Manual, Volume 3, section titled \u201cCMCI Initialization\u201d or any other algorithm that counts the IA32_MC5_CTL2 MSR being cleared on reset will not function as expected after a warm reset",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance Monitor Counters May Produce Incorrect Results",
        "problem": "When operating with SMT enabled, a memory at-retirement performance monitoring event (from the list below) may be dropped or may increment an enabled event on the corresponding counter with the same number on the physical core's other thread rather than the thread experiencing the event. Processors with SMT disabled in BIOS are not affected by this erratum. \uf020 The list of affected memory at-retirement events is as follows: \u2022 MEM_UOP_RETIRED.LOADS \u2022 MEM_UOP_RETIRED.STORES \u2022 MEM_UOP_RETIRED.LOCK \u2022 MEM_UOP_RETIRED.SPLIT \u2022 MEM_UOP_RETIRED.STLB_MISS \u2022 MEM_LOAD_UOPS_RETIRED.HIT_LFB \u2022 MEM_LOAD_UOPS_RETIRED.L1_HIT \u2022 MEM_LOAD_UOPS_RETIRED.L2_HIT \u2022 MEM_LOAD_UOPS_RETIRED.LLC_HIT \u2022 MEM_LOAD_UOPS_MISC_RETIRED.LLC_MISS \u2022 MEM_LOAD_UOPS_LLC_HIT_RETIRED.XSNP_HIT \u2022 MEM_LOAD_UOPS_LLC_HIT_RETIRED.XSNP_HITM \u2022 MEM_LOAD_UOPS_LLC_HIT_RETIRED.XSNP_MISS \u2022 MEM_LOAD_UOPS_LLC_HIT_RETIRED.XSNP_NONE \u2022 MEM_LOAD_UOPS_RETIRED.LLC_MISS \u2022 MEM_LOAD_UOPS_LLC_MISS_RETIRED.LOCAL_DRAM \u2022 MEM_LOAD_UOPS_LLC_MISS_RETIRED.REMOTE_DRAM \u2022 MEM_LOAD_UOPS_RETIRED.L2_MISS",
        "implication": "Due to this erratum, certain performance monitoring event may produce unreliable results when SMT is enabled",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Processor May Livelock During On Demand Clock Modulation",
        "problem": "The processor may livelock when (1) a processor thread has enabled on demand clock modulation via bit 4 of the IA32_CLOCK_MODULATION MSR (19AH) and the clock modulation duty cycle is set to 12.5% (02H in bits 3:0 of the same MSR), and (2) the other processor thread does not have on demand clock modulation enabled and that thread is executing a stream of instructions with the lock prefix that either split a cacheline or access UC memory.",
        "implication": "Program execution may stall on both threads of the core subject to this erratum.",
        "workaround": "This erratum will not occur if clock modulation is enabled on all threads when using on demand clock modulation or if the duty cycle programmed in the IA32_CLOCK_MODULATION MSR is 18.75% or higher.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "DMA Remapping Faults for the Graphics VT-d Unit May Not Properly Report Type of Faulted Request",
        "problem": "When a fault occurs during DMA remapping of Graphics accesses at the Graphics VT-d unit, the type of faulted request (read or write) should be reported in bit 126 of the FRCD_REG register in the remapping hardware memory map register set. Due to this erratum, the request type may not be reported correctly.",
        "implication": "Software processing the DMA remapping faults may not be able to determine the type of faulting graphics device DMA request.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "Intel\u00ae Trusted Execution Technology ACM Authentication Failure",
        "problem": "SINIT ACM 3rd_gen_i5_i7-SINIT_51.BIN or earlier are revoked and will not launch with new processor configuration information.",
        "implication": "Due to this erratum, SINIT ACM 3rd_gen_i5_i7-SINIT_51.BIN or earlier will fail to run.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum. All Intel\u00ae TXT enabled software must use SINIT ACM 3rd_gen_i5_i7-SINIT_67.BIN or later.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Address Translation Faults for Intel\u00ae VT-d May Not be Reported for Display Engine Memory Accesses",
        "problem": "The Intel\u00ae VT-d (Intel\u00ae Virtualization Technology for Directed I/O) hardware unit supporting the Processor Graphics device may not report address translation faults detected on Display Engine memory accesses when the Context Cache is disabled or during time periods when Context Cache is being invalidated.",
        "implication": "Due to this erratum, Display Engine accesses that fault are correctly aborted but may not be reported in the FSTS_REG fault reporting register (GFXVTDBAR offset 034H).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance Monitor Instructions Retired Event May Not Count Consistently",
        "problem": "The Performance Monitor Instructions Retired event (Event C0H; Umask 00H) and the instruction retired fixed counter IA32_FIXED_CTR0 MSR (309H) are used to count the number of instructions retired. Due to this erratum, certain internal conditions may cause the counter(s) to increment when no instruction has retired or to intermittently not increment when instructions have retired.",
        "implication": "A performance counter counting instructions retired may over count or under count. The count may not be consistent between multiple executions of the same code.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of BIST During Cold RESET Will Result in a Machine Check Shutdown",
        "problem": "If BIST (Built In Self-Test) is enabled and a Cold RESET follows, an unrecoverable machine check shutdown will occur.",
        "implication": "Due to this erratum, BIST cannot be enabled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Performance Monitoring Event FP_MMX_TRANS_TO_MMX May Not Count Some Transitions",
        "problem": "Performance Monitor Event FP_MMX_TRANS_TO_MMX (Event CCH, Umask 01H) counts transitions from x87 Floating Point (FP) to MMX\u2122 instructions. Due to this erratum, if only a small number of MMX instructions (including EMMS) are executed immediately after the last FP instruction, a FP to MMX transition may not be counted.",
        "implication": "The count value for Performance Monitoring Event FP_MMX_TRANS_TO_MMX may be lower than expected. The degree of undercounting is dependent on the occurrences of the erratum condition while the counter is active. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "IA32_FEATURE_CONTROL MSR May be Uninitialized on a Cold Reset",
        "problem": "IA32_FEATURE_CONTROL MSR (3Ah) may have random values after RESET (including the reserved and Lock bits), and the read-modify-write of the reserved bits and/or the Lock bit being incorrectly set may cause an unexpected GP fault.",
        "implication": "Due to this erratum, an unexpected GP fault may occur and BIOS may not complete initialization.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "DR6.B0-B3 May Not Report All Breakpoints Matched When a MOV/POP SS is Followed by a REP MOVSB or STOSB",
        "problem": "Normally, data breakpoints matches that occur on a MOV SS, r/m or POP SS will not cause a debug exception immediately after MOV/POP SS but will be delayed until the instruction boundary following the next instruction is reached. After the debug exception occurs, DR6.B0-B3 bits will contain information about data breakpoints matched during the MOV/POP SS as well as breakpoints detected by the following instruction. Due to this erratum, DR6.B0-B3 bits may not contain information about data breakpoints matched during the MOV/POP SS when the following instruction is either an REP MOVSB or REP STOSB.",
        "implication": "When this erratum occurs, DR6 may not contain information about all breakpoints matched. This erratum will not be observed under the recommended usage of the MOV SS,r/m or POP SS instructions (i.e., following them only with an instruction that writes (E/R)SP).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Setting Hardware Autonomous Speed Disable Configuration Bit Will Block Initial Speed Upgrade",
        "problem": "The PCI Express* Base Specification Revision 3.0 states that the Hardware Autonomous Speed Disable bit (Link Control Register 2, bit 5) does not block the initial transition to the highest supported common link speed. Setting this bit will block all autonomous speed changes.",
        "implication": "Due to this erratum, if the Hardware Autonomous Speed Disable bit is set, a given PCIe link may remain at 2.5 GT/s transfer rate. This erratum has not been observed with any commercially available add-in cards.",
        "workaround": "It is possible for software to initiate a directed speed change.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "64-bit REP MOVSB/STOSB May Clear The Upper 32-bits of RCX, RDI And RSI Before Any Data is Transferred",
        "problem": "If a REP MOVSB/STOSB is executed in 64-bit mode with an address size of 32 bits, and if an interrupt is being recognized at the start of the instruction operation, the upper 32-bits of RCX, RDI and RSI may be cleared, even though no data has yet been copied or written.",
        "implication": "Due to this erratum, the upper 32-bits of RCX, RDI and RSI may be prematurely cleared.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "An Interrupt Recognized Prior to First Iteration of REP MOVSB/STOSB May Result EFLAGS.RF Being Incorrectly Set",
        "problem": "If a REP MOVSB/STOSB is executed and an interrupt is recognized prior to completion of the first iteration of the string operation, EFLAGS may be saved with RF=1 even though no data has been copied or stored. The Software Developer\u2019s Manual states that RF will be set to 1 for such interrupt conditions only after the first iteration is complete.",
        "implication": "Software may not operate correctly if it relies on the value saved for EFLAGS.RF when an interrupt is recognized prior to the first iteration of a string instruction. Debug exceptions due to instruction breakpoints are delivered correctly despite this erratum; this is because the erratum occurs only after the processor has evaluated instruction- breakpoint conditions.",
        "workaround": "Software whose correctness depends on value saved for EFLAGS.RF by delivery of the affected interrupts can disable fast-string operation by clearing Fast-String Enable in bit 0 in the IA32_MISC_ENABLE MSR (1A0H).",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Accessing Physical Memory Space 0-640K through the Graphics Aperture May Cause Unpredictable System Behavior",
        "problem": "The physical memory space 0-640K when accessed through the graphics aperture may result in a failure for writes to complete or reads to return incorrect results.",
        "implication": "A hang or functional failure may occur during graphics operation such as OGL or OCL conformance tests, 2D/3D games and graphics intensive application.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Instructions Retired Event May Over Count Execution of IRET Instructions",
        "problem": "Under certain conditions, the performance monitoring event Instructions Retired (Event C0H, Unmask 00H) may over count the execution of IRET instruction.",
        "implication": "Due to this erratum, performance monitoring event Instructions Retired may over count.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Link May Unexpectedly Exit Loopback State",
        "problem": "The PCIe Port is capable of functioning as 3 independent PCIe controllers. Due to this erratum, if more than one of the controllers is in Loopback.Active state and configured as a loopback slave and if any one of these controllers transition to Loopback.Exit, all controllers in Loopback.Active will transition to Loopback.Exit.",
        "implication": "Loopback.Active state on a given Link may unexpectedly exit. Software should avoid configuring more than one of the PCIe Controllers as Loopback slave concurrently.",
        "workaround": "PCIe endpoints should avoid configuring more than one of PCIe Controllers as Loopback slave.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "The RDRAND Instruction Will Not Execute as Expected",
        "problem": "On processors that support the RDRAND instruction, that capability should be reported via the setting of CPUID.01H:ECX.RDRAND[bit 30]. Due to this erratum, that bit will not be set, and the execution of the RDRAND instruction will result in a #UD exception.",
        "implication": "Software will not be able to utilize the RDRAND instruction",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum to report RDRAND as present via CPUID and allow proper execution of RDRAND.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCI Express* Gen3 Receiver Return Loss May Exceed Specifications",
        "problem": "The PCIe Base Specification includes a graph that sets requirements for maximum receiver return loss versus frequency. Due to this erratum, the receiver return loss for common mode and differential mode may exceed those requirements at certain frequencies. Under laboratory conditions, Intel has observed violations of as much as 1 dB.",
        "implication": "The PCI Express Gen3 Base Specification for receiver return loss may be exceeded. No functional failures have been observed due to this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Direct Access Via VT-d to The Processor Graphics Device May Lead to a System Hang",
        "problem": "Under a complex set of conditions, while using VT-d (Virtualization Technology for Directed I/O) with the processor graphics device, direct access to the virtualized processor graphics device can lead to a system hang or restart.",
        "implication": "Systems providing direct access to processor graphics device via VT-d may hang or restart. Intel has not observed this erratum with any commercially available system.",
        "workaround": "VMM\u2019s should ensure that all processor graphics device interactions conform to guidance published in the Intel\u00ae Open Source HD Graphics Programmer's Reference Manual and driver writers guide.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* May Associate Lanes That Are Not Part of Initial Link Training to L0 During Upconfiguration",
        "problem": "The processor should not associate any lanes that were not part of the initial link training in subsequent upconfiguration requests from an endpoint. Due to this erratum, the processor may associate any Lane that has exited Electrical Idle, even if it is beyond the width of the initial Link training.",
        "implication": "Upconfiguration requests may result in a Link wider than the initially-trained Link.",
        "workaround": "Endpoints must ensure that upconfiguration requests do not request a Link width wider than that negotiated during initial Link training.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "The Processor May Not Comply With PCIe* Equalization Preset Reflection Requirements for 8 GT/s Mode of Operation",
        "problem": "In endpoint-initiated transitions to Polling.Compliance at the 8 GT/s transfer rate, the processor must reflect, in its ordered sets, the Transmitter Preset requested by the endpoint regardless of preset legality. Due to this erratum, the processor will reflect the Transmitter Preset in use after an endpoint requests a reserved Transmitter Preset rather than the requested preset.",
        "implication": "Endpoints requiring reserved Transmitter Presets to be reflected may be adversely affected. Intel has not observed failures due to this erratum with any commercially available devices.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Processor May Issue PCIe* EIEOS at Incorrect Rate",
        "problem": "When initiating a Secondary Bus Reset or Link Disable procedure while a PCIe Link is in Recovery state, the processor should send an EIEOS (Electrical Idle Exit Ordered Set) after every 32 TS (Training Set) Ordered Sets. Due to this erratum, the processor may send an EIEOS after every 33 TS Ordered Sets.",
        "implication": "The processor may send an incorrect number of TS Ordered Sets between two EIEOS Ordered Sets when it initiates Secondary Bus Reset or Link Disable. Intel has not observed any failures with commercially available devices due to this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Reduced Swing Output Mode Needs Zero De-emphasis to be Supported in PCIe* 5GT/s Speed",
        "problem": "It may not be possible to support the PCIe Transmitter Preset 1 and/or Transmitter Preset 0 equalization requests in Phase 0 or Phase 2 of Recovery.Equalization LTSSM states when operating in 8GT/s in reduced or half swing mode, if 0dB transmitter de- emphasis needs to be supported when operating at 5GT/s.",
        "implication": "This erratum does not affect normal full swing mode of operation. Endpoints requiring 0dB support in half-swing mode should avoid requesting Transmitter Preset 1 and/or Transmitter Preset 0 as preset requests in Phase 0 or Phase 2 of Recovery.Equalization when operating in 8GT/s.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Root-port Initiated Compliance State Transmitter Equalization Settings May be Incorrect",
        "problem": "If the processor is directed to enter PCIe Polling.Compliance at 5.0 GT/s or 8.0 GT/s transfer rates, it should use the Link Control 2 Compliance Preset/De-emphasis field (bits [15:12]) to determine the correct de-emphasis level. Due to this erratum, when the processor is directed to enter Polling.Compliance from 2.5 GT/s transfer rate, it retains 2.5 GT/s de-emphasis values.",
        "implication": "The processor may operate in Polling.Compliance mode with an incorrect transmitter de-emphasis level.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Controller May Incorrectly Log Errors on Transition to RxL0s",
        "problem": "Due to this erratum, if a link partner transitions to RxL0s state within 20 ns of entering L0 state, the PCIe controller may incorrectly log an error in ?Correctable Error Status.Receiver Error Status? field (Bus 0, Device 2, Function 0, 1, 2 and Device 6, Function 0, offset 1D0H, bit 0).",
        "implication": "Correctable receiver errors may be incorrectly logged. Intel has not observed any functional impact due to this erratum with any commercially available add-in cards.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Link Width May Degrade After a Warm Reset",
        "problem": "PCIe link width may degrade after a warm reset if the Link is operating at 8.0 GT/s or 5.0 GT/s transfer speeds prior to the reset.",
        "implication": "Due to this erratum, the PCIe link may retain to a narrower width, e.g. from x16 to x4.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum. .",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "PCIe* Link May Not Enter Loopback.Active When Directed",
        "problem": "When an endpoint directs the processor to enter loopback slave mode at 8 GT/s via TS1 ordered sets with both the Loopback and Compliance Receive bits set, the PCIe link should directly enter Loopback.Active state. Due to this erratum, the processor must achieve block alignment on all looped back lanes prior to entering Loopback.Active.",
        "implication": "The processor will not enter Loopback.Active state as a loopback slave if any lane in a link cannot achieve block alignment.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Controller May Not Properly Indicate Link Electrical Idle Condition",
        "problem": "The processor supports a x16 PCIe* port, which can be bifurcated into three independent links, enumerated as Bus 0, Device 1, Function 0-2. Due to this erratum, if the port is bifurcated and Function 1 or 2 is disabled, the PCIe controller may not properly indicate Link electrical idle condition to the Power Control Unit.",
        "implication": "An incorrect Link electrical idle indication may prevent the processor from entering the lowest power mode, which may cause higher power consumption on VccIO and VccSA. Intel has not observed any functional failure or performance impact due to this erratum.",
        "workaround": "If Bus 0, Device 1, Function 1 or 2 is disabled, do not configure the x16 port to allocate lanes to those functions.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "PCIe* Controller May Not Enter Loopback",
        "problem": "The PCIe controller is expected to enter loopback if any lane in the link receives two consecutive TS1 ordered sets with the Loopback bit set. Due to this erratum, if two consecutive TS1 ordered sets are received only on certain lanes, the controller may not enter loopback.",
        "implication": "Intel has not observed any functional issue with any commercially available PCIe devices.",
        "workaround": "None Identified",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Link Margin Characterization May Hang Link",
        "problem": "The processor supports tools and mechanisms to characterize and measure margins for the PCIe interface. Due to this erratum, when performing link margin-to-failure characterization, it is possible that a high bit error rate may cause the link to hang.",
        "implication": "Under extreme conditions, poor link quality during link characterization may result in processor hang. Intel has not observed this erratum with any commercially available platforms under normal operating conditions.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Unused PCIe* Lanes May Report Correctable Errors",
        "problem": "Due to this erratum, during PCIe* link down configuration, unused lanes may report a Correctable Error Detected in Bus 0, Device 1, Function 0-2, and Device 6, Function 0, Offset 158H, Bit 0.",
        "implication": "Correctable Errors may be reported by a PCIe controller for unused lanes.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "RDMSR of IA32_PERFEVTSEL{4-7} May Return Erroneous Information",
        "problem": "When CPUID.0AH:EAX[15:8] reports 8 general-purpose performance monitoring counters per logical processor, RDMSR of IA32_PERFEVTSEL{4-7} (MSR 18AH-18DH) may not return the same value previously written by software.",
        "implication": "Software should not rely on values read from these MSRs.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes. \uf020"
    },
    {
        "title": "PCIe* Link May Fail Link Width Upconfiguration",
        "problem": "The processor supports PCIe Hardware Autonomous Width management, in which a PCIe link can autonomously vary its width. Due to this erratum, a link that performs a speed change while in a reduced width may no longer be able to return to a wider link width.",
        "implication": "PCIe links that perform speed changes while at a reduced link width may be limited to the link width in effect at the time of the speed change. Intel has not observed this erratum with any commercially available devices or platforms.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Graphics L3 Cache Parity Errors May Not be Detected",
        "problem": "The graphics engine should detect parity errors within the Graphics L3 cache. However, due to this erratum, graphics L3 cache parity errors may not be detected.",
        "implication": "There may be undetected parity errors from workloads submitted to the execution units of the graphics engine leading to unpredictable graphics system behavior.",
        "workaround": "It is possible for the graphics driver to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A PCIe* Link That is in Link Disable State May Prevent DDR I/O Buffers From Entering a Power Gated State",
        "problem": "When entering Link Disable LTSSM state, the PCIe controller may not properly indicate the Link electrical idle condition.",
        "implication": "An incorrect Link electrical idle indication may prevent the DDR I/O buffers from entering a power gated state, which may cause higher power consumption on VccIO and VccSA. Intel has not observed any functional failure or performance impact due to this erratum.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "REP MOVSB May Incorrectly Update ECX, ESI, and EDI",
        "problem": "Under certain conditions, if the execution of a REP MOVSB instruction is interrupted, the values of ECX, ESI and EDI may contain values that represent a later point in the execution of the instruction than the actual interruption point.",
        "implication": "Due to this erratum ECX, ESI, and EDI may be incorrectly advanced, resulting in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes"
    },
    {
        "title": "RDMSR of IA32_PERFEVTSEL4-7 May Return an Incorrect Result",
        "problem": "When CPUID.A.EAX[15:8] reports 8 general-purpose performance monitoring counters per logical processor, RDMSR of IA32_PERFEVTSEL4-7 (MSR 18AH:18DH) may not return the same value as previously written.",
        "implication": "Software should not rely on the value read from these MSRs. Writing these MSRs functions as expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Tables of Changes"
    },
    {
        "title": "Concurrently Changing the Memory Type and Page Size May Lead to a System Hang",
        "problem": "Under a complex set of microarchitectural conditions, the system may hang if software changes the memory type and page size used to translate a linear address while a TLB (Translation Lookaside Buffer) holds a valid translation for that linear address.",
        "implication": "Due to this erratum, the system may hang. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified. Please refer to Software Developer\u2019s Manual, volume 3, section \u201cRecommended Invalidation\u201d for the proper procedure for concurrently changing page attributes and page size.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "CPUID Instruction May Not Report the Processor Number in the Brand String for Intel\u00ae Core\u2122 i3-3227U and i5-3337U Processors.",
        "problem": "When the CPUID instruction is executed with EAX = 80000002H, 80000003H, and 80000004H, the returned brand string may be incomplete; it may be missing the processor number.",
        "implication": "When this erratum occurs, the processor may be missing the processor number in the brand string. In addition, if the affected processors are paired with the Intel\u00ae 7 Series Chipset BD82UM77 chipset, the BIOS may incorrectly report this combination as unsupported.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum, except if paired with the Intel 7 Series Chipset BD82UM77 chipset.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Spurious VT-d Interrupts May Occur When the PFO Bit is Set",
        "problem": "When the PFO (Primary Fault Overflow) field (bit [0] in the VT-d FSTS [Fault Status] register) is set to 1, further faults should not generate an interrupt. Due to this erratum, further interrupts may still occur.",
        "implication": "Unexpected Invalidation Queue Error interrupts may occur. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should be written to handle spurious VT-d fault interrupts.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "A MOV to CR3 When EPT is Enabled May Lead to an Unexpected Page Fault or an Incorrect Page Translation",
        "problem": "If EPT (extended page tables) is enabled, a MOV to CR3 may be followed by an unexpected page fault or the use of an incorrect page translation.",
        "implication": "Guest software may crash or experience unpredictable behavior as a result of this erratum.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "High Frequency Noise on DDR SMBus Signals May Prevent Proper Detection of Memory",
        "problem": "During the processor power up sequence, high frequency noise may occur on the DDR SMBus SDA and SCL signals interfering with correct information transfer.",
        "implication": "When this erratum occurs, high frequency noise may cause certain voltage translator components to latch up and, as a result, the system may not be able to detect memory.",
        "workaround": "None Identified",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Execution of Package C7 May Result in a Hang",
        "problem": "Under certain conditions, execution of Package C7 may result in a system hang on a subsequent C7 exit.",
        "implication": "Due to this erratum, the processor package may not exit Package C7, resulting in a system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "Graphics L3 Cache Redundancy May Not Behave as Expected",
        "problem": "The processor graphics L3 cache is designed to have redundancy to improve resilience to cache related errors. Due to this erratum, that redundancy may not function as expected, resulting in a potential increase in L3 cache related errors.",
        "implication": "Under certain conditions, the lack of redundancy may lead to unpredictable graphics system behavior when processor graphics L3 cache is utilized.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "During Package Power States Repeated PCIe* and/or DMI L1 Transitions May Cause a System Hang",
        "problem": "Under a complex set of internal conditions and operating temperature, when the processor is in a deep power state (package C3, C6 or C7) and the PCIe and/or DMI links are toggling in and out of L1 state, the system may hang.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Tables of Changes."
    },
    {
        "title": "CR0.CD Is Ignored in VMX Operation",
        "problem": "If CR0.CD=1, the MTRRs and PAT should be ignored and the UC memory type should be used for all memory accesses. Due to this erratum, a logical processor in VMX operation will operate as if CR0.CD=0 even if that bit is set to 1.",
        "implication": "Algorithms that rely on cache disabling may not function properly in VMX operation.",
        "workaround": "Algorithms that rely on cache disabling should not be executed in VMX root operation.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some DRAM and L3 Cache Performance Monitoring Events May Count Incorrectly",
        "problem": "Due to this erratum, the supplier information may become stale, and the following events may count incorrectly. MEM_LOAD_UOPS_RETIRED.L3_HIT (Event D1H Umask 04H) MEM_LOAD_UOPS_RETIRED.L3_MISS (Event D1H Umask 20H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS (Event D2H Umask 01H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT (Event D2H Umask 02H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM (Event D2H Umask 04H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE (Event D2H Umask 08H) MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM (Event D3H Umask 01H) MEM_TRANS_RETIRED.LOAD_LATENCY (Event CDH Umask 01H) PAGE_WALKER_LOADS.DTLB_L3 (Event BCH Umask 14H) PAGE_WALKER_LOADS.ITLB_L3 (Event BCH Umask 24H) PAGE_WALKER_LOADS.DTLB_Memory (Event BCH Umask 18H) PAGE_WALKER_LOADS.ITLB_Memory (Event BCH Umask 28H)",
        "implication": "The affected events may count incorrectly, resulting in inaccurate memory profiles. For the affected events that are precise, PEBS records may be generated at incorrect points. Intel has observed incorrect counts by as much as 40%.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Enter Shutdown Unexpectedly on a Second Uncorrectable Error",
        "problem": "If an IA32_MCi_STATUS MSR contains an uncorrectable error with MCACOD=0x406 and a second uncorrectable error occurs after warm reset but before the first error is cleared by zeroing the IA32_MCi_STATUS MSR, a shutdown will occur.",
        "implication": "When this erratum occurs, the processor will unexpectedly shut down instead of executing the machine check handler.",
        "workaround": "None identified. Software should clear IA32_MCi_STATUS MSRs as early as possible to minimize the possibility of this erratum occurring.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Modified Compliance Patterns for 2.5 GT/s and 5 GT/s Transfer Rates Do Not Follow PCIe* Specification",
        "problem": "The PCIe controller does not produce the PCIe specification defined sequence for the Modified Compliance Pattern at 2.5 GT/s and 5 GT/s transfer rates. This erratum is not seen at 8 GT/s transfer rates.",
        "implication": "Normal PCIe operation is unaffected by this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor UOPS_EXECUTED Event May Undercount",
        "problem": "The performance monitor event UOPS_EXECUTED (Event B1H, any Unmask) should count the number of UOPs executed each cycle. However due to this erratum, when eight UOPs execute in one cycle, these UOPs will not be counted.",
        "implication": "The performance monitor event UOPS_EXECUTED may reflect a count lower than the actual number of events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MSR_PERF_STATUS May Report an Incorrect Core Voltage",
        "problem": "The core operating voltage can be determined by dividing MSR_PERF_STATUS MSR (198H) bits [47:32] by 2^13. However, due to this erratum, this calculation may report half the actual core voltage.",
        "implication": "The core operating voltage may be reported incorrectly.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Atomic Transactions From Two or More PCIe Controllers May Cause Starvation",
        "problem": "On a Processor PCIe controller configuration in which two or more controllers receive concurrent atomic transactions, a PCIe controller may experience starvation which eventually can lead to a completion timeout.",
        "implication": "Atomic transactions from two or more PCIe controllers may lead to a completion timeout. Atomic transactions from only one controller will not be affected by this erratum. Intel has not observed this erratum with any commercially available device.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An AVX Gather Instruction That Causes an EPT Violation May Not Update Previous Elements",
        "problem": "When execution of an AVX gathers instruction causes an EPT (extended page table) violation due to a specific element, all previous elements should be complete. Due to this erratum, such an execution may fail to complete previous elements. In addition, the instruction's mask operand is not updated. This erratum applies only if the EPT violation occurs while updating an accessed or dirty flag in a paging-structure entry. Instructions impacted by this erratum are: VGATHERDPS, VGATHERDPD, VGATHERQPS, VGATHERQPD, VPGATHERDD, VPGATHERDQ, VPGATHERQD, and VPGATHERQQ.",
        "implication": "This erratum may prevent a gather instruction from making forward progress.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PLATFORM_POWER_LIMIT MSR Not Visible",
        "problem": "The PLATFORM_POWER_LIMIT MSR (615H) is used to control the PL3 (power limit 3) mechanism of the processor. Due to this erratum, this MSR is not visible to software.",
        "implication": "Software is unable to read or write the PLATFORM_POWER_LIMIT MSR. If software attempts to access this MSR, a general protection fault will occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LPDDR Memory May Report Incorrect Temperature",
        "problem": "When any of the four possible LPDDR ranks are not populated, the unpopulated ranks will report a default temperature of 85C as a three-bit value of 011b. If the system has unpopulated ranks the temperature of memory will be reported as 85C in PCU_CR_DDR_DIMM_HOTTEST_ABSOLUTE (MCHBAR Bus 0; Device 0; Function 0; offset 58B8H) in bits [5:7], until any of the populated ranks report a higher temperature than this.",
        "implication": "When the memory temperature is less than or equal to 85C it may be reported as 85C. This erratum does not affect DDR3 and DDR3L memory types.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Host Bridge DID May Be Incorrect",
        "problem": "The PCIe Host Bridge DID register (Bus 0; Device 0; Offset 2H) contents may be incorrect after a Package C7 exit.",
        "implication": "Software that depends on the Host Bridge DID value may not behave as expected after a Package C7 exit.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "TSC May be Incorrect After a Deep C-State Exit",
        "problem": "On exiting from Package C6 or deeper, the processor may incorrectly restore the TSC (Time Stamp Counter).",
        "implication": "Software using the TSC may produce incorrect result and/or may not behave as expected.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Controller May Initiate Speed Change While in DL_Init State Causing Certain PCIe Devices to Fail to Train",
        "problem": "The PCIe controller supports hardware autonomous speed change capabilities. Due to this erratum, the PCIe controller may initiate speed change while in the DL_Init state which may prevent link training for certain PCIe devices.",
        "implication": "Certain PCIe devices may fail to complete DL_Init causing the PCIe link to fail to train.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "AVX Gather Instruction That Causes a Fault or VM Exit May Incorrectly Modify Its Destination Register",
        "problem": "An execution of a 128-bit AVX gather instruction zeroes the upper 128 bits of the instruction's destination register unless access to the first unmasked element causes a fault or VM exit. Due to this erratum, these bits may be cleared even when accessing the first unmasked element causes a fault or VM exit. Instructions impacted by this erratum are: VGATHERDPS, VGATHERDPD, VGATHERQPS, VGATHERQPD, VPGATHERDD, VPGATHERDQ, VPGATHERQD, and VPGATHERQQ.",
        "implication": "Software that depends on the destination register of a 128-bit AVX gather instruction to remain unchanged after access of the first unmasked element results in fault or VM exit may not behave as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Inconsistent NaN Propagation May Occur When Executing (V)DPPS Instruction",
        "problem": "Upon completion of the (V)DPPS instruction with multiple different NaN encodings in the input elements, software may observe different NaN encodings in the destination elements.",
        "implication": "Inconsistent NaN encodings in the destination elements for the (V) DPPS instruction may be observed.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Display May Flicker When Package C-States Are Enabled",
        "problem": "When package C-States are enabled, the display may not be refreshed at the correct rate.",
        "implication": "When this erratum occurs, the user may observe flickering on the display.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Combinations of AVX Instructions May Cause Unpredictable System Behavior",
        "problem": "Execution of certain combinations of AVX instructions may lead to unpredictable system behavior.",
        "implication": "When this erratum occurs, unpredictable system behaviors, including system hang or incorrect results can occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Incorrectly Estimate Peak Power Delivery Requirements",
        "problem": "Under certain conditions, the processor may incorrectly calculate the frequency at which the cores and graphics engine can operate while still meeting voltage regulator and power supply peak power delivery capabilities. When this occurs, combined with high power workloads, system shutdown may be observed.",
        "implication": "When this erratum occurs, system shutdown may be observed under high power workloads.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_PERF_CTL MSR is Incorrectly Reset",
        "problem": "The IA32_PERF_CTL MSR (199H) is not initialized correctly after a processor reset.",
        "implication": "If software reads the IA32_PERF_CTL MSR before writing it, software can observe an incorrect reset value. Although incorrect values are reported to software, the correct default values for this register are still used by the processor. No performance or power impact occurs due to this erratum.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang During a Function Level Reset of the Display",
        "problem": "When package C-States are enabled, it is possible that the processor may hang when software performs a Function Level Reset of the display via bit 1 of the Advanced Features Control Register (Bus 0; Device 2; Function 0; Offset 0A8H).",
        "implication": "When this erratum occurs, the processor may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "AVX Gather Instruction That Should Result in #DF May Cause Unexpected System Behavior",
        "problem": "Due to this erratum, an execution of a 128-bit AVX gather instruction may fail to generate a #DF (double fault) when expected. Instructions impacted by this erratum are: VGATHERDPS, VGATHERDPD, VGATHERQPS, VGATHERQPD, VPGATHERDD, VPGATHERDQ, VPGATHERQD, and VPGATHERQQ.",
        "implication": "When this erratum occurs, an operation which should cause a #DF may result in unexpected system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Throttling and Refresh Rate Maybe be Incorrect After Exiting Package C-State",
        "problem": "When the OLTM (Open Loop Thermal Management) feature is enabled, the DIMM thermal status reported in DDR_THERM_PERDIMM_STATUS (MCHBAR Offset 588CH) may be incorrect following an exit from Package C3 or deeper.",
        "implication": "The incorrect DIMM thermal status may result in degraded performance from unneeded memory throttling and excessive DIMM refresh rates.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_DEBUGCTL.FREEZE_PERFMON_ON_PMI is Incorrectly Cleared by SMI",
        "problem": "FREEZE_PERFMON_ON_PMI (bit 12) in the IA32_DEBUGCTL MSR (1D9H) is erroneously cleared during delivery of an SMI (system-management interrupt).",
        "implication": "As a result of this erratum, the performance monitoring counters will continue to count after a PMI occurs in SMM (system-management Mode).",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The From-IP for Branch Tracing May be Incorrect",
        "problem": "BTM (Branch Trace Message) and BTS (Branch Trace Store) report the \u201cFrom-IP\u201d indicating the source address of the branch instruction. Due to this erratum, BTM and BTS may repeat the \u201cFrom-IP\u201d value previously reported. The \u201cTo-IP\u201d value is not affected.",
        "implication": "Using BTM or BTS reports to reconstruct program execution may be unreliable.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "TM1 Throttling May Continue Indefinitely",
        "problem": "TM1 (Thermal Monitor 1) throttling may continue when the processor\u2019s temperature decreases below the throttling point while the processor is in Package C3 or deeper.",
        "implication": "The processor will continue thermal throttling but does not indicate it is hot.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Internal Parity Errors May Incorrectly Report Overflow in The IA32_MC2_STATUS MSR",
        "problem": "Due to this erratum, uncorrectable internal parity error with an IA32_MC2_STATUS.MCACOD (bits [15:0]) value of 0005H and an IA32_MC2_STATUS.MSCOD (bits [31:16]) value of 0004H may incorrectly set the IA32_MC2_STATUS.OVER flag (bit 62) indicating an overflow when a single error has been observed.",
        "implication": "IA32_MC2_STATUS.OVER may not accurately indicate multiple occurrences of uncorrectable internal parity errors. There is no other impact to normal processor functionality.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Events OTHER_ASSISTS.AVX_TO_SSE And OTHER_ASSISTS.SSE_TO_AVX May Over Count",
        "problem": "The Performance Monitor events OTHER_ASSISTS.AVX_TO_SSE (Event C1H; Umask 08H) and OTHER_ASSISTS.SSE_TO_AVX (Event C1H; Umask 10H) incorrectly increment and over count when an HLE (Hardware Lock Elision) abort occurs.",
        "implication": "The Performance Monitor Events OTHER_ASSISTS.AVX_TO_SSE And OTHER_ASSISTS.SSE_TO_AVX may over count.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Run at Incorrect P-State",
        "problem": "The processor package may use stale software P-State (performance state) requests when one or more logical processors are idle.",
        "implication": "The processor package may run at a higher or lower than expected P-State. This issue may persist as long as any logical processor is idle.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event DSB2MITE_SWITCHES.COUNT May Over Count",
        "problem": "The Performance Monitor Event DSB2MITE_SWITCHES.COUNT (Event ABH; Umask 01H) should count the number of DSB (Decode Stream Buffer) to MITE (Macro Instruction Translation Engine) switches. Due to this erratum, the DSB2MITE_SWITCHES.COUNT event will count speculative switches and cause the count to be higher than expected.",
        "implication": "The Performance Monitor Event DSB2MITE_SWITCHES.COUNT may report count higher than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Register UNC_PERF_GLOBAL_STATUS Not Restored on Package C7 Exit",
        "problem": "MSR_UNC_PERF_GLOBAL_STATUS (392H) is a global status register which indicates the overflow of uncore performance monitor counters. The content of this register is lost in package C7 state.",
        "implication": "If any uncore performance monitor counter has overflowed before entering the package C7 state, the MSR_UNC_PERF_GLOBAL_STATUS register will no longer reflect the overflow after exiting C7 state.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Not Enter Package C6 or Deeper C-states When PCIe* Links Are Disabled",
        "problem": "If the PCIe links are disabled via Link Disable (Bus 0, Device 1, Functions [2:1], Offset B0h, bit 4) and the PCIe controller is enabled (Bus 0, Device 0, Function 0, Offset 54h, bits [2:1] = \u201911), then the processor will be unable to enter Package C6 or deeper C- states.",
        "implication": "Due to this erratum, the process will not enter Package C6 or deeper C-states.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event For Outstanding Offcore Requests And Snoop Requests May Over Count",
        "problem": "The performance monitor event OFFCORE_REQUESTS_OUTSTANDING (Event 60H, any Umask Value) should count the number of offcore outstanding transactions each cycle. Due to this erratum, the counts may be higher than actual number of events.",
        "implication": "The performance monitor events OFFCORE_REQUESTS_OUTSTANDING may reflect counts higher than the actual number of events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some Performance Monitor Event Counts May be Inaccurate During SMT Mode",
        "problem": "The performance monitor event OFFCORE_REQUESTS_OUTSTANDING (Event 60H, any Umask Value) should count the number of occurrences that loads or stores stay in the super queue each cycle. The performance monitor event CYCLE_ACTIVITY.CYCLES_L2_PENDING (Event A3H, Umask 01H) should count the number of cycles that demand loads stay in the super queue. However, due to this erratum, these events may count inaccurately during SMT mode.",
        "implication": "The performance monitor events OFFCORE_REQUESTS_OUTSTANDING and CYCLE_ACTIVITY.L2_ PENDING may be unreliable during SMT Mode.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Events HLE_RETIRED.ABORTED_MISC4 And RTM_RETIRED.ABORTED_MISC4 May Over Count",
        "problem": "The Performance Monitor Events HLE_RETIRED.ABORTED_MISC4 (Event C8H; Umask 40H) and RTM_RETIRED.ABORTED_MISC4 (Event C9H; Umask 40H) are defined to count the number of transactional aborts due to incompatible memory types. Due to this erratum, they may count additional unrelated transactional aborts.",
        "implication": "The Performance Monitor Events HLE_RETIRED.ABORTED_MISC4 and RTM_RETIRED.ABORTED_MISC4 counts may be greater than the number of aborts due to incompatible memory types. This can result in nonzero counts when all memory types are compatible.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A PCIe* LTR Update Message May Cause The Processor to Hang",
        "problem": "If a PCIe device sends an LTR (Latency Tolerance Report) update message while the processor is in a package C6 or deeper, the processor may hang.",
        "implication": "Due to this Erratum the processor may hang if a PCIe LTR update message is received while in a Package C6 or deeper.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "GETSEC Does Not Report Support For S-CRTM",
        "problem": "Processors with Intel\u00ae Boot Guard Technology that has GETSEC[PARAMETERS] leaf 5 EAX bit 5 set indicates support for processor rooted S-CTRM (Static Core Root of Trust for Measurement). Due to this erratum, that bit will not be set even though processor rooted S-CRTM is supported.",
        "implication": "Software may be unaware of support for processor rooted S-CTRM.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "APIC Timer Might Not Signal an Interrupt While in TSC-Deadline Mode",
        "problem": "If the APIC timer is in TSC-deadline mode and is armed when a timed MWAIT instruction is executed, the timer expiration might not cause an interrupt.",
        "implication": "Software depending on APIC timer TSC-deadline mode interrupts may not behave as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect FROM_IP Value For an RTM Abort in BTM or BTS May be Observed",
        "problem": "During RTM (Restricted Transactional Memory) operation when branch tracing is enabled using BTM (Branch Trace Message) or BTS (Branch Trace Store), the incorrect EIP value (From_IP pointer) may be observed for an RTM abort.",
        "implication": "Due to this erratum, the From_IP pointer may be the same as that of the immediately preceding taken branch.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VT-d Hardware May Perform STRP And SIRTP Operations on a Package C7 Exit",
        "problem": "On a package C7 exit, VT-d hardware may spuriously perform SRTP (Set Root Table Pointer) and SIRTP (Set Interrupt Remapping Table Pointer) operations. A package C7 exit can cause the value programmed by software in the RTA_REG (IRTA_REG) to be visible to hardware before software executes a GCMD.SRTP command. This will result in hardware using the new values for the DMA and interrupt translation page-walks, possibly before they are intended to be used by software.",
        "implication": "If software has updated the root table pointer but has not executed the SRTP command then the root table pointer update will happen unexpectedly, causing the VMM to walk incorrect or non-existent tables. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Privileged software should not execute a MWAIT (because it can trigger a package C7 entry/exit) between writing to RTA_REG (IRTA_REG) and GCMD_REG.SRTP (GCMD_REG.SIRTP) registers.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "General-Purpose Performance Counters Can Unexpectedly Increment",
        "problem": "A performance monitor event programmed in a general-purpose performance counter should count the number of occurrences of the event selected in IA32_PERFEVTSEL{0- 7} MSR (186H-18DH). If INV (invert, bit 23) is set to 1 and a non-zero CMASK (Counter Mask) bits [31:24] value is used, due to this erratum, the event may over count in the case that either of OS (Operating System mode, bit 17) or USR (User mode, bit 16) is selected. Over counting will occur for the cycles spent in the non- matching CPL.",
        "implication": "General-purpose performance counters may reflect counts higher than the actual number of events when the INV bit is set, CMASK is a non-zero value and either the OS or USR bit is set.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Events May Report Incorrect Number of Load Hits or Misses to LLC",
        "problem": "The following performance monitor events should count the numbers of loads hitting or missing LLC. However due to this erratum, The L3_hit related events may over count and the L3_miss related events may undercount. MEM_LOAD_RETIRED.L3_HIT (Event D1H, Umask 40H) MEM_LOAD_RETIRED.L3_MISS (Event D1H, Umask 20H) MEM_LOAD_L3_HIT_RETIRED. XSNP_NONE (Event D2H, Umask 08H) MEM_LOAD_LLC_MISS_RETIRED. LOCAL_DRAM (Event D3H, Umask 01H)",
        "implication": "The listed performance monitoring events may be inaccurate.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Locked Load Performance Monitoring Events May Under Count",
        "problem": "The performance monitoring events MEM_TRANS_RETIRED.LOAD_LATENCY (Event CDH; Umask 01H), MEM_LOAD_RETIRED.L2_HIT (Event D1H; Umask 02H), and MEM_UOPS_RETIRED.LOCKED (Event DOH; Umask 20H) should count the number of locked loads. Due to this erratum, these events may under count for locked transactions that hit the L2 cache.",
        "implication": "The above event count will under count on locked loads hitting the L2 cache.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Graphics Processor Ratio And C-State Transitions May Cause a System Hang",
        "problem": "If ratio or C-state changes involving the processor core and processor graphics occur at the same time or while processor graphics are active, under certain internal conditions the ratio change may not complete.",
        "implication": "The system may hang during C-state or ratio changes.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Performance Monitoring Events May Over Count Software Demand Loads",
        "problem": "The following performance monitor events should count the number of software demand loads. However due to this erratum, they may also include requests from the Next Page Prefetcher and over count. OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA (Event 60H; Umask 01H) OFFCORE_REQUESTS.DEMAND_DATA (Event B0H; Umask 01H) CYCLE_ACTIVITY.L2_Pending (Event A3H; Umask 01H) L2_HIT_MISS.LOAD (Event 24H; Umask 01H)",
        "implication": "The listed performance monitoring events may reflect a count higher than the actual number of events.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Accessing Nonexistent Uncore Performance Monitoring MSRs May Not Signal a #GP",
        "problem": "An access to an uncore Performance Monitor MSR beyond the number reported in the MSR_UNC_CBO_CONFIG MSR (396H) bits[3:0] should signal a #GP (general- protection exception); due to this erratum, the processor may hang instead of signaling #GP.",
        "implication": "When software accesses nonexistent uncore performance monitoring MSRs, the logical processor may hang instead of signaling a #GP.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Call Stack Profiling May Produce Extra Call Records",
        "problem": "The performance monitoring Call Stack Profiling function should not generate call records for \u201czero length calls\u201d (call instructions targeting the location following the instruction). However, due to this erratum, the processor will produce call records for zero length calls.",
        "implication": "The performance monitoring LBR call stack MSRs are incorrect in the presence of \u201czero length calls\u201d because calls and returns do not match.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Warm Reset May Fail or Lead to Incorrect Power Regulation",
        "problem": "Due to this erratum, after a warm reset, the processor may fail to boot properly or may cause power to be regulated to an incorrect level.",
        "implication": "The processor may not be able to control the VR (Voltage Regulator) to advertised specifications, leading to in a system hang, a machine check, or improper power regulation.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Transactional Abort May Produce an Incorrect Branch Record",
        "problem": "If an Intel\u00ae TSX transactional abort event occurs during a string instruction, the From- IP in the LBR (Last Branch Record) is not correctly reported.",
        "implication": "Due to this erratum, an incorrect From-IP on the LBR stack may be observed.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "AVX Gather Instructions Page Faults May Report an Incorrect Faulting Address",
        "problem": "If software modifies a paging-structure entry to relax the access rights for a linear address and does not perform a TLB invalidation, a subsequent execution of an AVX gather instruction that accesses that address may generate a page fault that loads CR2 (which should containing the faulting linear address) with an incorrect value.",
        "implication": "Software handling an affected page fault may not operate correctly.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Event Injection by VM Entry May Use an Incorrect B Flag for SS",
        "problem": "The stack accesses made by VM-entry event injection may use an incorrect value for the B flag (default stack-pointer size and upper bound) for the stack segment (SS).",
        "implication": "An affected stack access may use an incorrect address or an incorrect segment upper bound. This may result in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Fault in SMM May Result in Unpredictable System Behavior",
        "problem": "The value of the SS register as well as the current privilege level (CPL) may be incorrect following a fault in SMM (system-management mode). The erratum can occur only if a fault occurs following an SMI (system-management interrupt) and before software has loaded the SS register (e.g., with the MOV SS instruction).",
        "implication": "This erratum may cause unpredictable system behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Frequency is Unexpectedly Limited Below Nominal P1 When cTDP Down is Enabled",
        "problem": "When cTDP (Configurable Thermal Design Power) Down is enabled on a processor branded as Core\u00ae i3 or Pentium\u00ae, the processor frequency will be limited to cTDP Down P1 frequency (Max Non-Turbo Frequency) when it should be able to operate between the cTDP Down frequency P1 and the nominal P1 frequency.",
        "implication": "When cTDP is enabled, the processor cannot achieve expected frequencies.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PMI May be Signaled More Than Once For Performance Monitor Counter Overflow",
        "problem": "Due to this erratum, PMI (Performance Monitoring Interrupt) may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter.",
        "implication": "Multiple PMIs may be received when a performance monitor counter overflows.",
        "workaround": "None identified. If the PMI is programmed to generate an NMI, software may delay the EOI (end-of- Interrupt) register write for the interrupt until after the overflow indications have been cleared.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "RDRAND Execution in a Transactional Region May Cause a System Hang",
        "problem": "Execution of the RDRAND (Random number generator) instruction inside an Intel\u00ae TSX transactional region may cause the logical processor to hang.",
        "implication": "A system hang may occur as a result of this erratum.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Uncore Clock Frequency Changes May Cause Audio/Video Glitches",
        "problem": "On some processors, the time required to change the uncore clock frequency may be large enough to significantly lengthen the latency of I/O Requests to memory, possibly resulting in audio or video glitches.",
        "implication": "Audio/Video glitches may occur during uncore ratio changes.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Experience a Spurious LLC-Related Machine Check During Periods of High Activity",
        "problem": "Due to certain internal conditions while running core and memory intensive operations, some processors may incorrectly report an LLC (last level cache) related machine check with a IA32_MCi_STATUS.MCACOD value of 110AH.",
        "implication": "Due to this erratum, the processor may experience a machine check.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Processor May Not Enter Package C7 When Using a PSR Display",
        "problem": "The processor datasheet specifies that entering package C7 requires enabling PSR (Panel Self Refresh) for certain display resolutions, along with other conditions. Due to this erratum, the processor may not enter package C7 when connected to a PSR- enabled display even if all of the required conditions are met.",
        "implication": "Due to this erratum, the processor may not enter package C7.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Video/Audio Distortion May Occur",
        "problem": "Due to this erratum, internal processor operations can occasionally delay the completion of memory read requests enough to cause video or audio streaming underrun.",
        "implication": "Visible artifacts such as flickering on a video device or glitches on audio may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang When Audio is Enabled During Package C3",
        "problem": "When audio is enabled while in package C3 state or deeper, audio memory traffic continues to be generated. Due to this erratum, the processor logic required for memory traffic may be powered down.",
        "implication": "When this erratum occurs, the processor logic required for audio memory traffic may not be operational resulting in a system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "INVPCID May Not Cause #UD in VMX Non-Root Operation",
        "problem": "The INVPCID instruction should cause an invalid opcode exception (#UD) in VMX non- root operation if either bit 31 of the primary processor-based VM-execution controls (activate secondary controls) or bit 12 of the secondary processor-based VM-execution controls (enable INVPCID) is 0. Due to this erratum, the INVPCID instruction will not cause #UD if \u201cactivate secondary controls\u201d is 0 and \u201cenable INVPCID\u201d is 1. Instead, the instruction will either execute normally or cause a VM exit if the \u201cINVLPG exiting\u201d VM- execution control is 1.",
        "implication": "The processor may cause a VM exit that software does not expect. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Non-Compliant PFAT Module Base Address May Cause Unpredictable System Behavior",
        "problem": "PFAT (Platform Firmware Armoring Technology) requires the PFAT module base address be 256KB aligned and reside in the first 4GB of memory. If BIOS does not comply with these requirements when setting up the PFAT module, the processor should GP# at PFAT launch. Due to this erratum, a #GP fault may not be generated.",
        "implication": "A PFAT module that does not follow the PFAT module base address requirements may result in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this issue.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect LBR Source Address May be Reported For a Transactional Abort",
        "problem": "If the fetch of an instruction in a transactional region causes a fault, a transactional abort occurs. If LBRs are enabled, the source address recorded for such a transactional abort is the address of the instruction being fetched. If that instruction was itself the target of an earlier branch instruction, this erratum may erroneously record the address of the branch instruction as the source address for the transactional abort.",
        "implication": "Trace reconstruction software that uses LBR information may fail when this erratum occurs.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "L3 Cache Corrected Error Count May be Inaccurate After Package C7 Exit",
        "problem": "The corrected error count for L3 cache errors reported in IA32_MCi_STATUS.Corrected Error Count (bits [52:38]) with an MCACOD of 0001 0001 xxxx xxxx (x can be 0 or 1) may be incorrectly restored to a smaller value during exit from Package C7.",
        "implication": "The corrected error count for L3 cache errors in IA32_MCi_STATUS may be inaccurate after Package C7 exit.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Device\u2019s SVID is Not Preserved Across The Package C7 C-State",
        "problem": "Bus 0, Device 7, Function 0\u2019s SVID register (Subsystem Vendor Identification, Offset 2CH) is not preserved across package C7 C-State transitions.",
        "implication": "This may cause the operating system to think the device has been replaced with a different device.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Warm Reset Does Not Stop GT Power Draw",
        "problem": "Due to this erratum, if GT is enabled prior to a warm reset, it will remain powered after the warm reset. The processor will make incorrect power management decisions because it assumes the GT is not drawing power after a warm reset.",
        "implication": "The processor may draw more current than expected from an external VR (Voltage Regulator). The processor may also put the external VR into a low power state where it will be unable to supply the sufficient power resulting in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unused PCIe* Lanes May Remain Powered After Package C7",
        "problem": "If a PCIe controller is enabled and either has unused lanes or no PCIe device is present, the link and/or unused lanes should enter a low power state. Due to this erratum, after exiting Package C7, the unused link and/or unused lanes may remain powered.",
        "implication": "Power consumption may be greater than expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "BMI1 And BMI2 Instruction Groups Are Not Available",
        "problem": "Feature flags BMI1 and BMI2 (CPUID leaf 7, sub-leaf 0, EBX bits 3 and 8) report these two groups of bit manipulation instructions are not present for Intel\u00ae Core\u2122 i3-4100M these instruction groups should be available. An attempt to execute any of these instructions will generate a #UD fault.",
        "implication": "Software attempting to use any of instructions in the BMI1 and BMI2 groups will result in a #UD fault",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Energy Policy Selection May Not Work as Expected",
        "problem": "When the IA32_ENERGY_PERF_BIAS MSR (1B0H) is set to a value of 4 or more, the processor will try to increase the energy efficiency of Turbo mode. However, this functionality is effectively disabled if the software requested P-state exceeds the maximum P-state supported by the processor. This has the effect of decreasing the energy efficiency of the processor while in Turbo mode.",
        "implication": "When this erratum occurs, reduced battery life and reduced energy efficiency may occur.",
        "workaround": "BIOS should set the max ACPI _PST object to the max supported turbo ratio, ensuring that the software P-state request does not exceed the maximum ratio supported by the processor. Note that this workaround will disable Core Ratio Overclocking.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A PEBS Record May Contain Processor State for an Unexpected Instruction",
        "problem": "If a performance counter has overflowed and is configured for PEBS (precise event- based sampling), the processor will arm the PEBS hardware within a bounded number of cycles called the skid (see the discussion of skid and related topics in the Precise Distribution of Instructions Retired section of the Intel\u00ae 64 and IA-32 Architectures Software Developer Manual). Once the PEBS hardware is armed, the processor should capture processor state in a PEBS record following the execution of the next instruction that causes the counter to increment (a \u201ctriggering\u201d instruction). Due to this erratum, the capture of processor state may occur at an instruction after the first triggering instruction following the skid but not beyond the second triggering instruction after the skid.",
        "implication": "A PEBS record may contain processor state (including instruction pointer) not associated with the triggering instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MSR_PP1_ENERGY_STATUS Reports Incorrect Energy Data",
        "problem": "The MSR_PP1_ENERGY_STATUS MSR (641H) bits [31:0] reports incorrect energy data.",
        "implication": "Due to this erratum, reported Intel Integrated Graphics domain energy consumption may not be accurate.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "x87 FPU DP May be Incorrect After Instructions That Save FP State to Memory",
        "problem": "Under certain conditions, the value of the x87 FPU DP (Floating Point Unit Data Pointer) saved by the FSAVE/FNSAVE, FSTENV/FNSTENV, FXSAVE, XSAVE, or XSAVEOPT instructions may be incorrect.",
        "implication": "Due to this erratum, the x87 FPU DP may be incorrect.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang During Package C7 Exit",
        "problem": "Under certain internal timing conditions, the processor might not properly exit package C7 leading to a hang.",
        "implication": "Due to this erratum, the package C7 state may not be reliable. Intel has not observed this erratum with any commercially available system.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Spurious LLC Machine Check May Occur",
        "problem": "Under certain stressful conditions while running at ring ratios higher than 30, the processor may experience a spurious LLC machine check as indicated by IA32_MCi_STATUS.MCACOD (bits [15:0]) with value 000x 0001 0000 1010 (where x is 0 or 1).",
        "implication": "When this erratum occurs, an uncorrectable LLC error will be logged and the system may hang or restart.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Page Fault May Report Incorrect Fault Information",
        "problem": "Under the following conditions: 1. A read-modify-write instruction\u2019s memory source/destination (e.g., ADD memory, reg) crossing a cache line boundary. 2. That instruction executing without fault. 3. While the read-modify-write instruction is executing, one or more of the following page table attributes associated with its memory operand are modified: a. The D (dirty) flag was 0 when the instruction was initiated but was concurrently set to 1, and/or b. One of the relevant R/W flags was 0 when the instruction was initiated but was concurrently set to 1, and/or c.  If the read-modify-write instruction executes at CPL = 3 and one of the relevant U/S flags was 0 when the instruction was initiated but was concurrently set to 1. 4. A subsequent instruction executing within a narrow timing window that experiences a page fault. 5. There is no serializing instruction between the read-modify-write instruction and the faulting instruction. The page fault (in #4) may report an incorrect error code and faulting linear address; these would describe the read-modify-write instruction\u2019s memory access instead of that of the faulting instruction. (The address of the faulting instruction is reported correctly.)",
        "implication": "The erratum makes it appear that the page fault resulted from an access that occurred prior to the faulting instruction. Because the earlier access completed without faulting, a page-fault handler may identify the page fault as transient (or spurious) and re- execute the faulting instruction (e.g., by executing IRET). In such cases, the erratum will not recur; the page fault on the later access will recur and will be reported correctly. If the page-fault handler does not re-execute the faulting instruction, this erratum may result in unpredictable system behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "CATERR# Pin Assertion is Not Cleared on a Warm Reset",
        "problem": "If the CATERR# pin is held asserted to indicate a fatal error, a subsequent warm reset event will not cause the CATERR# pin to de-assert.",
        "implication": "When this erratum occurs, platforms that monitor the CATERR# pin may be unable to detect a fatal error after a warm reset or may incorrectly respond to a CATERR# pin assertion although an error may not have occurred subsequent to the warm reset event.",
        "workaround": "The CATERR# pin can be de-asserted by a cold reset event.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Uncorrectable Machine Check Error During Core C6 Entry May Not be Signaled",
        "problem": "Machine Check exceptions occurring during core C6 entry may be ignored.",
        "implication": "When this erratum occurs, incorrect state may be saved during core C6 entry and subsequently restored during core C6 exit resulting in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The SAMPLE/PRELOAD JTAG Command Does Not Sample The Display Transmit Signals",
        "problem": "The Display Transmit signals are not correctly sampled by the SAMPLE/PRELOAD JTAG Command, violating the Boundary Scan specification (IEEE 1149.1).",
        "implication": "The SAMPLE/PRELOAD command cannot be used to sample Display Transmit signals.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event For Outstanding Offcore Requests And Snoop Requests May be Incorrect",
        "problem": "The performance monitor event OFFCORE_REQUESTS_OUTSTANDING (Event 60H, any Umask Value) should count the number of offcore outstanding transactions each cycle. Due to this erratum, the counts may be higher or lower than expected.",
        "implication": "The performance monitor event OFFCORE_REQUESTS_OUTSTANDING may reflect an incorrect count.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe Link May Incorrectly Train to 8.0 GT/s",
        "problem": "During PCIe* 8.0 GT/s Phase 2 Equalization training, the received per-lane transmitter coefficients for physical lanes 8-15 may be incorrectly applied to the PCIe transmitters.",
        "implication": "Due to this erratum, a PCIe link may either fail to train to the 8.0 GT/s transfer speed, experience link errors, or periodically retrain (possibly dropping to a lower link speed).",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe Tx Voltage Reference Cannot be Changed",
        "problem": "PCIe* Tx Voltage Reference Select is available via the PCIE_CR_AFEBND[0:7]CFG1 (Device 1; Function 0) registers in field TxVrefSel bits [9:5]. Due to this erratum, changes to these values will have no effect.",
        "implication": "For PCIe, setting the Tx Voltage Reference Select to non-default values will not produce the reference levels documented in the register description. Tx swing control utilizes Tx Voltage Reference; Tx swing cannot be adjusted from default.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Re-enabling eDRAM May Log a Machine Check and Hang",
        "problem": "If the eDRAM was disabled as a result of a package C-State entry of C2 or higher or a software request, the subsequent package C-state exit or software request to re-enable eDRAM may result in a machine check logged in IA32_MCi_STATUS.MCACOD [15:0] with of value 402H and subsequent system hang.",
        "implication": "Due to this erratum, the system may log a machine check and hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Warm Reset Does Not Stop EDRAM Power Draw",
        "problem": "Due to this erratum, if EDRAM is enabled prior to a warm reset, it will remain powered after the warm reset. The processor will make incorrect power management decisions because it assumes the EDRAM is not drawing power after a warm reset.",
        "implication": "The processor may draw more current than expected from an external VR (Voltage Regulator). The processor may also put the external VR into a low power state where it will be unable to supply the sufficient power resulting in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Opcode Bytes F3 0F BC May Execute As TZCNT Even When TZCNT Not Enumerated by CPUID",
        "problem": "If CPUID.(EAX=07H, ECX=0):EBX.BMI1 (bit 3) is 1 then opcode bytes F3 0F BC should be interpreted as TZCNT otherwise they will be interpreted as REP BSF. Due to this erratum, opcode bytes F3 0F BC may execute as TZCNT even if CPUID.(EAX=07H, ECX=0):EBX.BMI1 (bit 3) is 0.",
        "implication": "Software that expects REP prefix before a BSF instruction to be ignored may not operate correctly since there are cases in which BSF and TZCNT differ with regard to the flags that are set and how the destination operand is established.",
        "workaround": "Software should use the opcode bytes F3 0F BC only if CPUID.(EAX=07H, ECX=0):EBX.BMI1 (bit 3) is 1 and only if the functionality of TZCNT (and not BSF) is desired.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae S2DDT May Not Function Correctly with Certain High Resolution Displays",
        "problem": "A limitation in Intel S2DDT (Intel\u00ae Smart 2D Display Technology), commonly known as frame buffer compression, may result in pixel data being supplied too slowly to the display.",
        "implication": "Screen flickering or blank screen may be observed on certain high resolution displays.",
        "workaround": "The latest version of the Intel graphics driver disables Intel S2DDT for resolutions with a pixel clock between 513 MHz and 540 MHz.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Spurious Corrected Errors May be Reported",
        "problem": "Due this erratum, spurious corrected errors may be logged in the IA32_MC0_STATUS register with the valid field (bit 63) set, the uncorrected error field (bit 61) not set, a Model Specific Error Code (bits [31:16]) of 0x000F, and an MCA Error Code (bits [15:0]) of 0x0005. If CMCI is enabled, these spurious corrected errors also signal interrupts.",
        "implication": "When this erratum occurs, software may see corrected errors that are benign. These corrected errors may be safely ignored.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Package C7 Power Consumption Has Been Observed to be Higher Than Package C6",
        "problem": "Package C7 power consumption may be higher than package C6 power consumption.",
        "implication": "When this erratum occurs, power consumption will be higher than expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum which demotes package C7 to package C6 when power consumption in package C7 is likely to be higher than in package C6.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A HyperThreading\u2122 Enabled Processor May Exhibit Unpredictable Behavior During Power or Thermal Management Operations",
        "problem": "When both logical processors in a core are idled due to power or thermal management operations such as thermal events or C-state entry, under certain circumstances, instruction fetches initiated before entering the idle state may not complete correctly, resulting in unpredictable system behavior.",
        "implication": "Due to this erratum, the processor may exhibit unpredictable system behavior. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Perfmon Events May be Counted Incorrectly When The Processor is Not in C0 State",
        "problem": "Due to this erratum, the perfmon events listed below may be counted when the logical processor is not in C0 State. IDQ.EMPTY (event code 0x79 and umask 0x02) IDQ_UOPS_NOT_DELIVERED.CORE (event code 0x9c and umask 0x01) RESOURCE_STALLS.ANY (event core 0xa2 umask 0x01) CYCLE_ACTIVITY.CYCLES_LDM_PENDING (Event A3H, Umask 02H, Cmask 02H) CYCLE_ACTIVITY.CYCLES_NO_EXECUTE (Event A3H, Umask 04H, Cmask 04H) CYCLE_ACTIVITY.STALLS_LDM_PENDING (Event A3H, Umask 06H, Cmask 06H)",
        "implication": "The count will be higher than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Software Using Intel\u00ae TSX May Result in Unpredictable System Behavior",
        "problem": "Under a complex set of internal timing conditions and system events, software using the Intel TSX (Transactional Synchronization Extensions) instructions may result in unpredictable system behavior.",
        "implication": "This erratum may result in unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Transient High Temperature Event May Cause Persistent Frequency Restrictions",
        "problem": "If the VR (Voltage Regulator) reports a high temperature condition, the processor will limit the ratio on all domains (Core/Graphics/Ring) to their respective maximum non- turbo ratios. When the thermal condition is no longer present, it\u2019s expected that the processor should release this constraint and allow the domains operate in their turbo region. Due to this erratum, if the thermal event ends when the processor is in Package C6 or deeper, the constraint will not be removed.",
        "implication": "The processor will not operate at the highest available frequencies and will have a negative impact on performance. This constraint on the ratios are cleared upon a warm or cold reset.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Running All Cores May Incorrectly Limit the Processor Frequency",
        "problem": "When all IA cores in the processor are running but not executing AVX instructions and the processor is not constrained by PL1/PL2 power limits or thermal limits, the cores should be able to operate at the 4C turbo frequency. Due to this erratum, the processor may limit core frequency under these conditions as much as several bins below the 4C turbo frequency.",
        "implication": "When this erratum occurs, the processor will not meet specified performance levels.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Concurrent Core And Graphics Operation at Turbo Ratios May Lead to System Hang",
        "problem": "Workloads that attempt concurrent operation of cores and graphics in their respective turbo ranges, under certain conditions may result in a system hang.",
        "implication": "Concurrent core and graphics operation may hang the system",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some Configurations May Violate Embedded DRAM Refresh Requirements Leading to a System Hang",
        "problem": "Due to this erratum, embedded DRAM refresh requirements may be violated for some configurations leading to memory errors.",
        "implication": "When this erratum occurs, the resulting memory errors may cause a system shutdown or hang.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Interactions Between Multiple Unaligned Memory Accesses And Locked Instructions May Lead to a Machine Check",
        "problem": "Under a complex set of conditions, interactions between multiple locked operations sharing certain low order address bits and data accesses that span a 4-KByte boundary may result in a processor internal timeout machine check (IA32_MCi_STATUS.MCACOD = 0x0400).",
        "implication": "Due to this erratum, the processor may signal a machine check exception. Intel has not observed this erratum with any commercially available system.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Fixed-Function Performance Counter May Over Count Instructions Retired by 32 When Intel\u00ae Hyper-Threading Technology is Enabled",
        "problem": "If, while Intel Hyper-Threading Technology is enabled, the IA32_FIXED_CTR0 MSR (309H) is enabled by setting bits 0 and/or 1 in the IA32_PERF_FIXED_CTR_CTRL MSR (38DH) before setting bit 32 in the IA32_PERF_GLOBAL_CTRL MSR (38FH) then IA32_FIXED_CTR0 may over count by up to 32.",
        "implication": "When this erratum occurs, the fixed-function performance counter IA32_FIXED_CTR0 may over count by up to 32.",
        "workaround": "The following sequence avoids this erratum (steps 1 and 2 are needed if the counter was previously enabled): 1. Clear bit 32 in the IA32_PERF_GLOBAL_CTRL MSR (38FH) and clear bits 1 and 0 in the IA32_PERF_FIXED_CTR_CTRL MSR (38DH). 2.   Zero the IA32_FIXED_CTR0 MSR. 3.   Set bit 32 in the IA32_PERF_GLOBAL_CTRL MSR. 4.   Set bits 0 and/or 1 in the IA32_PERF_FIXED_CTR_CTRL MSR as desired.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor UOPS_EXECUTED Event May Be Inaccurate When Using Intel\u00ae Hyper-Threading Technology",
        "problem": "The performance monitor event UOPS_EXECUTED (Event B1H, Umask 01H) counts the number of uops executed each cycle. However, due to this erratum, when using Intel Hyper-Threading Technology, the uops may not be assigned to the correct logical processor.",
        "implication": "The total number of uops executed by a core will be counted correctly but the division of uops between its logical processors may be incorrect.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Operand-Size Override Prefix Causes 64-bit Operand Form of MOVBE Instruction to Cause a #UD",
        "problem": "Execution of a 64 bit operand MOVBE instruction with an operand-size override instruction prefix (66H) may incorrectly cause an invalid-opcode exception (#UD).",
        "implication": "A MOVBE instruction with both REX.W=1 and a 66H prefix will unexpectedly cause an invalid-opcode exception (#UD). Intel has not observed this erratum with any commercially available software",
        "workaround": "Do not use a 66H instruction prefix with a 64-bit operand MOVBE instruction.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "POPCNT Instruction May Take Longer to Execute Than Expected",
        "problem": "POPCNT instruction execution with a 32 or 64 bit operand may be delayed until previous non-dependent instructions have executed.",
        "implication": "Software using the POPCNT instruction may experience lower performance than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unpredictable Operation at Turbo Frequencies Above 4.0 GHz",
        "problem": "Machine check errors, system hangs or other unpredictable system behavior may occur when operating at turbo frequencies above 4.0 GHz.",
        "implication": "The processor may signal machine check errors, hang, or exhibit other unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang or Video May be Distorted After Graphics RC6 Exit",
        "problem": "In a specific scenario, when the processor graphics exits RC6 and a processor core exits C6 at the same time, the system may become unresponsive or the video may become distorted.",
        "implication": "The system may hang or video may be distorted.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain eDP* Displays May Not Function as Expected",
        "problem": "When the processor attempts to receive data on the eDP AUX bus, the impedance seen by the display\u2019s AUX bus drivers will be significantly below the VESA* eDP (Embedded DisplayPort*) specification\u2019s requirement for the Vaux(Rx) (eDP Auxiliary Channel) input impedance.",
        "implication": "Certain eDP displays may not operate as expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some OFFCORE_RESPONSE Performance Monitoring Events May Undercount",
        "problem": "The performance monitoring events OFFCORE_RESPONSE (Events B7H and BBH) should count uncore responses matching the request-response configuration specified in MSR_OFFCORE_RSPs (1A6H and 1A7H, respectively) for core-originated requests. However due to this erratum, COREWB (bit 3), PF_L3_DATA_RD (bit 7), PF_L3_RFO (bit 8), PR_L3_CODE_RD (bit 9), SPLIT_LOCK_UC_LOCK (bit 10), and STREAMING_STORES (bit 11) request types may undercount.",
        "implication": "These performance monitoring events may not produce reliable results for the listed request types.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Settings of VM-Execution Controls May Result in Incorrect Linear-Address Translations",
        "problem": "If VM exit occurs from a guest with primary processor-based VM-execution control \u201cactivate secondary controls\u201d set to 0 and the secondary processor-based VM- execution control \u201cenable VPID\u201d set to 1, then after a later VM entry with VPID fully enabled (\u201cactivate secondary controls\u201d and \u201cenable VPID\u201d set to 1), the processor may use stale linear address translations.",
        "implication": "The processor may incorrectly translate linear addresses. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should not enter a guest with \u201cenable VPID\u201d set to 1 when \u201cactivate secondary controls\u201d is set to 0.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Attempting to Disable Turbo Mode May Cause a #GP",
        "problem": "Bit 38 of IA32_MISC_ENABLE MSR (1A0H) is Turbo Mode Disable on processors that support Intel\u00ae Dynamic Acceleration. Due to this erratum, that bit may be incorrectly treated as reserved; attempting to set Turbo Mode Disable results in a #GP (General Protection exception) even when it reads as 1.",
        "implication": "When this erratum occurs, a WRMSR to IA32_MISC_ENABLE unexpectedly causes a #GP.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Machine Check Threshold Based Error Status May be Set Incorrectly",
        "problem": "A corrected error may be logged in IA32_MCi_STATUS with the Threshold Based Error field (bits[54:53]) indicating yellow status (10b) although the part is not above the threshold.",
        "implication": "This erratum may be associated with a Cache Hierarchy Error reported in the Compound Error Code (bits[15:0]) of IA32_MCi_STATUS in the form 000F 0001 RRRR TTLL where LL is 11 and there are valid values for the other sub-fields (F, RRRR, and TT).",
        "workaround": "None identified. A power-on reset of the processor will clear the yellow bit indication. If, during system operation after that reset, yellow status is signaled again then it should be treated as a valid yellow status condition.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PECI Frequency Limited to 1 MHz",
        "problem": "The PECI (Platform Environmental Control Interface) 3.1 specification\u2019s operating frequency range is 0.2 MHz to 2 MHz. Due to this erratum, PECI may be unreliable when operated above 1 MHz.",
        "implication": "Platforms attempting to run PECI above 1 MHz may not behave as expected.",
        "workaround": "None identified. Platforms should limit PECI operating frequency to 1 MHz.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VGATHERQPS That Loads an Element From The APIC-Access Page May Load Other Elements From Incorrect Addresses",
        "problem": "If the \u201cvirtualize APIC accesses\u201d VM-execution control is 1, a 256-bit VGATHERQPS with an element that maps to the APIC-access page may use incorrect addresses to load other elements.",
        "implication": "Loading from an incorrect address can result in unexpected behavior with respect to data, faults or VM exits. This erratum will occur only if a guest operating system attempts to access the APIC using the VGATHERQPS instruction. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MTF VM Exit on XBEGIN Instruction May Save State Incorrectly",
        "problem": "Execution of an XBEGIN instruction while the \"monitor trap flag\" VM-execution control is 1 will be immediately followed by an MTF VM exit. If advanced debugging of RTM transactional regions has been enabled, the VM exit will erroneously save the address of the XBEGIN instruction as the instruction pointer (instead of the fallback instruction address specified by the XBEGIN instruction). In addition, it will erroneously set bit 16 of the pending-debug-exceptions field in the VMCS indicating that a debug exception or a breakpoint exception occurred.",
        "implication": "Software using the monitor trap flag to debug or trace transactional regions may not operate properly. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Uncore Performance Monitoring Counters May be Disabled or Cleared After Package C7",
        "problem": "Upon exiting Package C7, the following Uncore performance monitoring MSRs may be cleared to zero: \u2022 MSR_UNC_PERF_GLOBAL_CTRL (391H) \u2022 MSR_UNC_PERF_GLOBAL_STATUS (392H) \u2022 MSR_UNC_PERF_FIXED_CTRL (394H) \u2022 MSR_UNC_PERF_FIXED_CTR (395H)",
        "implication": "Uncore performance monitoring counters may be disabled and some counter state may be cleared after Package C7.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS Record May Be Generated After Being Disabled",
        "problem": "A performance monitoring counter may generate a PEBS (Precise Event Based Sampling) record after disabling PEBS or the performance monitoring counter by clearing the corresponding enable bit in IA32_PEBS_ENABLE MSR (3F1H) or IA32_PERF_GLOBAL_CTRL MSR (38FH).",
        "implication": "A PEBS record generated after a VMX transition will store into memory according to the post-transition DS (Debug Store) configuration. These stores may be unexpected if PEBS is not enabled following the transition.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum. A software workaround is possible through disallowing PEBS during VMX non-root operation and disabling PEBS prior to VM entry.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Link Speed Negotiation May Fail After Link is Re-enabled",
        "problem": "If a PCIe link is established then disabled and the link partner's advertised speeds are changed while the link is disabled, the link may fail to correctly negotiate link speed when it is re-enabled.",
        "implication": "Due to this erratum, the PCIe link speed negotiation may fail after re-enabling a disabled port.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Data Breakpoint Coincident With a Machine Check Exception May be Lost",
        "problem": "If a data breakpoint occurs coincident with a machine check exception, then the data breakpoint may be lost.",
        "implication": "Due to this erratum, a valid data breakpoint may be lost.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Corrected Internal Parity Error May Result in a System Hang",
        "problem": "A corrected Internal Parity Error (IA32_MC0_STATUS.MCACOD=0005H and IA32_MC0_STATUS.MSCOD=000FH, MSR 401H bits [15:0] and bits [31:16] respectively) may cause a system hang.",
        "implication": "Due to this erratum, a corrected internal parity error may cause a system hang. Reset, SMI, or INIT will end the system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An APIC Timer Interrupt During Core C6 Entry May be Lost",
        "problem": "Due to this erratum, an APIC timer interrupt coincident with the core entering C6 state may be lost rather than held for servicing later.",
        "implication": "A lost APIC timer interrupt may lead to missed deadlines or a system hang.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Internal Power State Transitions May Cause the Graphics Device to Hang",
        "problem": "On certain processors, when the graphics device transitions among active power states in response to dynamic power demand, the graphics device may become unresponsive.",
        "implication": "When this erratum occurs, the graphics device may hang, resulting in a frozen or blank display. The graphics driver may be able to restart the graphics device.",
        "workaround": "It is possible for BIOS to contain processor configuration data and code changes as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS EventingIP Field May Be Incorrect Under Certain Conditions",
        "problem": "The EventingIP field in the PEBS (Processor Event-Based Sampling) record reports the address of the instruction that triggered the PEBS event. Under certain complex microarchitectural conditions, the EventingIP field may be incorrect.",
        "implication": "When this erratum occurs, performance monitoring software may not attribute the PEBS events to the correct instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "RF May be Incorrectly Set in The EFLAGS That is Saved on a Fault in PEBS or BTS",
        "problem": "After a fault due to a failed PEBS (Processor Event Based Sampling) or BTS (Branch Trace Store) address translation, the RF (resume flag) may be incorrectly set in the EFLAGS image that is saved.",
        "implication": "When this erratum occurs, a code breakpoint on the instruction following the return from handling the fault will not be detected. This erratum only happens when the user does not prevent faults on PEBS or BTS.",
        "workaround": "Software should always prevent faults on PEBS or BTS.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some Memory Performance Monitoring Events May Produce Incorrect Results When Filtering on Either OS or USR Modes",
        "problem": "The memory at-retirement performance monitoring events (listed below) may produce incorrect results when a performance counter is configured in OS-only or USR-only modes (bits 17 or 16 in IA32_PERFEVTSELx MSR). Counters with both OS and USR bits set are not affected by this erratum.",
        "implication": "The listed performance monitoring events may produce incorrect results including PEBS records generated at an incorrect point. The list of affected HSW memory at-retirement events is as follows: MEM_UOPS_RETIRED.STLB_MISS_LOADS event D0H, umask 11H MEM_UOPS_RETIRED.STLB_MISS_STORES event D0H, umask 12H MEM_UOPS_RETIRED.LOCK_LOADS event D0H, umask 21H MEM_UOPS_RETIRED.SPLIT_LOADS event D0H, umask 41H MEM_UOPS_RETIRED.SPLIT_STORES event D0H, umask 42H MEM_LOAD_UOPS_RETIRED.L2_HIT event D1H, umask 02H MEM_LOAD_UOPS_RETIRED.L3_HIT event D1H, umask 04H MEM_LOAD_UOPS_RETIRED.L1_MISS event D1H, umask 08H MEM_LOAD_UOPS_RETIRED.L2_MISS event D1H, umask 10H MEM_LOAD_UOPS_RETIRED.L3_MISS event D1H, umask 20H MEM_LOAD_UOPS_RETIRED.HIT_LFB event D1H, umask 40H MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS event D2H, umask 01H MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT event D2H, umask 02H MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM event D2H, umask 04H MEM_LOAD_L3_HIT_RETIRED.XSNP_NONE event D2H, umask 08H MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM event D3H, umask 01H",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An x87 Store Instruction Which Pends #PE While EPT is Enabled May Lead to an Unexpected Machine Check and/or Incorrect x87 State Information",
        "problem": "The execution of an x87 store instruction which causes a #PE (Precision Exception) to be pended and also causes a VM-exit due to an EPT violation or misconfiguration may lead the VMM logging a machine check exception with a cache hierarchy error (IA32_MCi_STATUS.MCACOD = 0150H and IA32_MCi_STATUS.MSCOD = 000FH). Additionally, FSW.PE and FSW.ES (bits 5 and 7 of the FPU Status Word) may be incorrectly set to 1, and the x87 Last Instruction Opcode (FOP) may be incorrect.",
        "implication": "When this erratum occurs, the VMM may receive an expected machine check exception and software attempting to handle the #PE may not behave as expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Load Latency Performance Monitoring Facility May Stop Counting",
        "problem": "The performance monitoring events MEM_TRANS_RETIRED.LOAD_LATENCY_* (Event CDH; UMask 01H; any latency) count load instructions whose latency exceed a predefined threshold, where the loads are randomly selected using the Load Latency facility (PEBS extension). However due to this erratum, load latency facility may stop counting load instructions when Intel\u00ae HyperThreading Technology is enabled.",
        "implication": "Counters programmed with the affected events stop incrementing and do not generate PEBS records.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing MSR_LASTBRANCH_x_FROM_IP May #GP When Intel\u00ae TSX is Not Supported",
        "problem": "Due to this erratum, on processors that do not support Intel TSX (Intel\u00ae Transactional Synchronization Extensions) (CPUID.07H.EBX bits 4 and 11 are both zero), writes to MSR_LASTBRANCH_x_FROM_IP (MSR 680H to 68FH)may #GP unless bits [62:61] are equal to bit [47].",
        "implication": "The value read from MSR_LASTBRANCH_x_FROM_IPis unaffected by this erratum; bits [62:61] contain IN_TSX and TSX_ABORT information respectively. Software restoring these MSRs from saved values are subject to this erratum.",
        "workaround": "Before writing MSR_LASTBRANCH_x_FROM_IP , ensure the value being written has bit [47] replicated in bits [62:61]. This is most easily accomplished by sign extending from bit [47] to bits [62:48].",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "APIC Timer Interrupt May Not be Generated at The Correct Time In TSC-Deadline Mode",
        "problem": "After writing to the IA32_TSC_ADJUST MSR (3BH), any subsequent write to the IA32_TSC_DEADLINE MSR (6E0H) may incorrectly process the desired deadline. When this erratum occurs, the resulting timer interrupt may be generated at the incorrect time.",
        "implication": "When the local APIC (Advanced Programmable Interrupt Controller) timer is configured for TSC-Deadline mode, a timer interrupt may be generated much earlier than expected or much later than expected. Intel has not observed this erratum with most commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang Under Complex Conditions",
        "problem": "Under complex conditions, insufficient access control in graphics subsystem may lead to a system hang or crash upon a register read.",
        "implication": "When this erratum occurs a system hang or crash may occur.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Instruction Fetch May Cause Machine Check if Page Size Was Changed Without Invalidation",
        "problem": "This erratum may cause a machine-check error (IA32_MCi_STATUS.MCACOD=005H with IA32_MCi_STATUS.MSCOD=00FH or IA32_MCi_STATUS.MCACOD=0150H with IA32_MCi_STATUS.MSCOD=00FH) on the fetch of an instruction. It applies only if (1) instruction bytes are fetched from a linear address translated using a 4-Kbyte page and cached in the processor; (2) the paging structures are later modified so that these bytes are translated using a large page (2-Mbyte, 4-Mbyte or 1-GByte) with a different physical address (PA), memory type (PWT, PCD and PAT bits), or User/Supervisor (U/S) bit; and (3) the same instruction is fetched after the paging structure modification but before software invalidates any TLB entries for the linear region.",
        "implication": "Due to this erratum an unexpected machine check with error code 0150H with MSCOD 00FH may occur, possibly resulting in a shutdown. This erratum could also lead to unexpected correctable machine check (IA32_MCi_STATUS.UC=0) with error code 005H with MSCOD 00FH.",
        "workaround": "Software should not write to a paging-structure entry in a way that would change the page size and either the physical address, memory type or User/Supervisor bit. It can instead use one of the following algorithms: first clear the P flag in the relevant paging- structure entry (e.g., PDE); then invalidate any translations for the affected linear addresses; and then modify the relevant paging-structure entry to set the P flag and establish the new page size. An alternative algorithm: first change the physical page attributes (combination of physical address, memory type and User/Supervisor bit) in all 4K pages in the affected linear addresses; then invalidate any translations for the affected linear addresses; and then modify the relevant paging-structure entry to establish the new page size.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring General Counter 2 May Have Invalid Value Written When TSX Is Enabled",
        "problem": "When Transactional Synchronization Extensions (TSX) is enabled, and there are aborts (HLE or RTM) overlapping with access or manipulation of the IA32_PMC2 general- purpose performance counter (Offset: C3h) it may return invalid value.",
        "implication": "Software may read invalid value from IA32_PMC2.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PMU MSR_UNC_PERF_FIXED_CTR is Cleared After Pkg C7 or Deeper",
        "problem": "The Performance Monitoring Unit Uncore Performance Fixed Counter (MSR_UNC_PERF_FIXED_CTR (MSR 395h)) is cleared after pkg C7 or deeper.",
        "implication": "Due to this erratum, once the system enters pkg C7 or deeper the uncore fixed counter does not reflect the actual count.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Shut Down During Boundary Scan Testing",
        "problem": "If the HIGHZ TAP command is run before initializing the Boundary Scan chain, the VR_EN pin may be tristated. The VR_EN pin may also be tristated by the EXTEST TAP command. The VR_EN signal controls the external voltage regulator; tristating VR_EN may disable the voltage regulator.",
        "implication": "Due to this erratum, the processor may shut down.",
        "workaround": "Initialize the Boundary Scan chain by running the PRELOAD TAP command before running HIGHZ TAP command or EXTEST TAP command.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang Upon Entrance to Package C6 or C7",
        "problem": "If the processor exits a Package C8 or deeper state without waking either the IA Cores or integrated graphics, a subsequent Package C6 or Package C7 entrance may hang.",
        "implication": "Due to this erratum, when the processor attempts to enter Package C6 or Package C7 after exiting Package C8 or deeper states, it may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Power and Performance Regulation May Vary When Using RAPL",
        "problem": "The processor power control algorithms using RAPL (Running Average Power Limits) may observe excessive power and performance ringing effects when a low power limit is used with time constant of greater than 6 seconds.",
        "implication": "IA Core and integrated graphics frequencies and power consumption will have unexpected periodic fluctuations that do not settle.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "TM1 Throttling Via IA32_CLOCK_MODULATION MSR May Hang",
        "problem": "When TM1 throttling via the IA32_CLOCK_MODULATION MSR (19AH) with On-Demand Clock Modulation Enable bit 4 set and when Extended On-Demand Clock Modulation Duty Cycle bits [3:0] are programmed to a value of 1, a hang may occur.",
        "implication": "Due to the erratum, a logical processor may hang.",
        "workaround": "Extended On-Demand Clock Modulation Duty Cycle should be set to a value other than 1.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Exiting Deep Package C-State May Result in a System Hang",
        "problem": "Due to this erratum, the processor may skip the dwell interval after ramping the external VR (Voltage Regulator) upon Package C8 or Package C9 exit.",
        "implication": "VR behavior is undefined when the dwell interval is not met; issuing a VR ramp command during the dwell interval can result in unpredictable system behavior including a system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LPDDR3 ZQ Calibration Following Deep Package C-state Exit May Lead to Unpredictable System Behavior",
        "problem": "Due to this erratum, upon exit from Package C7 or deeper, the processor issues LPDDR3 ZQ calibration for dual die package or quad die package DRAMs in parallel instead of serially as required by the LPDDR3 spec for those devices.",
        "implication": "A deep Package C-state exit on systems using LPDDR3 dual die package or quad die package DRAM may lead to unpredictable system behavior. Systems using LPDDR3 single die package DRAM or DDR3L memory are not affected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "HD Audio Device Playback May Be Interrupted if The Processor Enters a Deep Package C-State",
        "problem": "When the Integrated Graphics Device (Bus 0; Device 2; Function 0) is in the D3 state, the processor may enter package C8 or deeper C-state, shutting down the Display Engine in the process. However, Display Engine operation may be required by the HD Audio device (Bus 0; Device 3; Function 0).",
        "implication": "When this erratum occurs the audio controller may reset causing audio playback to stop and be unable to resume.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Not be Able to Reduce The Graphics Engine\u2019s Effective Frequency",
        "problem": "The processor may be unable to reduce the effective frequency of the graphics engine in response to a power or thermal event.",
        "implication": "Due to this erratum, the processor may be unable to reduce power consumption to the power target specified by the platform embedded controller or software. This may result in reduced battery life and/or a platform temperature excursion.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Processors May Experience Transient LLC ECC Errors",
        "problem": "Due to certain internal conditions while running core, graphics and memory intensive operations, some processors may report LLC (last level cache) ECC errors, with IA32_MCI_STATUS[15:0] MCACOD reporting a Cache Hierarchy Error (000F 0001 RRRR TT10) and IA32_MCi_STATUS[31:16] MSCOD with value 0000 0000 0000 1000.",
        "implication": "When this erratum occurs, an uncorrectable LLC error will be logged and the system may hang or restart.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "CHAP Counter Values May be Cleared After Package C7 or Deeper C- State",
        "problem": "The CHAP (Chipset Hardware Architecture Performance) counters which do not have a \"Start\" OpCode present in the CMD register will not be preserved across a Package C7 or deeper C-State.",
        "implication": "CHAP Counter data is not saved/restored after Package C7 or deeper C-state causing counts to be lost; actions based on those counts may not occur as expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System Hang May Occur During Exit From Package C7 Due to VccST sensitivity",
        "problem": "Due to this erratum, a VccST sensitivity may cause the processor to hang while exiting from package C7 state.",
        "implication": "Due to this erratum, a system hang may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Timed MWAIT May Use Deadline of a Previous Execution",
        "problem": "A timed MWAIT instruction specifies a TSC deadline for execution resumption. If a wake event causes execution to resume before the deadline is reached, a subsequent timed MWAIT instruction may incorrectly use the deadline of the previous timed MWAIT when that previous deadline is earlier than the new one.",
        "implication": "A timed MWAIT may end earlier than expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Turbo Boost Technology May be Incorrectly Reported as Supported",
        "problem": "The 5th Generation Intel Core\u2122 i3 U-series, and select Mobile Intel Pentium and Intel Celeron processors may incorrectly report support for Intel Turbo Boost Technology via CPUID.06H.EAX bit 1.",
        "implication": "The CPUID instruction may report Turbo Boost Technology as supported even though the processor does not permit operation above the Maximum Non-Turbo Frequency.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Back to Back Updates of the VT-d Root Table Pointer May Lead to an Unexpected DMA Remapping Fault",
        "problem": "A VT-d (Intel\u00ae Virtualization Technology for Directed I/O) Root Table Pointer update that completes followed by a second Root Table Pointer update that also completes, without performing a global invalidation of either the context-cache or the IOTLB between the two updates, may lead to an unexpected DMA remapping fault.",
        "implication": "Back to back Root Table Pointer updates may cause an unexpected DMA remapping fault. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software must not perform a second Root Table Pointer update before doing a global invalidation of either the context-cache or the IOTLB.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Peer IO Device Writes to the GMADR May Lead to a System Hang",
        "problem": "The system may hang when a peer IO device uses the peer aperture to directly write into the GMADR (Graphics Memory Address range).",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT Packet Generation May Stop Sooner Than Expected",
        "problem": "Setting the STOP bit(bit 4) in a Table of Physical Addresses entry directs the processor to stop Intel PT (Processor Trace) packet generation when the associated output region is filled. The processor indicates this has occurred by setting the Stopped bit (bit 5) of IA32_RTIT_STATUS MSR (571H). Due to this erratum, packet generation may stop earlier than expected.",
        "implication": "When this erratum occurs, the OutputOffset field (bits [62:32]) of the IA32_RTIT_OUTPUT_MASK_PTRS MSR (561H) holds a value that is less than the size of the output region which triggered the STOP condition; Intel PT analysis software should not attempt to decode packet data bytes beyond the OutputOffset.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS Eventing IP Field May Be Incorrect After Not-Taken Branch",
        "problem": "When a PEBS (Precise-Event-Based-Sampling) record is logged immediately after a not-taken conditional branch (Jcc instruction), the Eventing IP field should contain the address of the first byte of the Jcc instruction. Due to this erratum, it may instead contain the address of the instruction preceding the Jcc instruction.",
        "implication": "Performance monitoring software using PEBS may incorrectly attribute PEBS events that occur on a Jcc to the preceding instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Reading the Memory Destination of an Instruction that Begins an HLE Transaction May Return the Original Value",
        "problem": "An HLE (Hardware Lock Elision) transactional region begins with an instruction with the XACQUIRE prefix. Due to this erratum, reads from within the transactional region of the memory destination of that instruction may return the value that was in memory before the transactional region began.",
        "implication": "Due to this erratum, unpredictable system behavior may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Event INSTR_RETIRED.ALL May Generate Redundant PEBS Records For an Overflow",
        "problem": "Due to this erratum, the performance monitoring feature PDIR (Precise Distribution of Instructions Retired) for INSTR_RETIRED.ALL (Event C0H; Umask 01H) will generate redundant PEBS (Precise Event Based Sample) records for a counter overflow. This can occur if the lower 6 bits of the performance monitoring counter are not initialized or reset to 0, in the PEBS counter reset field of the DS Buffer Management Area.",
        "implication": "The performance monitor feature PDIR, may generate redundant PEBS records for an overflow.",
        "workaround": "Initialize or reset the counters such that lower 6 bits are 0.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The System May Hang on First Package C6 or Deeper C-State",
        "problem": "Under certain conditions following a cold boot, exiting the first package C6 or deeper C- state may hang the system.",
        "implication": "Due to this erratum, the system may hang exiting a package C6 or deeper C-State.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Using the FIVR Spread Spectrum Control Mailbox May Not Produce the Requested Range",
        "problem": "Values programmed into the FIVR SSC (Fully Integrated Voltage Regulator Spread Spectrum Control) Mailbox may not result in the expected spread spectrum range.",
        "implication": "The actual FIVR spread spectrum range may not be the same as the programmed values affecting the usefulness of FIVR SSC Mailbox as a means to reduce EMI (Electromagnetic Interference).",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Processor Trace (Intel\u00ae PT) MODE.Exec, PIP, and CBR Packets Are Not Generated as Expected",
        "problem": "The Intel\u00ae PT MODE.Exec (MODE packet \u2013 Execution mode leaf), PIP (Paging Information Packet), and CBR (Core: Bus Ratio) packets are generated at the following PSB+ (Packet Stream Boundary) event rather than at the time of the originating event as expected.",
        "implication": "The decoder may not be able to properly disassemble portions of the binary or interpret portions of the trace because many packets may be generated between the MODE.Exec, PIP, and CBR events and the following PSB+ event.",
        "workaround": "The processor inserts these packets as status packets in the PSB+ block. The decoder may have to skip forward to the next PSB+ block in the trace to obtain the proper updated information to continue decoding.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "General-Purpose Performance Counters May Be Inaccurate with any Thread",
        "problem": "The IA32_PMCx MSR (C1H - C8H) general-purpose performance counters may report inaccurate counts when the associated event selection IA32_PERFEVTSELx MSR\u2019s (186H - 18DH) AnyThread field (bit 21) is set and either the OS field (bit 17) or USR field (bit 16) is set (but not both set).",
        "implication": "Due to this erratum, IA32_PMCx counters may be inaccurate.",
        "workaround": "None identified",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Incorrect LBR or Intel\u00ae Processor Trace Packet May Be Recorded Following a Transactional Abort",
        "problem": "Use of Intel\u00ae Transactional Synchronization Extensions (Intel\u00ae TSX) may result in a transactional abort. If an abort occurs immediately following a branch instruction, an incorrect branch target may be logged in an LBR (Last Branch Record) or in an Intel\u00ae Processor Trace (Intel\u00ae PT) packet before the LBR or Intel PT packet produced by the abort.",
        "implication": "The LBR or Intel PT packet immediately preceding a transactional abort may indicate an unexpected branch target.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Executing an RSM Instruction with Intel\u00ae Processor Trace Enabled Will Signal a #GP",
        "problem": "Upon delivery of a System Management Interrupt (SMI), the processor saves and then clears TraceEn in the IA32_RTIT_CTL MSR (570H), thus disabling Intel\u00ae Processor Trace (Intel\u00ae PT). If the SMI handler enables Intel PT and it remains enabled when an RSM instruction is executed, a shutdown event should occur. Due to this erratum, the processor does not shut down but instead generates a #GP (general-protection exception).",
        "implication": "When this erratum occurs, a #GP will be signaled.",
        "workaround": "If software enables Intel\u00ae PT in system-management mode, it should disable Intel\u00ae PT before executing RSM.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Processor Trace PIP May Be Unexpectedly Generated",
        "problem": "When Intel\u00ae Processor Trace (Intel\u00ae PT) is enabled, PSB+ (Packet Stream Boundary) packets may include a PIP (Paging Information Packet) even though the OS field (bit 2) of IA32_RTIT_CTL MSR (570H) is 0.",
        "implication": "When this erratum occurs, user-mode tracing (indicated by IA32_RTIT_CTL.OS = 0) may include CR3 address information. This may be an undesirable leakage of kernel information.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A #VE May Not Invalidate Cached Translation Information",
        "problem": "An EPT (Extended Page Table) violation that causes a #VE (virtualization exception) may not invalidate the guest-physical mappings that were used to translate the guest- physical address that caused the EPT violation.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some Performance Monitor Events May Overcount During TLB Misses",
        "problem": "The following Performance Monitor Events may significantly overcount when multiple TLB misses happen nearly concurrently: 1.EMON_EPT_INTERNAL (sub events 0 through 4) 2.EMON_ITLB_MISSES (sub events 0 through 4) 3.EMON_DTLB_LOAD_MISSES (sub events 0 through 4) 4.EMON_DTLB_PREFETCH_LOAD_MISSES (sub events 0 through 4) 5.EMON_DTLB_STORE_MISSES (sub events 0 through 4) 6.EMON_PDE_CACHE_MISS (sub events 0 through 3) 7.EMON_PAGE_WALKS (sub events 0 through 5) 8.EMON_PAGE_WALKER_LOADS (sub events 0 through 7)",
        "implication": "When this erratum occurs, counts accumulated for the listed events may significantly exceed the correct counts.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Processor Trace PSB+ Packets May Contain Unexpected Packets",
        "problem": "Some Intel Processor Trace packets should be issued only between TIP.PGE (Target IP Packet.Packet Generation Enable) and TIP.PGD (Target IP Packet.Packet Generation Disable) packets. Due to this erratum, when a TIP.PGE packet is generated it may be preceded by a PSB+ (Packet Stream Boundary) that incorrectly includes FUP (Flow Update Packet) and MODE.Exec packets.",
        "implication": "Due to this erratum, FUP and MODE.Exec may be generated unexpectedly.",
        "workaround": "Decoders should ignore FUP and MODE.Exec packets that are not between TIP.PGE and TIP.PGD packets.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing Non-Zero Value to IA32_RTIT_CR3_MATCH [63:48] Will Cause #GP",
        "problem": "Bits [63:48] of the IA32_RTIT_CR3_MATCH MSR (0572H) are incorrectly treated as reserved and therefore writing non-zero values to them will cause a #GP",
        "implication": "Due to this erratum, a #GP fault will occur if a non-zero value is written to IA32_RTIT_CR3_MATCH[63:48].",
        "workaround": "Software should avoid writing non-zero values to bits [63:48] of the IA32_RTIT_CR3_MATCH MSR.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Core C6 May Cause Interrupts to be Serviced Out of Order",
        "problem": "If the APIC ISR (In-Service Register) indicates in-progress interrupt(s) at Core C6 entry, a lower priority interrupt pending in the IRR (Interrupt Request Register) may be executed after Core C6 exit, delaying completion of the higher priority interrupt\u2019s service routine.",
        "implication": "An interrupt may be processed out of its intended priority order immediately after Core C6 exit.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "LPDDR3 Memory Training May Cause Platform Boot Failure",
        "problem": "Due to this erratum, LPDDR3 memory sub-systems may not successfully complete training.",
        "implication": "When this erratum occurs, the platform may fail to boot successfully",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Aggressive Ramp Down of Voltage May Result in Unpredictable Behavior",
        "problem": "Aggressive ramp down of Vcc voltage may result in insufficient voltage to meet power demand.",
        "implication": "Due to this erratum, unpredictable system behavior or hangs may be observed.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "DR6 Register May Contain an Incorrect Value When a MOV to SS or POP SS Instruction is Followed by an XBEGIN Instruction",
        "problem": "If XBEGIN is executed immediately after an execution of MOV to SS or POP SS, a transactional abort occurs and the logical processor restarts execution from the fallback instruction address. If execution of the instruction at that address causes a debug exception, bits [3:0] of the DR6 register may contain an incorrect value.",
        "implication": "When the instruction at the fallback instruction address causes a debug exception, DR6 may report a breakpoint that was not triggered by that instruction, or it may fail to report a breakpoint that was triggered by the instruction.",
        "workaround": "Avoid following a MOV SS or POP SS instruction immediately with an XBEGIN instruction.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Corrected Error Count Overflow Bit in IA32_ MC0_STATUS is Not Updated After a UC Error is Logged",
        "problem": "When a UC (uncorrected) error is logged in the IA32_MC0_STATUS MSR (401H), corrected errors will continue to update the lower 14 bits (bits 51:38) of the Corrected Error Count. Due to this erratum, the sticky count overflow bit (bit 52) of the Corrected Error Count will not get updated after a UC error is logged.",
        "implication": "The Corrected Error Count Overflow indication will be lost if the overflow occurs after an uncorrectable error has been logged.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Operation at Turbo Frequencies Above 3.2 GHz May Cause the Processor to Hang",
        "problem": "The processor may not run reliably when operating at turbo frequencies above 3.2 GHz.",
        "implication": "Due to this erratum, the processor may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "DDR-1600 With a Reference Clock of 100 MHz May Cause S3 Entry Failure",
        "problem": "Due to this erratum, Platform State S3 entry with a DDR-1600 memory subsystem may cause the DDR reference clock, when configured at 100 MHz, to briefly switch to 133 MHz resulting in unpredictable system behavior.",
        "implication": "When this erratum occurs, the system may experience unpredictable system behavior.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Instruction Fetch Power Saving Feature May Cause Unexpected Instruction Execution",
        "problem": "Under a complex set of micro-architectural conditions, an instruction fetch dynamic power savings feature may cause the processor to execute unexpected instructions.",
        "implication": "When this erratum occurs, instances of unexpected #GP (General Protection fault) or #PF (Page fault) have been observed. Unexpected faults may lead to an application or operating system crash.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "IA Core Ratio Change Coincident With Outstanding Read to the DE May Cause a System Hang",
        "problem": "An outstanding read from an IA core to the DE (Display Engine) that is coincident with an IA core ratio change may result in a system hang.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PL3 Power Limit Control Mechanism May Not Release Frequency Restrictions",
        "problem": "The PL3 mechanism imposes peak frequency constraints on all domains (Core, Graphics, and Ring) when a current spike that might cause accelerated battery aging is detected. Due to this erratum, these constraints may not be released when the current spike has ended.",
        "implication": "The processor clock frequencies may be unnecessarily limited.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "I/O Subsystem Clock Gating May Cause a System Hang",
        "problem": "Certain complex internal conditions and timing relationships during clock gating of the I/O subsystem may cause a system hang and may lead to a timeout machine check with an IA32_MCi_STATUS.MCACOD of 0400H.",
        "implication": "Due to this erratum, the processor may hang and may report a machine check.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PAGE_WALKER_LOADS Performance Monitoring Event May Count Incorrectly",
        "problem": "Due to this erratum, the PAGE_WALKER_LOADS (Event BCH) performance monitoring event may overcount or may undercount",
        "implication": "These performance monitoring events may not produce reliable results",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Local Memory Read/Load Retired PerfMon Events May Undercount",
        "problem": "Due to this erratum, the Local Memory Read/Load Retired PerfMon events listed below may undercount. \u2022MEM_LOAD_UOPS_RETIRED.L3_HIT (Event D1H Umask 04H) \u2022MEM_LOAD_UOPS_RETIRED.L3_MISS (Event D1H Umask 20H) \u2022MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS (Event D2H Umask 01H) \u2022MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT (Event D2H Umask 02H) \u2022MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM (Event D2H Umask 04H) \u2022MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE (Event D2H Umask 08H) \u2022MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM (Event D3H Umask 01H) \u2022MEM_TRANS_RETIRED.LOAD_LATENCY (Event CDH Umask 01H)",
        "implication": "The affected events may undercount, resulting in inaccurate memory profiles. Intel has observed under counts by as much as 20%.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The System May Hang When Executing a Complex Sequence of Locked Instructions",
        "problem": "Under certain internal timing conditions while executing a complex sequence of locked instructions, the system may hang",
        "implication": "The system may hang while executing a complex sequence of locked instructions and cause an Internal Timeout Error Machine Check (IA32_MCi_STATUS.MCACOD=0400H).",
        "workaround": "It is possible for the BIOS to contain a workaround for this problem.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Setting TraceEn While Clearing BranchEn in IA32_RTIT_CTL Causes a #GP",
        "problem": "A WRMSR to IA32_RTIT_CTL (MSR 0570H) that sets TraceEn (bit 0) and clears BranchEn (bit 13) will cause a #GP (General Protection exception)",
        "implication": "Intel\u00ae Processor Trace cannot be enabled without enabling control flow trace packets.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Graphics IOMMU Unit May Not Mask DMA Remapping Faults",
        "problem": "Intel\u00ae Virtualization Technology for Directed I/O specification specifies setting the FPD (Fault Processing Disable) field in the context (or extended-context) entry of IOMMU to mask recording of qualified DMA remapping faults for DMA requests processed through that context entry. Due to this erratum, the IOMMU unit for Processor Graphics device may record DMA remapping faults from Processor Graphics device (Bus: 0; Device: 2; Function: 0) even when the FPD field is set to 1.",
        "implication": "Software may continue to observe DMA remapping faults recorded in the IOMMU Fault Recording Register even after setting the FPD field.",
        "workaround": "None identified. Software may mask the fault reporting event by setting the IM (Interrupt Mask) field in the IOMMU Fault Event Control register (Offset 038H in GFXVTBAR).",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Graphics VTd Hardware May Cache Invalid Entries",
        "problem": "The processor\u2019s graphics IOMMU (I/O Memory Management Unit) may cache invalid VTd context entries. This violates the VTd specification for HW Caching Mode where hardware implementations of this architecture must not cache invalid entries.",
        "implication": "Due to this erratum, unpredictable system behavior and/or a system hang may occur.",
        "workaround": "Software should flush the Gfx VTd context cache after any update of cocontext table entries.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Core\u2122 i5-5350H Processor Incorrectly Reports 8 Logical Processors",
        "problem": "When a CPUID instruction is executed with EAX=0BH and ECX=02H, the level type will be reported in ECX[15:8] as 2 for the core level and the number of logical processors for this level will be reported in EBX[15:0]. Due to this erratum, the number of logical processors may be incorrectly reported as 8 for the core level; the value should be 4. Other values returned by CPUID with EAX=0BH are not affected.",
        "implication": "Due to this erratum, an incorrect number of logical processors for the core level may be reported.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Package C3 Events Enabling EDRAM and Package C-States May Cause Display Artifacts",
        "problem": "While EDRAM (Embedded DRAM) is enabled, display artifacts may be observed during Package C3 entry and exit.",
        "implication": "Due to this erratum, display artifacts may be observed, particularly with multiple displays and/or at higher resolutions.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Operation at P1 Frequency May Lead to Time-out Machine Check",
        "problem": "Operating the processor at or above P1 (maximum non-turbo) core frequency may result in an Internal Timer Error Machine Check (IA32_MCi_STATUS.MCACOD == 0400H).",
        "implication": "Due to this erratum, system operation at or above P1 core frequency may be unreliable.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Reads or Writes to LBRs with Intel\u00ae PT Enabled Will Result in a #GP",
        "problem": "On processors, where the use of Intel PT (Intel\u00ae Processor Trace) and LBRs (Last Branch Records) are mutually exclusive, reads of the LBR MSRs should return 0s and writes to them should be ignored. Due to this erratum, reads and writes to the LBR MSRs while IA32_RTIT_CTL MSR (570H) TraceEn bit 0 is 1 will result in a #GP.",
        "implication": "When this erratum occurs, a #GP will occur. LBRs are not available when Intel PT is enabled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Frequency Difference Between IA Core(s) and Ring Domains May Cause Unpredictable System Behavior",
        "problem": "Operating one or more of the IA (Intel\u00ae Architecture) cores at a frequency significantly higher than the ring operating frequency may cause unpredictable system behavior. Intel has observed this erratum to occur when the software explicitly requests the ring and IA core(s) to operate at different frequencies or when IA core(s) are transitioning in and out of C-states with the IA core(s) operating at frequencies much higher than the ring frequency. Exposure to this erratum may be increased when the IA cores run at or close to P0 P-state frequency.",
        "implication": "Due to this erratum, system may hang or experience unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Software Using Intel\u00ae TSX May Behave Unpredictably",
        "problem": "Under a complex set of internal timing conditions and system events, software using the Intel TSX (Transactional Synchronization Extensions) instructions may behave unpredictably.",
        "implication": "This erratum may result in unpredictable behavior of the software using TSX.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Back-to-Back Page Walks Due to Instruction Fetches May Cause a System Hang",
        "problem": "Multiple code fetches in quick succession that generate page walks may result in a system hang causing an Internal Timer Error (an MCACOD value of 0400H) logged into IA32_MCi_STATUS bits [15:0].",
        "implication": "Due to this erratum, the processor may hang and report a machine check.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Counters May Produce Incorrect Results for BR_INST_RETIRED Event on Logical Processor",
        "problem": "Performance monitoring event BR_INST_RETIRED (C4H) counts retired branch instructions. Due to this erratum, when operating on logical processor 1 of any core, BR_INST_RETIRED.FAR_BRANCH (Event C4H; Umask 40H) and BR_INST_RETIRED. ALL_BRANCHES (Event C4H; Umask 04H) may count incorrectly. Logical processor 0 of all cores and cores with SMT disabled are not affected by this erratum.",
        "implication": "Due to this erratum, certain performance monitoring event may produce unreliable results when SMT is enabled.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Internal Parity Errors May Incorrectly Report Overflow in the IA32_MC0_STATUS MSR",
        "problem": "Due to this erratum, an uncorrectable internal parity error with an IA32_MC0_STATUS.MCACOD (bits [15:0]) value of 0005H may incorrectly set the IA32_MC0_STATUS.OVER flag (bit 62) indicating an overflow when a single error has been observed",
        "implication": "IA32_MC0_STATUS.OVER may not accurately indicate multiple occurrences of errors. There is no other impact to normal processor functionality.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang When Exiting Package C6",
        "problem": "Under certain complex conditions, the processor may hang during a Package C6 exit.",
        "implication": "Due to this erratum, a system hang may occur. A reset is required to end the hang condition. The processor does not log a machine check.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Attempting Concurrent Enabling of Intel\u00ae PT With LBR, BTS, or BTM Results in a #GP",
        "problem": "If LBR (Last Branch Records), BTS (Branch Trace Store), or BTM (Branch Trace Messages) are enabled in the IA32_DEBUGCTL MSR (1D9H), an attempt to enable Intel PT (Intel\u00ae Processor Trace) in IA32_RTIT_CTL MSR (570H) results in a #GP (general protection exception). (Note that the BTM enable bit in IA32_DEBUGCTL MSR is named \u201cTR\u201d.)\u00a0\u00a0Correspondingly, if Intel PT was previously enabled when an attempt is made to enable LBR, BTS, or BTM, a #GP will occur.",
        "implication": "An unexpected #GP may occur when concurrently enabling any one of LBR, BTS, or BTM with Intel PT.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "An Intel\u00ae Hyper-Threading Technology Enabled Processor May Exhibit Internal Parity Errors or Unpredictable System Behavior",
        "problem": "Under a complex series of microarchitectural events while running Hyper-Threading Technology, a correctable internal parity error or unpredictable system behavior may occur.",
        "implication": "A correctable error (IA32_MC0_STATUS.MCACOD=0005H and IA32_MC0_STATUS.MSCOD=0001H) may be logged. The unpredictable system behavior frequently leads to faults (e.g. #UD, #PF, #GP).",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some DRAM And L3 Cache Performance Monitoring Events May Undercount",
        "problem": "Due to this erratum, the supplier may be misattributed to unknown, and the following events may undercount: MEM_LOAD_UOPS_RETIRED.L3_HIT (Event D1H Umask 04H) MEM_LOAD_UOPS_RETIRED.L3_MISS (Event D1H Umask 20H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS (Event D2H Umask 01H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT (Event D2H Umask 02H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM (Event D2H Umask 04H) MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE (Event D2H Umask 08H) MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM (Event D3H Umask 01H) MEM_TRANS_RETIRED.LOAD_LATENCY (Event CDH Umask 01H)",
        "implication": "The affected events may undercount, resulting in inaccurate memory profiles. For the affected events that are precise, PEBS records may be generated at incorrect points. Intel has observed incorrect counts by as much as 20%.",
        "workaround": "None Identified",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "General-Purpose Performance Monitoring Counters 4-7 Do Not Count With USR Mode Only Filtering",
        "problem": "The IA32_PMC4-7 MSR (C5H-C8H) general-purpose performance monitoring counters will not count when the associated CPL filter selection in IA32_PERFEVTSELx MSR's (18AH-18DH) USR field (bit 16) is set while OS field (bit 17) is not set.",
        "implication": "Software depending upon IA32_PMC4-7 to count only USR events will not operate as expected. Counting OS only events or OS and USR events together is unaffected by this erratum.",
        "workaround": "None identified",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing MSR_LASTBRANCH_x_FROM_IP and MSR_LER_FROM_LIP May #GP When Intel\u00ae TSX is Not Supported",
        "problem": "Due to this erratum, on processors that do not support Intel TSX (Intel\u00ae Transactional Synchronization Extensions) (CPUID.07H.EBX bits 4 and 11 are both zero), writes to MSR_LASTBRANCH_x_FROM_IP (MSR 680H to 68FH) and MSR_LER_FROM_LIP (MSR 1DDH) may #GP unless bits[62:61] are equal to bit[47].",
        "implication": "The value read from MSR_LASTBRANCH_x_FROM_IP and MSR_LER_FROM_LIP is unaffected by this erratum; bits [62:61] contain IN_TSX and TSX_ABORT information respectively. Software restoring these MSRs from saved values are subject to this erratum.",
        "workaround": "Before writing MSR_LASTBRANCH_x_FROM_IP and MSR_LER_FROM_LIP, ensure the value being written has bit[47] replicated in bits[62:61]. This is most easily accomplished by sign extending from bit[47] to bits[62:48].",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Precise Performance Monitoring May Generate Redundant PEBS Records",
        "problem": "Processor Event Based Sampling (PEBS) may generate redundant records for a counter overflow when used to profile cycles. This may occur when a precise performance monitoring event is configured on a general counter while setting the Invert and Counter Mask fields in IA32_PERFEVTSELx MSRs (186H - 18DH), and the counter is reloaded with a value smaller than 1000 (through the PEBS-counter-reset field of the DS Buffer Management Area).",
        "implication": "PEBS may generate multiple redundant records, when used to profile cycles in certain conditions.",
        "workaround": "It is recommended for software to forbid the use of the Invert bit in IA32_PERFEVTSELx MSRs or restrict PEBS-counter-reset value to a value of at least 1000.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A Pending Fixed Interrupt May Be Dispatched Before an Interrupt of The Same Priority Completes",
        "problem": "Resuming from C6 Sleep-State, with Fixed Interrupts of the same priority queued (in the corresponding bits of the IRR and ISR APIC registers), the processor may dispatch the second interrupt (from the IRR bit) before the first interrupt has completed and written to the EOI register, causing the first interrupt to never complete.",
        "implication": "Due to this erratum, Software may behave unexpectedly when an earlier call to an Interrupt Handler routine is overridden with another call (to the same Interrupt Handler) instead of completing its execution.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "X87 State May Be Incorrectly Restored After An XRSTOR/S Instruction",
        "problem": "Under complex micro-architectural conditions, an XRSTOR/XRSTORS instruction may write incorrect values to the XINUSE X87 state and the XMODIFIED X87 state.",
        "implication": "Due to this erratum, using XGETBV to read the X87 state in the XINUSE and XMODIFIED bitmap may lead to incorrect values. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should not use the init optimization or the modified optimization for X87 state in XSAVEOPT.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Package C7 Entry May Cause Display Artifact",
        "problem": "Due to this erratum, Package C7 entry may exceed published latencies.",
        "implication": "When this erratum occurs, it is possible that isochronous requirements may not be met. Intel has not observed this erratum to affect isochronous elements other than display.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae TSX Instructions Not Available",
        "problem": "Intel TSX (Transactional Synchronization Extensions) instructions are not supported and not reported by CPUID.",
        "implication": "The Intel TSX feature is not available.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "SVM Doorbells Are Not Correctly Preserved Across Package C-States",
        "problem": "SVM (Shared Virtual Memory) doorbell registers are incorrectly preserved across package C-states (C7 and deeper).",
        "implication": "Due to this erratum, software that uses SVM may experience unreliable behavior from the graphics device.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Glitches on Internal Voltage Planes During Package C9/C10 Exit May Cause a System Hang",
        "problem": "Internally generated processor voltage planes may exhibit unexpected voltage glitches during a package C9/C10 exit.",
        "implication": "When this erratum occurs, the system may hang. Intel has not observed this erratum with any commercially available system.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Frequent Entries Into Package C8, C9, or C10 May Cause a Hang",
        "problem": "It is possible for the processor to signal a machine check exception when deep packages C-states, C8, C9, or C10, are entered too frequently, typically less than 200us apart. The processor will not be able to process the machine check and will hang.",
        "implication": "Due to this erratum, the processor may signal a machine check exception (IA32_MCi_STATUS.MCCOD = 0x0400) and the processor will hang.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The Display May Not Resume Correctly After Package C8-C10 Exit",
        "problem": "Display configuration is not properly restored after a package C8-C10 exit.",
        "implication": "The display engine may not function correctly after package C8-C10 exit leading to an incorrect display.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Incorrectly Enter Into Package-C States C8, C9, or C10",
        "problem": "The processor may not fully honor all LTR (Latency Tolerance Register) values when selecting the Package C-state level.",
        "implication": "Due to this erratum, the exit latency of an incorrect Package C-state may lead to media artifacts such as audio glitching. Intel has not observed this erratum with any commercially available software",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain LLC Frequency Changes May Result in Unpredictable System Behavior",
        "problem": "A large frequency or voltage change for the LLC (Last Level Cache) and associated logic can lead to unpredictable system behavior",
        "implication": "Due to this erratum, unpredictable system behavior may be observed.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "C8 or Deeper Sleep State Exit May Result in an Incorrect HDCP Key",
        "problem": "The HDCP (High-bandwidth Digital Content Protection) key may be incorrect after a package C8 or deeper sleep state exit.",
        "implication": "When this erratum occurs, DRM (Digital Rights Management) video playback may not behave as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "DDR1600 Clocking Marginality May Lead to Unpredictable System Behavior",
        "problem": "The memory controller\u2019s DDR clock, when operating at DDR1600 frequencies and at elevated temperatures, may not operate within tolerance and may lead to unpredictable system behavior.",
        "implication": "Due to this erratum, unpredictable system behavior may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Package C9/C10 Exit May Cause a System Hang",
        "problem": "Certain processors may not reliably exit Package C9/C10 states.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "It is possible for BIOS to contain processor configuration data and code changes as a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae Trusted Execution Technology Uses Incorrect TPM 2.0 NV Space Index Handles",
        "problem": "Intel\u00ae TXT (Trusted Execution Technology) uses TPM (Trusted Platform Module) 2.0 draft specification handles (indices) AUX 01800003, PS 01800001, and PO 01400003. Those handles conflicts with the released TCG (Trusted Computing Group) \u201cRegistry of reserved TPM 2.0 handles and localities\u201d, version 1.0, revision 1.",
        "implication": "TXT TPM 2.0 handles may conflict with platform manufacturer or owner usage of TPM NV space. Intel has not identified any functional impact due to this erratum.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Transitions Through Package C7 or Deeper May Result in a System Hang",
        "problem": "Under certain conditions, entry into a Package C7 or deeper C-State may result in a system hang on the subsequent C-State exit",
        "implication": "Due to this erratum, the processor may experience a system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The System May Hang When Exiting From Deep Package C-States",
        "problem": "When exiting from Package C7-C10, the system may hang.",
        "implication": "The system may hang when exiting from Package C-states",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang When Package C-states Are Enabled",
        "problem": "When Package C6 or deeper C-States are enabled, certain micro-architectural conditions during a C-State exit may cause the processor to hang.",
        "implication": "Due to this erratum, a system hang may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Graphics Configuration May Not be Correctly Restored After a Package C7 Exit",
        "problem": "The processor should ensure internal graphics configuration is restored during a Package C7 or deeper exit event. Due to this erratum, some internal graphics configurations may not be correctly restored.",
        "implication": "When this erratum occurs, a graphics driver restart may lead to system instability. Such a restart may occur when upgrading the graphics driver.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Some OFFCORE_RESPONSE Performance Monitoring Events Related to RFO Request Types May Count Incorrectly",
        "problem": "The performance monitoring events OFFCORE_RESPONSE (Events B7H and BBH) should count uncore responses matching the request-response configuration specified in MSR_OFFCORE_RSP_0 (1A6H) and MSR_OFFCORE_RSP_1 (1A7H) for core- originated requests. However, due to this erratum, response type NO_SUPP bit [17] may be reported instead of LOCAL bit [26] for request types DMND_RFO bit [1] and PF_RFO bit [5].",
        "implication": "The specified performance monitoring events may count incorrectly.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Counters May Undercount When Using CPL Filtering",
        "problem": "Performance Monitoring counters configured to count only OS or only USR events by setting exactly one of bits 16 or 17 in IA32_PERFEVTSELx MSRs (186H-18DH) may not count for a brief period during the transition to a new CPL.",
        "implication": "Due to this erratum, Performance Monitoring counters may report counts lower than expected.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Reads From MSR_LER_TO_LIP May Not Return a Canonical Address",
        "problem": "Due to this erratum, reads from MSR_LER_TO_LIP (MSR 1DEH) may return values for bits[63:61] that are not equal to bit[47].",
        "implication": "Reads from MSR_LER_TO_LIP may return a non-canonical address where bits[63:61] may be incorrect. Using this value as an address, including restoring the MSR value that was read, may cause a #GP.",
        "workaround": "Software should ensure the value read in MSR_LER_TO_LIP bit[47] is replicated in bits[63:61]. This is most easily accomplished by sign extending from bit[47] to bits[63:48].",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "In eMCA2 Mode, When The Retirement Watchdog Timeout Occurs CATERR# May be Asserted",
        "problem": "A Retirement Watchdog Timeout (MCACOD = 0x0400) in Enhanced MCA2 (eMCA2) mode will cause the CATERR# pin to be pulsed in addition to an MSMI# pin assertion. In addition, a Machine Check Abort (#MC) will be pended in the cores along with the MSMI.",
        "implication": "Due to this erratum, systems that expect to only see MSMI# will also see CATERR# pulse when a Retirement Watchdog Timeout occurs. The CATERR# pulse can be safely ignored.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "VCVTPS2PH To Memory May Update MXCSR in The Case of a Fault on The Store",
        "problem": "Execution of the VCVTPS2PH instruction with a memory destination may update the MXCSR exceptions flags (bits [5:0]) if the store to memory causes a fault (e.g., #PF) or VM exit. The value written to the MXCSR exceptions flags is what would have been written if there were no fault.",
        "implication": "Software may see exceptions flags set in MXCSR, although the instruction has not successfully completed due to a fault on the memory operation. Intel has not observed this erratum to affect any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Using Intel\u00ae TSX Instructions May Lead to Unpredictable System Behavior",
        "problem": "Under complex microarchitectural conditions, software using Intel\u00ae TSX (Transactional Synchronization Extensions) may result in unpredictable system behavior. Intel has only seen this under synthetic testing conditions. Intel is not aware of any commercially available software exhibiting this behavior.",
        "implication": "Due to this erratum, unpredictable system behavior may occur.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum. Please see the Intel\u00ae White Paper \u201cPerformance Monitoring Impact of TSX Memory Ordering Issue\u201d Document #604224 or contact your Intel\u00ae Representative for more information.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "The SMSW Instruction May Execute Within an Enclave",
        "problem": " The SMSW instruction is illegal within an SGX (Software Guard Extensions) enclave, and an attempt to execute it within an enclave should result in a #UD (invalid-opcode exception). Due to this erratum, the instruction executes normally within an enclave and does not cause a #UD.",
        "implication": "The SMSW instruction provides access to CR0 bits 15:0 and will provide that information inside an enclave. These bits include NE, ET, TS, EM, MP and PE.",
        "workaround": "None identified. If SMSW execution inside an enclave is unacceptable, system software should not enable SGX.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "PEBS Record After a WRMSR to IA32_BIOS_UPDT_TRIG May be Incorrect",
        "problem": " A PEBS record generated by a WRMSR to IA32_BIOS_UPDT_TRIG MSR (79H) may have an incorrect value in the Eventing EIP field if an instruction prefix was used on the WRMSR.",
        "implication": "The Eventing EIP field of the generated PEBS record may be incorrect. Intel has not observed this erratum with any commercially available software.",
        "workaround": "Instruction prefixes have no architecturally-defined function for the WRMSR instruction; instruction prefixes should not be used with the WRMSR instruction.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT TIP.PGD May Not Have Target IP Payload",
        "problem": " When Intel PT (Intel Processor Trace) is enabled and a direct unconditional branch clears IA32_RTIT_STATUS.FilterEn (MSR 571H, bit 0), due to this erratum, the resulting TIP.PGD (Target IP Packet, Packet Generation Disable) may not have an IP payload with the target IP.",
        "implication": "It may not be possible to tell which instruction in the flow caused the TIP.PGD using only the information in trace packets when this erratum occurs.",
        "workaround": "The Intel PT trace decoder can compare direct unconditional branch targets in the source with the FilterEn address range(s) to determine which branch cleared FilterEn.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "WRMSR May Not Clear The Sticky Count Overflow Bit in The IA32_MCi_STATUS MSRs\u2019 Corrected Error Count Field",
        "problem": " The sticky count overflow bit is the most significant bit (bit 52) of the Corrected Error Count Field (bits[52:38]) in IA32_MCi_STATUS MSRs. Once set, the sticky count overflow bit may not be cleared by a WRMSR instruction. When this occurs, that bit can only be cleared by power-on reset.",
        "implication": " Software that uses the Corrected Error Count field and expects to be able to clear the sticky count overflow bit may misinterpret the number of corrected errors when the sticky count overflow bit is set. This erratum does not affect threshold-based CMCI (Corrected Machine Check Error Interrupt) signaling.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Debug Exceptions May Be Lost or Misreported Following WRMSR to IA32_BIOS_UPDT_TRIG",
        "problem": " If the WRMSR instruction writes to the IA32_BIOS_UPDT_TRIG MSR (79H) immediately after an execution of MOV SS or POP SS that generated a debug exception, the processor may fail to deliver the debug exception or, if it does, the DR6 register contents may not correctly reflect the causes of the debug exception.",
        "implication": "Debugging software may fail to operate properly if a debug exception is lost or does not report complete information.",
        "workaround": "Software should avoid using WRMSR instruction immediately after executing MOV SS or POP SS",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Attempts to Retrain a PCIe* Link May be Ignored",
        "problem": " A PCIe link should retrain when Retrain Link (bit 5) in the Link Control register (Bus 0; Device 1; Functions 0, 1, 2; Offset 0xB0) is set. Due to this erratum, if the link is in the L1 state, it may ignore the retrain request.",
        "implication": "The PCIe link may not behave as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "VM Entry That Clears TraceEn May Generate a FUP",
        "problem": " If VM entry clears Intel\u00ae PT (Intel Processor Trace) IA32_RTIT_CTL.TraceEn (MSR 570H, bit 0) while PacketEn is 1 then a FUP (Flow Update Packet) will precede the TIP.PGD (Target IP Packet, Packet Generation Disable). VM entry can clear TraceEn if the VM-entry MSR-load area includes an entry for the IA32_RTIT_CTL MSR.",
        "implication": " When this erratum occurs, an unexpected FUP may be generated that creates the appearance of an asynchronous event taking place immediately before or during the VM entry.",
        "workaround": "The Intel PT trace decoder may opt to ignore any FUP whose IP matches that of a VM entry instruction.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "EDRAM Corrected Error Events May Not be Properly Logged After a Warm Reset",
        "problem": " After a warm reset, an EDRAM corrected error may not be logged correctly until the associated machine check register is initialized. This erratum may affect IA32_MC8_STATUS or IA32_MC10_STATUS.",
        "implication": "The EDRAM corrected error information may be lost when this erratum occurs.",
        "workaround": "Data from the affected machine check registers should be read and the registers initialized as soon as practical after a warm reset.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitor Event For Outstanding Offcore Requests May be Incorrect",
        "problem": " The performance monitor event OFFCORE_REQUESTS_OUTSTANDING (Event 60H, any Umask Value) should count the number of offcore outstanding transactions each cycle. Due to this erratum, the counts may be higher or lower than expected.",
        "implication": "The performance monitor event OFFCORE_REQUESTS_OUTSTANDING may reflect an incorrect count.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Instability May Occur When Using The PECI RdIAMSR Command",
        "problem": " Under certain circumstances, reading a machine check register using the PECI (Platform Environmental Control Interface) RdIAMSR command may result in a machine check, processor hang or shutdown.",
        "implication": "Machine check, hang or shutdown may be observed when using the PECI RdIAMSR command.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "ENCLU[EGETKEY] Ignores KEYREQUEST.MISCMASK",
        "problem": " The Intel\u00ae SGX (Software Guard Extensions) ENCLU[EGETKEY] instruction ignores the MISCMASK field in KEYREQUEST structure when computing a provisioning key, a provisioning seal key, or a seal key.",
        "implication": " ENCLU[EGETKEY] will return the same key in response to two requests that differ only in the value of KEYREQUEST.MISCMASK. Intel has not observed this erratum with any commercially available software.",
        "workaround": " When executing the ENCLU[EGETKEY] instruction, software should ensure the bits set in KEYREQUEST.MISCMASK are a subset of the bits set in the current SECS\u2019s MISCSELECT field.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "ENCLU[EREPORT] May Cause a #GP When TARGETINFO.MISCSELECT is Non- Zero",
        "problem": " The Intel\u00ae SGX (Software Guard extensions) ENCLU[EREPORT] instruction may cause a #GP (general protection fault) if any bit is set in TARGETINFO structure\u2019s MISCSELECT field.",
        "implication": "This erratum may cause unexpected general-protection exceptions inside enclaves.",
        "workaround": " When executing the ENCLU[EREPORT] instruction, software should ensure the bits set in TARGETINFO.MISCSELECT are a subset of the bits set in the current SECS\u2019s MISCSELECT field.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "A VMX Transition Attempting to Load a Non-Existent MSR May Result in a Shutdown",
        "problem": " A VMX transition may result in a shutdown (without generating a machine-check event) if a non-existent MSR is included in the associated MSR-load area. When such a shutdown occurs, a machine check error will be logged with IA32_MCi_STATUS.MCACOD (bits [15:0]) of 406H, but the processor does not issue the special shutdown cycle. A hardware reset must be used to restart the processor.",
        "implication": "Due to this erratum, the hypervisor may experience an unexpected shutdown.",
        "workaround": "Software should not configure VMX transitions to load non-existent MSRs.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Transitions Out of 64-bit Mode May Lead to an Incorrect FDP And FIP",
        "problem": " A transition from 64-bit mode to compatibility or legacy modes may result in cause a subsequent x87 FPU state save to zeroing bits [63:32] of the FDP (x87 FPU Data Pointer Offset) and the FIP (x87 FPU Instruction Pointer Offset).",
        "implication": "Leaving 64-bit mode may result in incorrect FDP and FIP values when x87 FPU state is saved.",
        "workaround": "None identified. 64-bit software should save x87 FPU state before leaving 64-bit mode if it needs to access the FDP and/or FIP values.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT FUP May be Dropped After OVF",
        "problem": "Some Intel PT (Intel Processor Trace) OVF (Overflow) packets may not be followed by a FUP (Flow Update Packet) or TIP.PGE (Target IP Packet, Packet Generation Enable).",
        "implication": "When this erratum occurs, an unexpected packet sequence is generated.",
        "workaround": "When it encounters an OVF without a following FUP or TIP.PGE, the Intel PT trace decoder should scan for the next TIP, TIP.PGE, or PSB+ to resume operation.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "ENCLS[ECREATE] Causes #GP if Enclave Base Address is Not Canonical",
        "problem": " The ENCLS[ECREATE] instruction uses an SECS (SGX enclave control structure) referenced by the SRCPAGE pointer in the PAGEINFO structure, which is referenced by the RBX register. Due to this erratum, the instruction causes a #GP (general- protection fault) if the SECS attributes indicate that the enclave should operate in 64- bit mode and the enclave base linear address in the SECS is not canonical.",
        "implication": " System software will incur a general-protection fault if it mistakenly programs the SECS with a non-canonical address. Intel has not observed this erratum with any commercially available software.",
        "workaround": "System software should always specify a canonical address as the base address of the 64-bit mode enclave.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Data Breakpoint May Not be Detected on a REP MOVS",
        "problem": "A REP MOVS instruction that causes an exception or a VM exit may not detect a data breakpoint that occurred on an earlier memory access of that REP MOVS instruction.",
        "implication": "A debugger may miss a data read/write access if it is done by a REP MOVS instruction",
        "workaround": "Software that relies on data breakpoint for correct execution should disable fast- strings (bit 0 in IA32_MISC_ENABLE MSR).",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* and DMI Links With Lane Polarity Inversion May Result in Link Failure",
        "problem": "The processor\u2019s PCIe and DMI links may fail after exiting Package C7 or deeper if the platform requires the link to utilize lane polarity inversion.",
        "implication": "Due to this erratum, the processor cannot support lane polarity inversion on the PCIe or DMI links when Package C7 or deeper is enabled.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Expansion ROM Base Address Register May be Incorrect",
        "problem": " After PCIe 8.0 GT/s Link Equalization on a root port (Bus 0; Device 1; Function 0, 1, 2) has completed, the Expansion ROM Base Address Register (Offset 38H) may be incorrect.",
        "implication": "Software that uses this BAR may behave unexpectedly. Intel has not observed this erratum with any commercially available software.",
        "workaround": " It is possible for the BIOS to contain a partial workaround for this erratum. Software should wait at least 5ms following link equalization before accessing these Expansion ROM Base Address Register.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Perform Equalization May Lead to Link Failure",
        "problem": " Due to this erratum, when a processor PCIe port operating at 8.0 GT/s is directed to redo equalization, either via software or from the link partner, incorrect coefficients may be conveyed during Equalization Phase 3.",
        "implication": "If the link partner accepts the incorrect coefficients, the link may become unstable. Note this affects 8.0 GT/s only.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Two DIMMs Per Channel 2133 MHz DDR4 SODIMM Daisy-Chain Systems With Different Vendors May Hang",
        "problem": " When, on a single memory channel with 2133 MHz DDR4 SODIMMs, mixing different vendors or mixing single rank and dual rank DIMMs, may lead to a higher rate of correctable errors or system hangs.",
        "implication": "Due to this erratum, reported correctable error counts may increase or system may hang.",
        "workaround": "Use a single vendor for and do not mix single rank and dual rank 2133 MHz DDR4 SODIMM.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "ENCLS[EINIT] Instruction May Unexpectedly #GP",
        "problem": " When using Intel\u00ae SGX (Software Guard Extensions), the ENCLS[EINIT] instruction will incorrectly cause a #GP (general protection fault) if the MISCSELECT field of the SIGSTRUCT structure is not zero.",
        "implication": " This erratum may cause an unexpected #GP, but only if software has set bits in the MISCSELECT field in SIGSTRUCT structure that do not correspond to extended features that can be written to the MISC region of the SSA (State Save Area). Intel has not observed this erratum with any commercially available software.",
        "workaround": " When executing the ENCLS[EINIT] instruction, software should only set bits in the MISCSELECT field in the SIGSTRUCT structure that are enumerated as 1 by CPUID.(EAX=12H,ECX=0):EBX (the bit vector of extended features that can be written to the MISC region of the SSA).",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT OVF Packet May be Lost if Immediately Preceding a TraceStop",
        "problem": " If an Intel PT (Intel\u00ae Processor Trace) internal buffer overflow occurs immediately before software executes a taken branch or event that enters an Intel PT TraceStop region, the OVF (Overflow) packet may be lost.",
        "implication": "The trace decoder will not see the OVF packet, nor any subsequent packets (e.g., TraceStop) that were lost due to overflow.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Detecting an Intel\u00ae PT Stopped or Error Condition Within an Intel\u00ae TSX Region May Result in a System Hang",
        "problem": " While executing within an Intel TSX (Intel\u00ae Transactional Synchronization Extensions) transactional region with Intel PT (Intel\u00ae Processor Trace) enabled and an event occurs that causes either the Error bit (bit 4) or Stopped bit (bit 5) in the IA32_RTIT_STATUS MSR (0571H) to be set then, due to this erratum, the system may hang.",
        "implication": "A system hang may occur when Intel PT and Intel TSX are used together.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "WRMSR to IA32_BIOS_UPDT_TRIG May be Counted as Multiple Instructions",
        "problem": " When software loads a microcode update by writing to MSR IA32_BIOS_UPDT_TRIG (79H) on multiple logical processors in parallel, a logical processor may, due to this erratum, count the WRMSR instruction as multiple instruction-retired events.",
        "implication": " Performance monitoring with the instruction-retired event may over count by up to four extra events per instance of WRMSR which targets the IA32_BIOS_UPDT_TRIG register.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "The x87 FIP May be Incorrect",
        "problem": " The x87 FPU should update the x87 FIP (FPU instruction pointer) for every non- control x87 instruction executed. Due to this erratum, the FIP is valid only if the last non-control FP instruction had an unmasked exception.",
        "implication": " When this erratum occurs, an instruction that saves FIP (e.g., FSTENV) may save an incorrect value. Software that depends on the FIP value for x87 non-control instructions without unmasked exceptions may not operate as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Branch Instructions May Initialize MPX Bound Registers Incorrectly",
        "problem": " Depending on the current Intel\u00ae MPX (Memory Protection Extensions) configuration, execution of certain branch instructions (near CALL, near RET, near JMP, and Jcc instructions) without a BND prefix (F2H) initialize the MPX bound registers. Due to this erratum, execution of such a branch instruction on a user-mode page may not use the MPX configuration register appropriate to the current privilege level (BNDCFGU for CPL 3 or BNDCFGS otherwise) for determining whether to initialize the bound registers; it may thus initialize the bound registers when it should not, or fail to initialize them when it should.",
        "implication": " After a branch instruction on a user-mode page has executed, a #BR (bound-range) exception may occur when it should not have or a #BR may not occur when one should have.",
        "workaround": " If supervisor software is not expected to execute instructions on user-mode pages, software can avoid this erratum by setting CR4.SMEP [bit 20] to enable supervisor- mode execution prevention (SMEP). If SMEP is not available or if supervisor software is expected to execute instructions on user-mode pages, no workaround is identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing a Non-Canonical Value to an LBR MSR Does Not Signal a #GP When Intel\u00ae PT is Enabled",
        "problem": " If Intel PT (Intel Processor Trace) is enabled, WRMSR will not cause a general- protection exception (#GP) on an attempt to write a non-canonical value to any of the following MSRs: MSR_LASTBRANCH_{0 - 31}_FROM_IP (680H \u2013 69FH) MSR_LASTBRANCH__{0 - 31}_TO_IP (6C0H \u2013 6DFH) MSR_LASTBRANCH_FROM_IP (1DBH) MSR_LASTBRANCH_TO_IP (1DCH) MSR_LASTINT_FROM_IP (1DDH) MSR_LASTINT_TO_IP (1DEH) Instead the same behavior will occur as if a canonical value had been written. Specifically, the WRMSR will be dropped and the MSR value will not be changed.",
        "implication": "Due to this erratum, an expected #GP may not be signaled.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Run Intel\u00ae AVX Code Much Slower Than Expected",
        "problem": "After a C6 state exit, the execution rate of AVX instructions may be reduced.",
        "implication": "Applications using AVX instructions may run slower than expected.",
        "workaround": "It is possible for the BIOS to contain a workaround",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT Buffer Overflow May Result in Incorrect Packets",
        "problem": " Under complex micro-architectural conditions, an Intel PT (Processor Trace) OVF (Overflow) packet may be issued after the first byte of a multi-byte CYC (Cycle Count) packet, instead of any remaining bytes of the CYC.",
        "implication": " When this erratum occurs, the splicing of the CYC and OVF packets may prevent the Intel PT decoder from recognizing the overflow. The Intel PT decoder may then encounter subsequent packets that are not consistent with expected behavior.",
        "workaround": " None Identified. The decoder may be able to recognize that this erratum has occurred when a two-byte CYC packet is followed by a single-byte CYC, where the latter 2 bytes are 0xf302, and where the CYC packets are followed by a FUP (Flow Update Packet) and a PSB+ (Packet Stream Boundary+). It should then treat the two CYC packets as indicating an overflow.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT PSB+ Packets May be Omitted on a C6 Transition",
        "problem": " An Intel PT (Processor Trace) PSB+ (Packet Stream Boundary+) set of packets may not be generated as expected when IA32_RTIT_STATUS.PacketByteCnt[48:32] (MSR 0x571) reaches the PSB threshold and a logical processor C6 entry occurs within the following one KByte of trace output.",
        "implication": "After a logical processor enters C6, Intel PT output may be missing PSB+ sets of packets.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_PERF_GLOBAL_STATUS.TRACE_TOPA_PMI Bit Cannot be Set by Software",
        "problem": " A WRMSR that attempts to set Trace_ToPA_PMI (bit 55) in the IA32_PERF_GLOBAL_STATUS MSR (38EH) by writing a \u20181\u2019 to bit 55 in the IA32_PERF_GLOBAL_STATUS_SET (MSR (391H) will cause a #GP fault.",
        "implication": "Software cannot set the Trace_ToPA_PMI bit.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "CPUID Incorrectly Reports Bit Manipulation Instructions Support",
        "problem": "Executing CPUID with EAX = 7 and ECX = 0 may return EBX with bits [3] and [8] set, incorrectly indicating the presence of BMI1 and BMI2 instruction set extensions.",
        "implication": "Attempting to use instructions from the BMI1 or BMI2 instruction set extensions will result in a #UD exception.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Use of Prefetch Instructions May Lead to a Violation of Memory Ordering",
        "problem": " Under certain micro architectural conditions, execution of a PREFETCHh instruction or a PREFETCHW instruction may cause a load from the prefetched cache line to appear to execute before an earlier load from another cache line.",
        "implication": "Software that relies on loads executing in program order may not operate correctly.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "CS Limit Violation May Not be Detected",
        "problem": "A CS (code segment) limit reduction may not be properly applied.",
        "implication": "Instructions may be executed beyond the CS limit. Intel has not observed this erratum to impact the operation of any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Last Level Cache Performance Monitoring Events May be Inaccurate",
        "problem": " The performance monitoring events LONGEST_LAT_CACHE.REFERENCE (Event 2EH; Umask 4FH) and LONGEST_LAT_CACHE.MISS (Event 2EH; Umask 41H) count requests that reference or miss in the last level cache. However, due to this erratum, the count may be incorrect.",
        "implication": "LONGEST_LAT_CACHE events may be incorrect.",
        "workaround": " None identified. Software may use the following OFFCORE_REQUESTS model-specific sub events that provide related performance monitoring data: DEMAND_DATA_RD, DEMAND_CODE_RD, DEMAND_RFO, ALL_DATA_RD, L3_MISS_DEMAND_DATA_RD, ALL_REQUESTS.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "#GP Occurs Rather Than #DB on Code Page Split Inside an Intel\u00ae SGX Enclave",
        "problem": " When executing within an Intel\u00ae SGX (Software Guard Extensions) enclave, a #GP (general-protection exception) may be delivered instead of a #DB (debug exception) when an instruction breakpoint is detected. This occurs when the instruction to be executed spans two pages, the second of which has an entry in the EPCM (enclave page cache map) that is not valid.",
        "implication": "Debugging software may not be invoked when an instruction breakpoint is detected.",
        "workaround": "Software should ensure that all pages containing enclave instructions have valid EPCM entries.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Execution of VAESENCLAST Instruction May Produce a #NM Exception Instead of a #UD Exception",
        "problem": " Execution of VAESENCLAST with VEX.L= 1 should signal a #UD (Invalid Opcode) exception, however, due to the erratum, a #NM (Device Not Available) exception may be signaled.",
        "implication": "As a result of this erratum, an operating system may restore AVX and other state unnecessarily.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae SGX Enclave Accesses to the APIC-Access Page May Cause APIC- Access VM Exits",
        "problem": "In VMX non-root operation, Intel SGX (Software Guard Extensions) enclaves accesses to the APIC-access page may cause APIC-access VM exits instead of page faults.",
        "implication": " A VMM (virtual-machine monitor) may receive a VM exit due to an access that should have caused a page fault, which would be handled by the guest OS (operating system).",
        "workaround": " A VMM avoids this erratum if it does not map any part of the EPC (Enclave Page Cache) to the guest\u2019s APIC-access address; an operating system avoids this erratum if it does not attempt indirect enclave accesses to the APIC.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "CR3 Filtering Does Not Compare Bits [11:5] of CR3 and IA32_RTIT_CR3_MATCH in PAE Paging Mode",
        "problem": " In PAE paging mode, the CR3[11:5] are used to locate the page-directory-pointer table. Due to this erratum, those bits of CR3 are not compared to IA32_RTIT_CR3_MATCH (MSR 572H) when IA32_RTIT_CTL.CR3Filter (MSR 570H, bit 7) is set.",
        "implication": " If multiple page-directory-pointer tables are co-located within a 4KB region, CR3 filtering will not be able to distinguish between them so additional processes may be traced.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT PacketEn Change on C-state Wake May Not Generate a TIP Packet",
        "problem": " A TIP.PGE (Target IP, Packet Generation Enabled) or TIP.PGD (Target IP, Packet Generation Disabled) packet may not be generated if Intel PT (Processor Trace) PacketEn changes after IA32_RTIT_STATUS.FilterEn (MSR 571H, bit 0) is re- evaluated on wakeup from C6 or deeper sleep state.",
        "implication": " When code enters or exits an IP filter region without a taken branch, tracing may begin or cease without proper indication in the trace output. This may affect trace decoder behavior.",
        "workaround": "None identified. A trace decoder will need to skip ahead to the next TIP or FUP packet to determine the current IP.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Graphics Configuration May Not be Correctly Restored After a Package C8 Exit",
        "problem": "The processor should ensure internal graphics configuration is restored during a Package C8 or deeper exit event. Due to this erratum, some internal graphics configurations may not be correctly restored.",
        "implication": "When this erratum occurs, a graphics driver restart may lead to system instability. Such a restart may occur when upgrading the graphics driver.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "x87 FDP Value May be Saved Incorrectly",
        "problem": " Execution of the FSAVE, FNSAVE, FSTENV, or FNSTENV instructions in real-address mode or virtual-8086 mode may save an incorrect value for the x87 FDP (FPU data pointer). This erratum does not apply if the last non-control x87 instruction had an unmasked exception.",
        "implication": " Software operating in real-address mode or virtual-8086 mode that depends on the FDP value for non-control x87 instructions without unmasked exceptions may not operate properly.",
        "workaround": " None identified. Software should use the FDP value saved by the listed instructions only when the most recent non-control x87 instruction incurred an unmasked exception.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor With Intel\u00ae SGX Support May Hang During S3 Wake or Power-On Reset",
        "problem": " Processors that support Intel\u00ae SGX (Intel Software Guard Extensions) may experience hangs when waking from S3 (Standby) system sleep state or during a power-on reset. This erratum may occur even if the Intel SGX feature is not enabled.",
        "implication": "Due to this erratum, the system may not wake after entering standby sleep state or may not start up after a power-on reset",
        "workaround": " It is possible for the BIOS to contain a workaround for this erratum. For systems that do not power gate Vcc Sustain, if the workaround detects this erratum, support for Intel SGX will be removed until platform power is disconnected and reapplied.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Audio Glitches May Occur After Reset or S3/S4 Exit",
        "problem": "After a reset or S3/S4 exit the processor may operate at a lower than expected frequency.",
        "implication": "When this erratum occurs, the processor may be unable to adequately support audio playback resulting in several seconds of audio glitches.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT CYCThresh Value of 13 is Not Supported",
        "problem": " Intel PT (Intel\u00ae Processor Trace) CYC (Cycle Count) threshold is configured through CYCThresh field in bits [22:19] of IA32_RTIT_CTL MSR (570H). A value of 13 is advertised as supported by CPUID (leaf 14H, sub-lead 1H). Due to this erratum, if CYCThresh is set to 13 then the CYC threshold will be 0 cycles instead of 4096 (213- 1) cycles.",
        "implication": "CYC packets may be issued in higher rate than expected if threshold value of 13 is used.",
        "workaround": "None identified. Software should not use value of 13 for CYC threshold.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Exx. Intel\u00ae PT May Drop Some Timing Packets After Entering Thread",
        "problem": " Intel PT (Intel\u00ae Processor Trace) may temporarily stop sending MTC (Mini Time Counter) and CYC (Cycle) packets after entering thread C3 state. MTC and CYC packets may be missing in up to 1KB of trace output after entering thread C3.",
        "implication": "Some Intel PT timing packets may temporarily not be sent after thread C3 is entered.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Underflow and Denormal Conditions During a VDPPS Instruction With YMM Operands May Not Produce The Expected Results",
        "problem": " A VDPPS (Vector Dot Product of Packed Single Precision Floating-Point Values) instruction operating on YMM registers with denormal operand(s) or experiencing an underflow may not produce the expected result if the exception is masked in the MXCSR. This may also happen when intermediate multiply results have underflow conditions.",
        "implication": "VDPPS with YMM registers may not produce the expected result.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Enabling VMX-Preemption Timer Blocks HDC Operation",
        "problem": " HDC (Hardware Duty Cycling) will not put the physical package into the forced idle state while any logical processor is in VMX non-root operation and the \u201cactivate VMX- preemption timer\u201d VM-execution control is 1.",
        "implication": "HDC will not provide the desired power reduction when the VMX-preemption timer is active in VMX non-root operation.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Processors May be Configured With an Incorrect TDP",
        "problem": " Certain processors should be configured with a TDP (Thermal Design Power) limit of 54 or 51 watts. Due to this erratum, these processors may be incorrectly configured at 65 W TDP. The following processors are affected by this erratum: Intel\u00ae Core\u2122 i3 Processor Series, Celeron\u00ae and Pentium\u00ae (Dual-Core With GT1/GT2). A processor that reports a value of 0x208 in TDP_POWER_OF_SKU field in MSR PACKAGE_POWER_SKU (MSR 614H [14:0]) are affected by this erratum.",
        "implication": "Processors affected by this erratum may spend more time in turbo and thus may experience unexpected thermal throttling events.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Display Flicker May Occur When Both VT-d And FBC Are Enabled",
        "problem": " Display flickering may occur when both FBC (Frame Buffer Compression) and VT-d (Intel\u00ae Virtualization Technology for Directed I/O) are enabled and in use by the display controller.",
        "implication": "Due to this erratum, display flickering may be observed.",
        "workaround": "It is possible for Intel\u00ae Graphics Driver 15.40.11.4312 or later to contain a workaround for this erratum. This workaround will disable FBC.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang When Using Intel\u00ae TXT And Memory That Supports Address Mirroring",
        "problem": " Within platforms that utilize memory that supports address mirroring, processors that utilize Intel TXT (Intel Trusted Execution Technology) measured launch environment may fail to boot and hang.",
        "implication": "Due to this erratum, system may hang.",
        "workaround": "A BIOS workaround has been identified. Please refer to TXT BIOS ACM 1.3 or later and release notes.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang or Reset During Processor Package C9 Exit",
        "problem": " Under a complex set of conditions, during a processor Package C9 exit, display artifacts may be seen, the processor may hang, or the processor may incur a machine check exception with an Internal Unclassified error reported in IA32_MCi_STATUS with MCACOD (bits[15:0]) equal to 0x402 and MSCOD (31:16)] equal to 0x94yy (where y can be any value).",
        "implication": "Display artifacts may be seen or the system may log a machine check error and reset or hang when resuming from C9.",
        "workaround": "It is possible for the BIOS and Intel\u00ae Graphics Driver 15.40.11.4312 or later to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Integrated Audio Codec May Not be Detected",
        "problem": " Integrated Audio Codec may lose power when LPSP (Low-Power Single Pipe) mode is enabled for an eDP* (embedded DisplayPort) or HDMI ports. Platforms with Intel\u00ae SST (Intel\u00ae Smart Sound Technology) enabled are not affected.",
        "implication": " The Audio Bus driver may attempt to do enumeration of Codecs when eDP or HDMI port enters LPSP mode, due to this erratum, the Integrated Audio Codec will not be detected and audio maybe be lost.",
        "workaround": "Intel\u00ae Graphics Driver 15.40.11.4312 or later will prevent the Integrated Audio Codec from losing power when LPSP mode is enabled.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "MOVNTDQA From WC Memory May Pass Earlier MFENCE Instructions",
        "problem": "An execution of MOVNTDQA or VMOVNTDQA that loads from WC (write combining) memory may appear to pass an earlier execution of the MFENCE instruction.",
        "implication": " When this erratum occurs, an execution of MOVNTDQA or VMOVNTDQA may appear to execute before memory operations that precede the earlier MFENCE instruction. Software that uses MFENCE to order subsequent executions of the MOVNTDQA instructions may not operate properly.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "APIC Timer Interrupt or Timed MWAIT Wake May Occur Early",
        "problem": " When the APIC timer is configured to TSC Deadline Mode, a timer interrupt may occur before the expected deadline if any of IA32_TSC_DEADLINE MSR (6E0H) bits [63:56] are set. Additionally, a Timed MWAIT with EDX bits [31:24] set may wake early and may set EAX[1] to report that the MWAIT timer caused the wake event.",
        "implication": "A timer interrupt may be delivered earlier than specified by the IA32_TSC_DEADLINE MSR or a Timed MWAIT may wake earlier than its specified deadline.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processors That Support EDRAM May Not Initialize Properly",
        "problem": "During platform initialization, the processor\u2019s eDRAM interface may fail to complete its training and configuration sequence.",
        "implication": "When this erratum occurs, a processor that supports eDRAM may not initialize properly.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang or Cause Unpredictable System Behavior",
        "problem": " Under complex microarchitecture conditions, processor may hang with an internal timeout error (MCACOD 0400H) logged into IA32_MCi_STATUS or cause unpredictable system behavior",
        "implication": "When this issue occurs, the system may cause unpredictable system behavior",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "The Processor May Fail to Properly Exit Package C6 or Deeper",
        "problem": " When the processor exits Package C6 or deeper, it may hang, generate a machine check exception with an Internal Unclassified error reported in IA32_MCi_STATUS with MCACOD (bits[15:0]) equal to 0x402 and MSCOD (31:16)] equal to 0x94yy (where y can be any value), or exhibit unpredictable system behavior.",
        "implication": "Due to this erratum, unpredictable system behavior may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Processors May Report Incorrect DID2",
        "problem": " The U-processor with GT3 and TDP of 28W may report an incorrect value of 1926H in DID2 (Processor Graphics Device ID) (Bus 0, Device 2, Function 0; offset 2h; bits [15:0]) register. This value should be 1927H.",
        "implication": "Software that decodes DID2 values may not function as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang When Entering S3/S4/S5 State",
        "problem": " When entering S3/S4/S5 state, it may hang and generate a machine check with an Internal Unclassified error reported in IA32_MCi_STATUS with MCACOD (bits[15:0]) equal to 0x402 and MSCOD (31:16)] equal to 0x77yy (where y can be any value).",
        "implication": "Due to this erratum a system hang may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Display Flickering May be Observed with Specific eDP Panels",
        "problem": "The processor may incorrectly configure transmitter buffer characteristics if the associated eDP panel requests VESA equalization preset 3, 5, 6, or 8.",
        "implication": "Display flickering or display loss maybe observed.",
        "workaround": "Intel\u00ae Graphics Driver version 15.40.12.4326 or later contains a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "x87 FPU Data Pointer Updated Only For Instructions That Incur Unmasked Exceptions",
        "problem": " The x87 FPU data pointer points to the data (operand) for the last x87 non-control instruction executed, unless CPUID.(EAX=07H,ECX=0H):EBX.FDP_EXCPTN_ONLY[bit 6] is 1, in which case it points to the operand for the last x87 non-control instruction that incurred an unmasked x87 exception. Due to this erratum, x87 FPU data pointer behaves as if the FDP_EXCPTN_ONLY flag is 1 even when that bit is 0.",
        "implication": " If the most recent x87 non-control instruction did not incur an unmasked x87 exception, software that then examines the x87 FPU data pointer will see an incorrect value. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect Branch Predicted Bit in BTS/BTM Branch Records",
        "problem": " BTS (Branch Trace Store) and BTM (Branch Trace Message) send branch records to the Debug Store management area and system bus respectively. The Branch Predicted bit (bit 4 of eighth byte in BTS/BTM records) should report whether the most recent branch was predicted correctly. Due to this erratum, the Branch Predicted bit may be incorrect.",
        "implication": "BTS and BTM cannot be used to determine the accuracy of branch prediction.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "MACHINE_CLEARS.MEMORY_ORDERING Performance Monitoring Event May Undercount",
        "problem": " The performance monitoring event MACHINE_CLEARS.MEMORY_ORDERING (Event C3H; Umask 02H) counts the number of machines clears caused by memory ordering conflicts. However due to this erratum, this event may undercount for VGATHER*/VPGATHER* instructions of four or more elements.",
        "implication": "MACHINE_CLEARS.MEMORY_ORDERING performance monitoring event may undercount.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "CTR_FRZ May Not Freeze Some Counters",
        "problem": " IA32_PERF_GLOBAL_STATUS.CTR_FRZ (MSR 38EH, bit 59) is set when either (1) IA32_DEBUGCTL.FREEZE_PERFMON_ON_PMI (MSR 1D9H, bit 12) is set and a PMI is triggered, or (2) software sets bit 59 of IA32_PERF_GLOBAL_STATUS_SET (MSR 391H). When set, CTR_FRZ should stop all core performance monitoring counters from counting. However, due to this erratum, IA32_PMC4-7 (MSR C5-C8H) may not stop counting. IA32_PMC4-7 are only available when a processor core is not shared by two logical processors.",
        "implication": "General performance monitoring counters 4-7 may not freeze when IA32_PERF_GLOBAL_STATUS.CTR_FRZ is set.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Instructions And Branches Retired Performance Monitoring Events May Overcount",
        "problem": " The performance monitoring events INST_RETIRED (Event C0H; any Umask value) and BR_INST_RETIRED (Event C4H; any Umask value) count instructions retired and branches retired, respectively. However, due to this erratum, these events may overcount in certain conditions when: - Executing VMASKMOV* instructions with at least one masked vector element - Executing REP MOVS or REP STOS with Fast Strings enabled (IA32_MISC_ENABLES MSR (1A0H), bit 0 set) - An MPX #BR exception occurred on BNDLDX/BNDSTX instructions and the BR_INST_RETIRED (Event C4H; Umask is 00H or 04H) is used.",
        "implication": "INST_RETIRED and BR_INST_RETIRED performance monitoring events may overcount.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "REP MOVS May Not Operate Correctly With EPT Enabled",
        "problem": " Execution of REP MOVS may incorrectly change [R/E]CX, [R/E]SI, and/or [R/E]DI register values during instruction execution. This erratum occurs only if the execution would set an accessed or dirty flag in a paging structure to which EPT does not allow writes.",
        "implication": " Incorrect changes to RCX, RSI, and/or RDI may lead to a block-copy operation with an unexpected length, an unexpected source location, and/or an unexpected destination location.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Ring Frequency Changes May Cause a Machine Check And System Hang",
        "problem": " Ring frequency changes may lead to a system hang with the processor logging a machine check in IA32_MCi_STATUS where the MCACOD (bits[15:0]) value is 0x0402 and the MSCOD (bits[31:16]) value is 0x77yy (yy is any 8-bit value).",
        "implication": " When this erratum occurs, the system will log a machine check and hang. Power management activity, including system power state changes, can result in ring frequency changes that may trigger this erratum.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Some OFFCORE_RESPONSE Performance Monitoring Events May Overcount",
        "problem": " The performance monitoring events OFFCORE_RESPONSE (Events B7H and BBH) should count off-core responses matching the request-response configuration specified in MSR_OFFCORE_RSP_0 and MSR_OFFCORE_RSP_1 (1A6H and 1A7H, respectively) for core-originated requests. However, due to this erratum, DMND_RFO (bit 1), DMND_IFETCH (bit 2) and OTHER (bit 15) request types may overcount.",
        "implication": "Some OFFCORE_RESPONSE events may overcount.",
        "workaround": " None identified. Software may use the following model-specific events that provide related performance monitoring data: OFFCORE_REQUESTS (all sub-events), L2_TRANS.L2_WB and L2_RQSTS.PF_MISS.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Using BIOS to Disable Cores May Lead to a System Hang",
        "problem": "Using the BIOS hardware core disable facility may cause the processor to hang when it attempts to enter or exit Package C6.",
        "implication": "When this erratum occurs, attempting to enter or exit Package C6 state will hang the system.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Instructions Fetch #GP After RSM During Intel\u00ae PT May Push Incorrect RFLAGS Value on Stack",
        "problem": " If Intel PT (Processor Trace) is enabled, a #GP (General Protection Fault) caused by the instruction fetch immediately following execution of an RSM instruction may push an incorrect value for RFLAGS onto the stack.",
        "implication": "Software that relies on RFLAGS value pushed on the stack under the conditions described may not work properly.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Access to SGX EPC Page in BLOCKED State is Not Reported as an SGX- Induced Page Fault",
        "problem": " If a page fault results from attempting to access a page in the SGX (Intel\u00ae Software Guard Extensions) EPC (Enclave Page Cache) that is in the BLOCKED state, the processor does not set bit 15 of the error code and thus fails to indicate that the page fault was SGX-induced.",
        "implication": "Due to this erratum, software may not recognize these page faults as being SGX- induced.",
        "workaround": "Before using the EBLOCK instruction to marking a page as BLOCKED, software should use paging to mark the page not present.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Atomic Operations May Lead to Unpredictable System Behavior",
        "problem": " Processors with eDRAM do not support PCIe Atomic Operations. Due to this erratum, processors with eDRAM incorrectly advertise support for PCIe Atomic Operations in DCAP2 CSRs (Bus 0; Device 1; Function 0,1,2; Offset 0xC4), bits[9:7].",
        "implication": "Use of PCIe Atomic Operations may lead to unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Instructions That Cause #NM May Lead to Hang",
        "problem": " An x87 FPU instruction or AESNI instruction executed while CR0.TS[bit 3]=1 should cause an #NM (device not available) exception. Due to this erratum, executing such instructions when Intel Hyper-Threading Technology is enabled may result in a hang with an internal timeout error (MCACOD 0400H) logged into IA32_MCi_STATUS bits [15:0].",
        "implication": "When this erratum occurs, the system will experience a fatal machine check. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Enabling S3 on Processors With EDRAM May Cause Unpredictable System Behavior",
        "problem": "Entering S3 when EDRAM is enabled may lead to unpredictable system behavior.",
        "implication": "When this erratum occurs, the system may exhibit unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Package-C6 Exit Latency May be Higher Than Expected Leading to Display Flicker",
        "problem": "Package-C6 exit latency may be higher than expected.",
        "implication": "Due to this erratum, the display may flicker or other Isochronous devices may be affected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "EDRAM May Cause Unpredictable System Behavior",
        "problem": "EDRAM, under certain low-power conditions, may lead to unpredictable behavior.",
        "implication": "When this erratum occurs, the system will behave unpredictably",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "PCIe* Port Does Not Support DLL Link Activity Reporting",
        "problem": " The PCIe Base specification requires DLL (Data Link Layer) Link Activity Reporting when 8 GT/s link speed is supported. Due to this erratum, link activity reporting is not supported",
        "implication": "Due to this erratum, PCIe port does not support DLL Link Activity Reporting when 8 GT/s is supported.",
        "workaround": "None identified",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Enabling Package C8 State or Deeper May Lead to Display Flicker or a System Hang",
        "problem": "Under certain conditions, when Package C8 state or deeper is enabled, display flickering may be observed and/or the system may hang.",
        "implication": "When this erratum occurs, the display may flicker and/or the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang When EDRAM is Enabled And DDR is Operating at 1600 MHz",
        "problem": "When EDRAM is enabled and the DDR operating frequency is 1600 MHz, a system hang may occur",
        "implication": "When this erratum occurs, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Package C3 Exit Latency May be Longer Than Expected Leading to Display Flicker",
        "problem": "Package C3 exit latency may be longer than expected.",
        "implication": "When this erratum occurs on a system with multiple high-resolution displays, the displays may flicker",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Complex Interactions With Internal Graphics May Impact Processor Responsiveness",
        "problem": " Under complex conditions associated with the use of internal graphics, the processor may exceed the MAX_LAT CSR values (PCI configuration space, offset 03FH, bits[7:0]).",
        "implication": "When this erratum occurs, the processor responsiveness is affected. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "After a Package C10 Sleep State Exit, a Subsequent C8/C9 Exit May Cause System Hang",
        "problem": "If Package C10 sleep state has been entered and exited, a later Package C8/C9 sleep state entrance/exit may cause the system to hang.",
        "implication": "When this erratum occurs, the system hangs.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Memory Controller CKE Signal May Not be Expected Value When Executing Boundary Scan EXTEST Command",
        "problem": "If RESET# is asserted while EXTEST command is run, the CKE signal will always be observed as a low value instead of toggling as the BCSAN pattern is shifted.",
        "implication": "Due to this erratum, the CKE signal may be observed low during the EXTEST Command.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Certain Non-Canonical IA32_BNDCFGS Values Will Not Cause VM-Entry Failures",
        "problem": " If the VM-entry controls Load IA32_BNDCFGS field (bit 16) is 1, VM-entry should fail when the value of the guest IA32_BNDCFGS field in the VMCS is not canonical (that is, when bits 63:47 are not identical). Due to this erratum, VM-entry does not fail if bits 63:48 are identical but differ from bit 47. In this case, VM-entry loads the IA32_BNDCFGS MSR with a value in which bits 63:48 are identical to the value of bit 47 in the VMCS field.",
        "implication": "If the value of the guest IA32_BNDCFGS field in the VMCS is not canonical, VM-entry may load the IA32_BNDCFGS MSR with a value different from that of the VMCS field.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Executing a 256-Bit AVX Instruction May Cause Unpredictable Behavior",
        "problem": "Under complex micro-architectural conditions, executing a 256 AVX bit instruction may result in unpredictable system behavior.",
        "implication": "When this erratum occurs, the system may behave unpredictably",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "HWP\u2019s Guaranteed_Performance Updated Only on Configurable TDP Changes",
        "problem": " According to HWP (Hardware P-states) specification, the Guaranteed_Performance field (bits[15:8]) in the IA32_HWP_CAPABILITIES MSR (771H) should be updated as a result of changes in the configuration of TDP, RAPL (Running Average Power Limit) and other platform tuning options that may have dynamic effects on the actual guaranteed performance support level. Due to this erratum, the processor will update the Guaranteed_Performance field only as a result of Configurable TDP dynamic changes",
        "implication": "Software may read a stale value of the Guaranteed _Performance field.",
        "workaround": "None identified",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Core and/or Ring Frequency May be Briefly Lower Than Expected After BIOS Completes",
        "problem": "Due to this erratum, the core and ring frequencies may be lower than expected for up to several seconds after BIOS completes",
        "implication": "Processing immediately after BIOS completes may take longer than expected. The erratum does not cause any functional failures.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT ToPA PMI Does Not Freeze Performance Monitoring Counters",
        "problem": " Due to this erratum, if IA32_DEBUGCTL.FREEZE_PERFMON_ON_PMI (MSR 1D9H, bit 12) is set to 1 when Intel PT (Processor Trace) triggers a ToPA (Table of Physical Addresses) PMI (PerfMon Interrupt), performance monitoring counters are not frozen as expected.",
        "implication": "Performance monitoring counters will continue to count for events that occur during PMI handler execution.",
        "workaround": "PMI handler software can programmatically stop performance monitoring counters upon entry.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "HWP\u2019s Maximum_Performance Value is Reset to 0xFF",
        "problem": " According to HWP (Hardware P-states) specification, the reset value of the Maximum_Performance field (bits [15:8]) in IA32_HWP_REQUEST MSR (774h) should be set to the value of IA32_HWP_CAPABILITIES MSR (771H) Highest_Performance field (bits[7:0]) after reset. Due to this erratum, the reset value of Maximum_Performance is always set to 0xFF.",
        "implication": "Software may see an unexpected value in Maximum Performance field. Hardware clipping will prevent invalid performance states.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "HWP\u2019s Guaranteed_Performance and Relevant Status/Interrupt May be Updated More Than Once Per Second",
        "problem": " According to HWP (Hardware P-states) specification, the Guaranteed_Performance field (bits[15:8]) in the IA32_HWP_CAPABILITIES MSR (771H) and the Guaranteed_Performance_Change (bit 0) bit in IA32_HWP_STATUS MSR (777H) should not be changed more than once per second nor should the thermal interrupt associated with the change to these fields be signaled more than once per second. Due to this erratum, the processor may change these fields and generate the associated interrupt more than once per second.",
        "implication": "HWP interrupt rate due to Guaranteed_Performance field change can be higher than specified",
        "workaround": "Clearing the Guaranteed_Performance_Change status bit no more than once per second will ensure that interrupts are not generated at too fast a rate.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "HWP May Generate Thermal Interrupt While Not Enabled",
        "problem": " Due to this erratum, the conditions for HWP (Hardware P-states) to generate a thermal interrupt on a logical processor may generate thermal interrupts on both logical processors of that core.",
        "implication": " If two logical processors of a core have different configurations of HWP (e.g. only enabled on one), an unexpected thermal interrupt may occur on one logical processor due to the HWP settings of the other logical processor.",
        "workaround": "Software should configure HWP consistently on all logical processors of a core.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Camera Device Does Not Issue an MSI When INTx is Enabled",
        "problem": " When both MSI (Message Signaled Interrupts) and legacy INTx are enabled by the camera device, INTx is asserted rather than issuing the MSI, in violation of the PCI Local Bus Specification.",
        "implication": "Due to this erratum, camera device interrupts can be lost leading to device failure.",
        "workaround": "The camera device must disable legacy INTx by setting bit 10 of PCICMD (Bus 0; Device 5; Function 0; Offset 04H) before MSI is enabled",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "An x87 Store Instruction Which Pends #PE May Lead to Unexpected Behavior When EPT A/D is Enabled.",
        "problem": "An x87 store instruction which causes a #PE (Precision Exception) to be pended and updates an EPT (Extended Page Tables) A/D bit may lead to unexpected behavior.",
        "implication": "The VMM may experience unexpected x87 fault or a machine check exception with the value of 0x150 in IA32_MC0_STATUS.MCACOD (bits [15:0] in MSR 401H)",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "System Hang or Machine Check May Occur When eDRAM Enabled",
        "problem": "A machine check exception may occur with an error reported in IA32_MC10_STATUS or may experience system hang at high temperatures",
        "implication": "When this erratum occurs, the system will generate a machine check error or result in a system hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "RING_PERF_LIMIT_REASONS May be Incorrect",
        "problem": "Under certain conditions, RING_PERF_LIMIT_REASONS (MSR 6B1H) may incorrectly assert the OTHER status bit (bit 8) as well as the OTHER log bit (bit 24).",
        "implication": "When this erratum occurs, software using this register will incorrectly report clipping because of the OTHER reason.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "BNDLDX And BNDSTX May Not Signal #GP on Non-Canonical Bound Directory Access",
        "problem": " BNDLDX and BNDSTX instructions access the bound\u2019s directory and table to load or store bounds. These accesses should signal #GP (general protection exception) when the address is not canonical (i.e. bits 48 to 63 are not the sign extension of bit 47). Due to this erratum, #GP may not be generated by the processor when a non- canonical address is used by BNDLDX or BNDSTX for their bound directory memory access",
        "implication": "Intel has not observed this erratum with any commercially available software.",
        "workaround": "Software should use canonical addresses for bound directory accesses.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "DTS Temperature Reading May be Inaccurate on DDR4 systems",
        "problem": " The temperature reported by the DTS (Digital Thermal Sensor) on DDR4 systems may vary from the actual temperature by +5\u00b0C to -15\u00b0C rather than the specified \u00b15\u00b0C.",
        "implication": "When this erratum occurs, CPU throttling may occur later than expected. Intel has not observed this erratum to have any impact on system.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring Load Latency Events May Be Inaccurate For Gather Instructions",
        "problem": " The performance monitoring events MEM_TRANS_RETIRED.LOAD_LATENCY_* (Event CDH; UMask 01H; any latency) count load instructions whose latency exceed a predefined threshold, where the loads are randomly selected using the load latency facility (an extension of PEBS). However due to this erratum, these events may count incorrectly for VGATHER*/VPGATHER* instructions",
        "implication": "The Load Latency Performance Monitoring events may be Inaccurate for Gather instructions",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Some Bits in MSR_MISC_PWR_MGMT May be Updated on Writing Illegal Values to This MSR",
        "problem": " Attempts to write illegal values to MSR_MISC_PWR_MGMT (MSR 0x1AA) result in #GP (General Protection Fault) and should not change the MSR value. Due to this erratum, some bits in the MSR may be updated on writing an illegal value",
        "implication": "Certain fields may be updated with allowed values when writing illegal values to MSR_MISC_PWR_MGMT. Such writes will always result in #GP as expected.",
        "workaround": "None identified. Software should not attempt to write illegal values to this MSR.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Violations of Intel\u00ae Software Guard Extensions (Intel\u00ae SGX) Access-Control Requirements Produce #GP Instead of #PF",
        "problem": " Intel\u00ae Software Guard Extensions (Intel\u00ae SGX) define new access-control requirements on memory accesses. A violation of any of these requirements causes a page fault (#PF) that sets bit 15 (SGX) in the page-fault error code. Due to this erratum, these violations instead cause general-protection exceptions (#GP).",
        "implication": "Software resuming from system sleep states S3 or S4 and relying on receiving a page fault from the above enclave accesses may not operate properly.",
        "workaround": "Software can monitor #GP faults to detect that an enclave has been destroyed and needs to be rebuilt after resuming from S3 or S4",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "IA32_RTIT_CR3_MATCH MSR Bits[11:5] Are Treated As Reserved",
        "problem": " Due to this erratum, bits[11:5] in IA32_RTIT_CR3_MATCH (MSR 572H) are reserved; an MSR writes that attempts to set that field to a non-zero value will result in a #GP fault.",
        "implication": " The inability to write the identified bit field does not affect the functioning of Intel\u00ae PT (Intel\u00ae Processor Trace) operation because, as described in erratum SKL061, the bit field that is the subject of this erratum is not used during Intel PT CR3 filtering.",
        "workaround": " Ensure that bits 11:5 of the value written to IA32_RTIT_CR3_MATCH are zero, including cases where the selected page-directory-pointer-table base address has non-zero bits in this range.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Unpredictable System Behavior May Occur When System Agent Enhanced Intel\u00ae Speedstep\u00ae is Enabled",
        "problem": "Under complex system conditions, System Agent Enhanced Intel\u00ae Speedstep\u00ae may result in unpredictable system behavior.",
        "implication": "When this erratum occurs, the system may behave unpredictably.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang Under Complex Scenarios",
        "problem": "Under complex micro-architectural conditions, the processor may hang with an internal timeout error (MCACOD 0400H) logged into IA32_MCi_STATUS.",
        "implication": "This erratum results in a processor hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "The Intel PT CR3 Filter is Not Re-evaluated on VM Entry",
        "problem": " On a VMRESUME or VMLAUNCH with both TraceEn[0] and CR3Filter[7] in IA32_RTIT_CTL (MSR 0570H) set to 1 both before the VM Entry and after, the new value of CR3 is not compared with IA32_RTIT_CR3_MATCH (MSR 0572H).",
        "implication": " The Intel PT (Processor Trace) CR3 filtering mechanism may continue to generate packets despite a mismatching CR3 value, or may fail to generate packets despite a matching CR3, as a result of an incorrect value of IA32_RTIT_STATUS.ContextEn[1] (MSR 0571H) that results from the failure to re-evaluate the CR3 match on VM entry.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Display Slowness May be Observed Under Certain Display Commands Scenario",
        "problem": "Back-to-back accesses to the VGA register ports (I/O addresses 0x3C2, 0x3CE, 0x3CF) will experience higher than expected latency.",
        "implication": "Due to this erratum, the processor may redraw the screen slowly when in VGA mode.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "CPUID TLB Associativity Information is Inaccurate",
        "problem": " CPUID leaf 2 (EAX=02H) TLB information inaccurately reports that the shared 2nd- Level TLB is 6-way set associative (value C3H), although it is 12-way set associative. Other information reported by CPUID leaf 2 is accurate.",
        "implication": " Software that uses CPUID shared 2nd-level TLB associativity information for value C3H may operate incorrectly. Intel has not observed this erratum to impact the operation of any commercially available software.",
        "workaround": "None identified. Software should ignore the shared 2nd-Level TLB associativity information reported by CPUID for the affected processors.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor Graphics May Render Incorrectly or May Hang Following Warm Reset With Package C8 Disabled",
        "problem": "Processor Graphics may not properly restore internal configuration after warm reset when package C8 is disabled.",
        "implication": "Due to this erratum Processor Graphics may render incorrectly or hang on warm reset.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Short Loops Which Use AH/BH/CH/DH Registers May Cause Unpredictable System Behavior",
        "problem": " Under complex micro-architectural conditions, short loops of fewer than 64 instructions that use AH, BH, CH or DH registers as well as their corresponding wider register (e.g. RAX, EAX or AX for AH) may cause unpredictable system behavior. This can only happen when both logical processors on the same physical processor are active.",
        "implication": "Due to this erratum, the system may experience unpredictable system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Unpredictable System Behavior May Occur in DDR4 Multi-Rank System",
        "problem": "Due to incorrect configuration of DDR4 ODT by BIOS, it is possible for a multi-rank system to violate section 4.27 of the DDR4 JEDEC spec revision JESED79-4A.",
        "implication": "Due to this erratum, complex microarchitectural conditions may result in unpredictable system behavior",
        "workaround": "A BIOS workaround has been identified. Please refer to Silicon Initialization version 2.1.0 or later and release notes",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang on Complex Sequence of Conditions",
        "problem": " A complex set of architectural and micro-architectural conditions may lead to a processor hang with an internal timeout error (MCACOD 0400H) logged into IA32_MCi_STATUS. When both logical processors in a core are active, this erratum will not occur unless there is no store on one of the logical processors for more than 10 seconds.",
        "implication": "This erratum may result in a processor hang. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None Identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae SGX Vulnerability May Impact Enclave Security",
        "problem": " There is a vulnerability that may allow a malicious party to impact the security of an SGX (Intel\u00ae Software Guard Extensions) enclave. Exploitation of the vulnerability requires the malicious party to modify BIOS code.",
        "implication": "Malicious Software may be able to modify enclave data or code.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Masked Bytes in a Vector Masked Store Instructions May Cause Write Back of a Cache Line",
        "problem": " Vector masked store instructions to WB (write-back) memory-type that cross cache lines may lead to CPU writing back cached data even for cache lines where all of the bytes are masked",
        "implication": " The processor may generate writes of un-modified data. This can affect MMIO (Memory Mapped IO) or non-coherent agents in the following ways: 1. For MMIO range that is mapped as WB memory type, this erratum may lead to MCE (Machine Check Exception) due to writing back data into the MMIO space. This applies only to cross page vector masked stores where one of the pages is in MMIO range. 2. If the CPU cached data is stale, for example in the case of memory written directly by a non-coherent agent (agent that uses non-coherent writes), this erratum may lead to writing back stale cached data even if these bytes are masked",
        "workaround": " Platforms should not map MMIO memory space or non-coherent device memory space as WB memory. If WB is used for MMIO range, software or VMM should not map such MMIO page adjacent to a regular WB page (adjacent on the linear address space, before or after the IO page). Memory that may be written by non-coherent agents should be separated by at least 64 bytes from regular memory used for other purposes (on the linear address space)",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "WRMSR to IA32_BIOS_UPDT_TRIG Concurrent With an SMX SENTER/SEXIT May Result in a System Hang",
        "problem": " Performing WRMSR to IA32_BIOS_UPDT_TRIG (MSR 79H) on a logical processor while another logical processor is executing an SMX (Safer Mode Extensions) SENTER/SEXIT operation (GETSEC[SENTER] or GETSEC[SEXIT] instruction) may cause the processor to hang.",
        "implication": "When this erratum occurs, the system will hang. Intel has not observed this erratum with any commercially available system.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Use of VMASKMOV to Store When Using EPT May Fail",
        "problem": " Use of VMASKMOV instructions to store data that splits over two pages, when the instruction resides on the first page may cause a hang if EPT (Extended Page Tables) is in use, and the store to the second page requires setting the A/D bits in the EPT entry.",
        "implication": "Due to this erratum, the CPU may hang on the execution of VMASKMOV.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Writing Non-Zero Values to Read Only Fields in IA32_THERM_STATUS MSR May Cause #GP",
        "problem": "IA32_THERM_STATUS MSR (19CH) includes read-only (RO) fields as well as writable fields. Writing a non-zero value to any of the read-only fields may cause a #GP.",
        "implication": "Due to this erratum, software that reads the IA32_THERM_STATUS MSR, modifies some of the writable fields, and attempts to write the MSR back may #GP.",
        "workaround": "Software should clear all read-only fields before writing to this MSR",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "SGX ENCLS[EINIT] May Not Signal an Error For an Incorrectly Formatted SIGSTRUCT Input",
        "problem": " The ENCLS[EINIT] instruction leaf may not signal an error on a specific combination of SIGSTRUCT values even though the signature does not fully comply with RSA signature specifications",
        "implication": " When this erratum occurs, ENCLS[EINIT] instruction leaf may pass the checks although the SIGSTUCT signature doesn\u2019t fully comply with RSA signature specifications. This erratum doesn\u2019t compromise the security of SGX and does not impact normal usage of SGX.",
        "workaround": "None identified. Software is not expected to be impacted by this erratum.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Branch Instruction Address May be Incorrectly Reported on TSX Abort When Using MPX",
        "problem": " When using Intel\u00ae Memory Protection Extensions (MPX), an Intel\u00ae Transactional Synchronization Extensions (TSX) transaction abort will occur in case of legacy branch (that causes bounds registers INIT) when at least one MPX bounds register was in a NON-INIT state. On such an abort, the branch Instruction address should be reported in the FROM_IP field in the Last Branch Records (LBR), Branch Trace Store (BTS) and Branch Trace Message (BTM) as well as in the Flow Update Packets (FUP) source IP address for Processor Trace (PT). Due to this erratum, the FROM_IP field in LBR/BTS/BTM, as well as the Flow Update Packets (FUP) source IP address that corresponds to the TSX abort, may point to the preceding instruction.",
        "implication": "Software that relies on the accuracy of the FROM_IP field / FUP source IP address and uses TSX may operate incorrectly when MPX is used.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Setting Performance Monitoring IA32_PERF_GLOBAL_STATUS_SET MSR Bit 63 May Not #GP",
        "problem": "Bit 63 of IA32_PERF_GLOBAL_STATUS_SET MSR (391H) is reserved. Due to this erratum, setting the bit will not result in General Protection Fault (#GP).",
        "implication": "Software that attempts to set bit 63 of IA32_PERF_GLOBAL_STATUS_SET MSR does not generate #GP. There are no other system implications to this behavior",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Hitting a Code Breakpoint Inside a SGX Debug Enclave May Cause The Processor to Hang",
        "problem": " Under complex microarchitecture conditions, the processor may hang when hitting a code breakpoint inside an SGX (Intel\u00ae Software Guard Extensions) debug enclave. This may happen only after opt-out entry into an SGX debug enclave and when the execution would set the accessed bit (A-bit) in any level of the paging or EPT (extended page table) structures used to map the code page, and when both logical processors on the same physical core are active.",
        "implication": "Due to this erratum, the processor may hang while debugging an SGX debug enclave.",
        "workaround": "None identified.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring ASCI Status Bit May be Inaccurate",
        "problem": " The ASCI (Anti Side-Channel Interference) field in IA32_PERF_GLOBAL_STATUS (MSR 38EH, bit 60) should be set when the count in any of the configured performance counters (i.e. IA32_PMCx or IA32_FIXED_CTRx) was altered due to direct or indirect operation of Intel\u00ae SGX. Due to this erratum, the ASCI bit may not be set properly when IA32_FIXED_CTR0 is used.",
        "implication": "Software that relies on the value of the ASCI bit in IA32_PERF_GLOBAL_STATUS for its operation may not operate correctly when IA32_FIXED_CTR0 is used.",
        "workaround": "None identified",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT CYC Packets Can be Dropped When Immediately Preceding PSB",
        "problem": " Due to a rare microarchitectural condition, generation of an Intel\u00ae PT (Processor Trace) PSB (Packet Stream Boundary) packet can cause a single CYC (Cycle Count) packet, possibly along with an associated MTC (Mini Time Counter) packet, to be dropped",
        "implication": "An Intel\u00ae PT decoder that is using CYCs to track time or frequency will get an improper value due to the lost CYC packet",
        "workaround": " If an Intel\u00ae PT decoder is using CYCs and MTCs to track frequency, and either the first MTC following a PSB shows that an MTC was dropped, or the CYC value appears to be 4095 cycles short of what is expected, the CYC value associated with that MTC should not be used. The decoder should wait for the next MTC before measuring frequency again.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT VM-entry Indication Depends on The Incorrect VMCS Control Field",
        "problem": " An Intel\u00ae Processor Trace PIP (Paging Information Packet), which includes indication of entry into non-root operation, will be generated on VM-entry as long as the \u201cConceal VMX in Intel\u00ae PT\u201d field (bit 19) in Secondary Execution Control register (IA32_VMX_PROCBASED_CTLS2, MSR 048BH) is clear. This diverges from expected behavior, since this PIP should instead be generated only with a zero value of the \u201cConceal VMX entries from Intel\u00ae PT\u201d field (Bit 17) in the Entry Control register (IA32_VMX_ENTRY_CTLS MSR 0484H).",
        "implication": "An Intel\u00ae PT trace may incorrectly expose entries to non-root operation.",
        "workaround": " A VMM (virtual machine monitor) should always set both the \u201cConceal VMX entries from Intel\u00ae PT\u201d field in the Entry Control register and the \u201cConceal VMX in Intel\u00ae PT\u201d in the Secondary Execution Control register to the same value.",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT May Drop All Packets After an Internal Buffer Overflow",
        "problem": " Due to a rare microarchitectural condition, an Intel\u00ae PT (Processor Trace) ToPA (Table of Physical Addresses) entry transition can cause an internal buffer overflow that may result in all trace packets, including the OVF (Overflow) packet, being dropped.",
        "implication": " When this erratum occurs, all trace data will be lost until either PT is disabled and re- enabled via IA32_RTIT_CTL.TraceEn [bit 0] (MSR 0570H) or the processor enters and exits a C6 or deeper C state.",
        "workaround": "None identified",
        "status": "For the stepping\u2019s affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT ToPA Tables Read From Non-Cacheable Memory During an Intel\u00ae TSX Transaction May Lead to Processor Hang",
        "problem": " If an Intel\u00ae PT (Processor Trace) ToPA (Table of Physical Addresses) table is placed in UC (Uncacheable) or USWC (Uncacheable Speculative Write Combining) memory, and a ToPA output region is filled during an Intel\u00ae TSX (Transaction Synchronization) transaction, the resulting ToPA table read may cause a processor hang.",
        "implication": "Placing Intel\u00ae PT ToPA tables in non-cacheable memory when Intel\u00ae TSX is in use may lead to a processor hang.",
        "workaround": "None identified. Intel PT ToPA should reside in WB memory and should not be written within a Transactional Region.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performing an XACQUIRE to an Intel\u00ae PT ToPA Table May Lead to Processor Hang",
        "problem": " If an XACQUIRE lock is performed to the address of an Intel\u00ae PT (Processor Trace) ToPA (Table of Physical Addresses) table, and that table is later read by the CPU during the HLE (Hardware Lock Elision) transaction, the processor may hang.",
        "implication": "Accessing ToPA tables with XACQUIRE may result in a processor hang.",
        "workaround": " None identified. Software should not access ToPA tables using XACQUIRE. An OS or hypervisor may wish to ensure all application or guest writes to ToPA tables to take page faults or EPT violations.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "ZMM/YMM Registers May Contain Incorrect Values",
        "problem": "Under complex microarchitectural conditions values stored in ZMM and YMM registers may be incorrect.",
        "implication": "Due to this erratum, YMM and ZMM registers may contain an incorrect value. Intel\u00ae has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "When Virtualization Exceptions are Enabled, EPT Violations May Generate Erroneous Virtualization Exceptions",
        "problem": " An access to a GPA (guest-physical address) may cause an EPT-violation VM exit. When the \u201cEPT-violation #VE\u201d VM-execution control is 1, an EPT violation may cause a #VE (virtualization exception) instead of a VM exit. Due to this erratum, an EPT violation may erroneously cause a #VE when the \u201csuppress #VE\u201d bit is set in the EPT paging-structure entry used to map the GPA being accessed. This erratum does not apply when the \u201cEPT-violation #VE\u201d VM-execution control is 0 or when delivering an event through the IDT. This erratum applies only when the GPA in CR3 is used to access the root of the guest paging-structure hierarchy (or, with PAE paging, when the GPA in a PDPTE is used to access a page directory).",
        "implication": " When using PAE paging mode, an EPT violation that should cause an VMexit in the VMM may instead cause a VE# in the guest. In other paging modes, in addition to delivery of the erroneous #VE, the #VE may itself cause an EPT violation, but this EPT violation will be correctly delivered to the VMM.",
        "workaround": "A VMM may support an interface that guest software can invoke with the VMCALL instruction when it detects an erroneous #VE.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang With Multiple Pending Posted Writes When Using Direct MMIO Write Access Model",
        "problem": " Under complex conditions, if a device fails to consume at least 8 posted writes within 5us and its device driver uses a Direct MMIO write access software model and Enhanced Intel\u00ae Speed Step\u00ae Technology is enabled, the system may hang with an internal timer error machine check with error code IA32_MCi_STATUS[15:0] = 0x0400.",
        "implication": ": Due to this erratum, the system may hang. Intel has only observed this erratum to occur with a direct MMIO write access model. Implication Due to this erratum, the system may hang. Intel has only observed this erratum to occur with a direct MMIO write access model.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Performance Monitoring General Purpose Counter 3 May Contain Unexpected Values",
        "problem": "When Restricted Transactional Memory (RTM) is supported (CPUID.07H.EBX.RTM [bit 11] = 1) and when TSX_FORCE_ABORT=0, Performance Monitor Unit (PMU) general purpose counter 3 (IA32_PMC3, MSR C4H and IA32_A_PMC3, MSR 4C4H) may contain unexpected values. Further, IA32_PREFEVTSEL3 (MSR 189H) and IA32_PERF_GLOBAL_CTRL[3] (MSR 38FH) may contain unexpected configuration values; which may also affect IA32_PERF_GLOBAL_INUSE[3] (MSR 392H).",
        "implication": "Due to this erratum, software that uses PMU general purposes counter 3 may read an unexpected count and configuration.",
        "workaround": "Software can avoid this erratum by writing 1 to bit 0 of TSX_FORCE_ABORT (MSR 10FH) which will cause all Restricted Transactional Memory (RTM) transactions to abort with EAX code 0. TSX_FORCE_ABORT MSR is available when CPUID.07H.EDX[bit 13]=1.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unexpected Uncorrected Machine Check Errors May Be Reported",
        "problem": "In rare micro-architectural conditions, the processor may report unexpected machine check errors. When this erratum occurs, IA32_MC0_STATUS (MSR 401H) will have the valid bit set (bit 63), the uncorrected error bit set (bit 61), a model specific error code of 03H (bits [31:16]) and an MCA error code of 05H (bits [15:0]).",
        "implication": "Due to this erratum, software may observe unexpected machine check exceptions.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Intel\u00ae PT Trace May Drop Second Byte of CYC Packet",
        "problem": "Due to a rare microarchitectural condition, the second byte of a 2-byte CYC (Cycle Count) packet may be dropped without an OVF (Overflow) packet.",
        "implication": "A trace decoder may signal a decode error due to the lost trace byte.",
        "workaround": "None identified. A mitigation is available for this erratum. If a decoder encounters a multi-byte CYC packet where the second byte has bit 0 (Ext) set to 1, it should assume that 4095 cycles have passed since the prior CYC packet, and it should ignore the first byte of the CYC and treat the second byte as the start of a new packet.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Executing Some Instructions May Cause Unpredictable Behavior",
        "problem": "Under complex micro-architectural conditions, executing an X87, AVX, or integer divide instruction may result in unpredictable system behavior.",
        "implication": "When this erratum occurs, the system may behave unpredictably. Intel has not observed this erratum with any commercially available software.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect Execution of Internal Branch Instructions May Lead to Unpredictable System Behavior",
        "problem": "Under complex microarchitecture conditions, incorrect execution of internal branch instructions that span multiple 64 byte boundaries (cross cache line), may result in unpredictable system behavior including unexpected #PF (page faults) or #UD (Invalid Opcode) faults due to incorrect execution of internal branch operations.",
        "implication": "When this erratum occurs, the system may exhibit unpredictable system behavior including unexpected #PF (page faults) or #UD (Invalid Opcode) faults.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Behave Unpredictably on Complex Sequence of Conditions Which Involve Branches That Cross 64 Byte Boundaries",
        "problem": "Under complex micro-architectural conditions involving branch instructions bytes that span multiple 64 byte boundaries (cross cache line), unpredictable system behavior may occur.",
        "implication": "When this erratum occurs, the system may behave unpredictably.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "A PMI That Freezes LBRs Can Cause a Duplicate Entry in TOS",
        "problem": "If a PMI (Performance Monitor Interrupt) is taken while LBRs (Last Branch Records) are enabled and IA32_DEBUGCTL.FREEZE_LBRS_ON_PMI[bit 11]=1 (MSR 01D9H), a taken branch that performs an LBR update near the time of the PMI may instead record a duplicate of the prior entry into the TOS (Top of Stack) entry.",
        "implication": "Software may unexpectedly observe the appearance of back-to-back execution of the same branch.",
        "workaround": "In general, software can ignore the TOS entry if it matches the TOS-1 entry. Note that certain code sequences with no intervening taken branches can legitimately insert a valid duplicate LBR record in the TOS entry.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "SGX Key Confidentiality May be Compromised",
        "problem": "Under complex micro-architectural conditions, it may be possible for the value of SGX keys to be inferred using speculative execution side channel methods.",
        "implication": "If exposed, such keys could allow an attacker to access SGX enclave data. Processors that do not support Hyper-Threading are not affected by this issue.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Unexpected Page Faults in Guest Virtualization Environment",
        "problem": "Under complex micro-architectural conditions, a virtualized guest could observe unpredictable system behavior.",
        "implication": "When this erratum occurs, systems operating in a virtualization environment may exhibit unexpected page faults (double faults) leading to guest OS shutdown.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "PEG PCIe Link May Fail to Link When Resuming From PKG-C8",
        "problem": "PEG IO registers may not be restored after resuming from PKG-C8. Alternate problem: The processor's PCIe root port configuration registers may not be properly restored when resuming from PKG-C8.",
        "implication": "PEG PCIe may fail to link when resuming from PKG-C8. Note: PCIe add-in cards that do not support the L2 state do not encounter this issue as they do not allow the platform to enter PKG-C8. Alternate problem: The processor PCIe root port may fail to establish a link when resuming from PKG-C8.",
        "workaround": "A fix for this erratum is available in microcode. Please see Microcode Update Tables in this document.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Incorrect ECC Errors Reporting Following Entry to PKG-C7",
        "problem": "The Correctable and Uncorrectable ECC error address reported in ECCERRLOG0/1 (MCHBAR Offset 4048h/404Ch) may be overwritten after a PKG-C7 event.",
        "implication": "DDR Correctable and Uncorrectable ECC errors reported in ECCERRLOG0/1 (MCHBAR Offset 4048h/404Ch) may report an incorrect error address after resuming from PKG- C7.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Display VT-d TLB invalidation during disabling of VTd Translations May Cause Display Corruption or Flickering",
        "problem": "If a hypervisor/VMM has enabled VTd translations for the Gfx IOMMU (TE=1 in VTd specification) and then switches the Gfx IOMMU to disable translations (TE=0) with DMA remapping enabled in the BIOS, the display VTd TLB may be invalidated without waiting for any pending memory requests to complete.",
        "implication": "Due to this erratum, momentary display corruption or flickering may occur during boot.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang if Warm Reset Triggers During BIOS Initialization",
        "problem": "Under complex micro-architectural conditions, when the processor receives a warm reset during BIOS initialization, the processor may hang with a machine check error reported in IA32_MCi_STATUS, with MCACOD (bits [15:0]) value of 0400H, and MSCOD (bits [31:16]) value of 0080H.",
        "implication": "Due to this erratum, the processor may hang. Intel has only observed this erratum in a synthetic test environment.",
        "workaround": "None identified.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "MD_CLEAR Operations May Not Properly Overwrite All Buffers",
        "problem": "Problem: On processors that enumerate the MD_CLEAR CPUID bit (CPUID.(EAX=7H,ECX=0):EDX[MD_CLEAR=10] ), L1D_FLUSH, RSM, and VERW memory instructions should overwrite affected buffers with constant data. Under complex micro-architectural conditions, these instructions may not overwrite all affected buffers.",
        "implication": "Due to this erratum, the use of MD_CLEAR operations to prevent MDS (Microarchitectural Data Sampling) or TAA (Intel\u00ae Transactional Synchronization Extensions Asynchronous Abort) side-channel methods from revealing previously accessed data may not be fully effective.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, see the Summary Table of Changes."
    },
    {
        "title": "System May Hang During Display Power Cycles",
        "problem": "When the display is turned on after being shutoff to save power or when the display is exiting PSR (Panel Self Refresh) mode, the system may hang.",
        "implication": "When this erratum occurs, the system may hang.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "PECI May Not be Functional After Package C10 Resume",
        "problem": "When resuming from Package C10, PECI may fail to function properly.",
        "implication": "When this erratum occurs, the PECI does not respond to any command.",
        "workaround": "It is possible for BIOS to contain processor configuration data and code changes as a workaround for this erratum.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Processor May Exceed VCCCore ICCMAX During Multi-core Turbo",
        "problem": "Due to this erratum, the maximum ring frequency limit is incorrectly configured to be 100MHz higher than intended.",
        "implication": "VCCCore ICCMAX may be temporarily exceeded when all the cores are executing at a Turbo frequency.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Using Different Vendors For 2400 MHz DDR4 UDIMMs May Cause Correctable Errors or a System Hang",
        "problem": "When using 2400 MHz DDR4 UDIMMs from different vendors within the same channel, a higher rate of correctable errors may occur, or the system may hang.",
        "implication": "Due to this erratum, reported correctable error counts may increase or the system may hang.",
        "workaround": "None identified. Use a single vendor for 2400 MHz UDIMMs",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Processor Graphics May Display Incorrectly When EDRAM is Enabled",
        "problem": "During high display bandwidth scenarios with EDRAM is enabled, the display engine may generate display artifacts.",
        "implication": "Due to this erratum, the display engine may generate display artifacts.",
        "workaround": "It is possible for BIOS to contain processor configuration data and code changes as a workaround for this erratum. Refer to latest version of the Kaby Lake Silicon initialization Code version 2.3.0 or later and/or release notes. Additionally, an updated Intel \u00ae Graphics Driver may be needed for this workaround. Refer to Intel \u00ae Graphics Driver versions 15.45.4678, 15.46.4667 and release notes. The Graphics driver portion of the workaround must be activated and may impact overall Graphics performance. Contact the Intel representative for more information.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Potential Partial Trace Data Loss in Intel \u00ae Trace Hub ODLA When Storing to Memory",
        "problem": "When Intel \u00ae Trace Hub\u2019s ODLA (On-Die Logic Analyzer) is configured to trace to memory, under complex micro architectural conditions, the trace may lose a timestamp.",
        "implication": "Some ODLA trace data may be lost. This erratum does not affect other trace data sources. Typically, lost trace data will be displayed as \u201cOVERFLOW.\u201d Subsequent timestamps will allow the trace decoder to resume tracing. Intel has not observed this erratum in commercially available software.",
        "workaround": "None identified. For a particular workload, changing the memory buffer size or disabling deep compression may eliminate the micro architectural condition that causes the erratum.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Display Artifacts May be Seen with High Bandwidth, Multiple Display Configurations",
        "problem": "With high bandwidth, multiple display configurations, display engine underruns may occur.",
        "implication": "Due to this erratum, the display engine may generate display artifacts.",
        "workaround": "This erratum can be worked around by Intel Graphics Driver revisions of 15.46.4.64.4749 or later.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Processor May Incorrectly Assert PROCHOT During PkgC10",
        "problem": "If the PROCHOT# pin is configured as an output-only signal, PROCHOT# may incorrectly be asserted during PkgC10.",
        "implication": "When this erratum occurs, PROCHOT# may be incorrectly asserted. This can lead to the system fan unnecessarily turning on during PkgC10 or other unexpected platform behaviors.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "eDP 1.4 Ports with Link Rate 2.16 or 4.32 GHz May Not Resume from Low Power Graphics or System States.",
        "problem": "When the Embedded Display Port is operating with link rates 2.16 GHz or 4.32 GHz, the port may not resume from DC5, DC6 display low power states or S3, S4, or S5 system states. This erratum only affects systems with eDP 1.4-compliant display panels.",
        "implication": "Due to this erratum, the system may hang when resuming from system idle or S3/4/5 states.",
        "workaround": "The graphics device driver can contain a workaround for this erratum; Intel Graphics Driver revisions 15.49 PR1 or later contains this workaround.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Processor May Hang When Executing Code in an HLE Transaction Region",
        "problem": "Under certain conditions, if the processor acquires an HLE (Hardware Lock Elision) lock via the XACQUIRE instruction in the Host Physical Address range between 40000000H and 403FFFFFH, it may hang with an internal timeout error (MCACOD 0400H) logged into IA32_MCi_STATUS.",
        "implication": "Due to this erratum, the processor may hang after acquiring a lock via XACQUIRE.",
        "workaround": "BIOS can reserve the host physical address ranges of 40000000H and 403FFFFFH (e.g. map it as UC/MMIO). Alternatively, the VMM (Virtual Machine Monitor) can reserve that address range so no guest can use it. In non-virtualized systems, the OS can reserve that memory space.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Overflow Flag in IA32_MC0_STATUS MSR May be Incorrectly Set",
        "problem": "Under complex microarchitectural conditions, a single internal parity error seen in IA32_MC0_STATUS MSR (401h) with MCACOD (bits 15:0) value of 5h and MSCOD (bits 31:16) value of 7h, may set the overflow flag (bit 62) in the same MSR.",
        "implication": "Due to this erratum, the IA32_MC0_STATUS overflow flag may be set after a single parity error. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Rare Internal Timing Conditions May Lead to Sporadic Hangs During Graphics VTd Flows",
        "problem": "When both SGX and Graphics RC6 features are enabled, under complex microarchitectural conditions, VTd operations towards the Gfx IOMMU may lead to unexpected system behavior.",
        "implication": "Due to this erratum, unexpected system behavior will occur.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "VERR Instruction Inside VM-entry May Cause DR6 to Contain Incorrect Values",
        "problem": "Under complex microarchitectural conditions, a VERR instruction that follows a VM-entry with a guest state indicating MOV SS blocking (bit 1 in the Interruptibility state) and at least one of B3-B0 bits set (bits 3:0 in the pending debug exception), may lead to incorrect values in DR6.",
        "implication": "Due to this erratum, DR6 may contain incorrect values. Intel has not observed this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to Summary Table of Changes."
    },
    {
        "title": "Using Different Vendors For 2666 MHz DDR4 UDIMMs May Cause \nCorrectable Errors or a System Hang",
        "problem": "When using 2666 MHz DDR4 UDIMMs from different vendors or mixing single rank \nand dual rank DIMMs, within the same channel, a higher rate of correctable errors \nmay occur or the system may hang.",
        "implication": "Due to this erratum, reported correctable error counts may increase or the system \nmay hang.",
        "workaround": "None identified. Use a single vendor and do not mix single rank and dual rank for 2666 MHz UDIMMs.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Reads From IA32_SGXLEPUBKEYHASH  MSRs Return Values in Incorrect \nOrder",
        "problem": "The IA32_SGXLEPUBKEYHASH [0,1,2,3] (8CH, 8DH, 8EH, 8FH) MSRs allow software \nto select an alternative SGX Launch Enclave provider signing key. Each of 4 MSRs is \nused to specify a 64-bit part of the 256 bit SGX Launch Enclave signing key hash, \nwhere the lower 32 bits of each 64-bit component are to be provided in the EAX \nregister, and the higher 32 bits of each 64-bit component are to be provided in the \nEDX register. Due to this erratum, reads from IA32_SGXLEPUBKEYHASH MSRs will \nreturn the lower 32 bits of the 64-bit component in the EDX register, and the higher \n32 bits of the 64-bit component in the EAX register.",
        "implication": "Software may incorrectly identify the currently active SGX Launch enclave provider \non the platform.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "The Processor May Fail to Boot During DDR4 Memory Training",
        "problem": "The BIOS may fail to properly configure the required DQ/DQS timing parameters for \ncertain DDR4 DIMMs with large length deltas between byte lanes (long fly-by \ntopology).",
        "implication": "An incorrect timing parameter value may cause DDR to mis-sample incoming data \nduring write operations, leading to memory training failures and subsequent system \nboot hangs. Board designs with DDR4 DIMMs short delta lengths between byte lanes \n(short fly-by topology) are not impacted.",
        "workaround": "-S/H with CNP NDA Workaround: A BIOS workaround has been identified. Refer to\nBIOS Package 118.19 or later and release notes.\n-S with KBP NDA Workaround: A BIOS workaround has been identified. Refer to BIOS\nPackage 138.2 or later and release notes.\nPublic Workaround: A BIOS code change has been identified and may be \nimplemented as a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "eDRAM May Generate Errors or Other Unexpected System Behavior",
        "problem": "VCCSA eDRAM voltage level is incorrectly configured to a lower-than-intended Vmin \nvalue.",
        "implication": "Due to this erratum, the eDRAM may generate correctable or uncorrectable errors or \nmay otherwise exhibit unexpected system behavior.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Certain DDR4 Memory Configurations May Cause Unpredictable System \nBehavior",
        "problem": "When using SODIMM or UDIMM in DDR4 2N CMD timing mode, the processor may \nincorrectly de-emphasize the first CMD bit transmitted.",
        "implication": "When this erratum occurs, memory commands may not complete, potentially leading \nto system hang or unpredictable system behavior.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround \nfor this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Last Level Cache/ Ring Maximum Frequency May Be Reported Incorrectly",
        "problem": "LLC (Last Level Cache) /Ring frequency limit register MSR 0x620 \n(UNCORE_RATIO_LIMIT) is incorrectly set to a higher frequency",
        "implication": "Due to this erratum, software may report incorrect ring maximum frequency.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "The Processor May Hang Or Exhibit Display Flickering",
        "problem": "When the processor is paired with a PCH that does not support PECI over eSPI, the \nprocessor may hang or exhibit display flickering.",
        "implication": "Due to this erratum, the processor hangs or exhibits a display flickering.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang During PKG-C8/C9/C10 Exit",
        "problem": "Due to marginal voltage configuration of internal restore SRAM, the processor may \nhang.",
        "implication": "When this erratum occurs, the processor May Hang. Intel\u00ae has only observed this \nerratum in synthetic test conditions.",
        "workaround": "None identified. A trace decoder needs to skip ahead to the next TIP or FUP packet to \ndetermine the current IP.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang at High Temperature With A High-Throughput Graphics \nWorkload",
        "problem": "In systems that support Single Core Turbo frequencies up to 4.7 GHz, the Ring \nfrequency may operate at 4.4GHz.  In this condition, if the processor is operating \nwith a high-throughput graphics workload and the processor is operating near \nmaximum junction temperature, the processor may hang.",
        "implication": "Due to this erratum the processor may hang. Intel\u00ae has only observed this erratum \nunder synthetic test conditions.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Queued Invalidation Is Prevented When VTd Is Disabled",
        "problem": "While both the DMA-Remapping and Interrupt-Remapping capabilities are disabled in \nthe Default VTd Engine, then Queued Invalidation is incorrectly disabled.",
        "implication": "Due to this erratum, unexpected system behavior may occur.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Processor DDR VREF Signals May Briefly Exceed JEDEC Specifications When Entering S3 State",
        "problem": "Voltage glitch of up to 200 mV on the VREF signal lasting for about 1 mS may be observed, when entering System S3 state. This violates the JEDEC DDR specifications.",
        "implication": "Intel has not observed this erratum to impact the operation of any commercially available system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Instructions Fetch #GP After RSM During Intel \u00ae PT May Push Incorrect RFLAGS Value on Stack",
        "problem": "If Intel \u00ae Processor Trace (Intel \u00ae PT) is enabled, a General Protection Fault (#GP) caused by the instruction fetch immediately following execution of an RSM instruction may push an incorrect value for RFLAGS onto the stack.",
        "implication": "Software that relies on RFLAGS value pushed on the stack under the conditions described may not work properly.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Using Different Vendors For DDR4 UDIMMs 2400 MHz or Above May Cause Correctable Errors or a System Hang",
        "problem": "When using DDR4 UDIMMs 2400 MHz or above from different vendors or mixing single rank and dual rank DIMMs within the same channel, a higher rate of correctable errors may occur or the system may hang.",
        "implication": "Due to this erratum, reported correctable error counts may increase or the system may hang.",
        "workaround": "None identified. Use a single vendor and do not mix single rank and dual rank for UDIMMs 2400 MHz or above.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Incorrect CPUID Reporting For Intel \u00ae Turbo Boost Max Technology 3.0 Capability",
        "problem": "The CPUID instruction in leaf 06h doesn\u2019t report Intel \u00ae Turbo Boost Max Technology 3.0 capability in EAX[14].",
        "implication": "Due to this Erratum software cannot detect if Intel \u00ae Turbo Boost Max Technology 3.0 capability is supported.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "VTd DMA Remapping Disable in Gfx IOMMU May Cause Display Artifacts or Flickering",
        "problem": "If system software enables VTd translations for the Gfx IOMMU (TE=1) and then switches the Gfx IOMMU to disable translations (TE=0) while the display is enabled, display memory underrun condition can occur.",
        "implication": "Due to this erratum, momentary display corruption may occur. Intel has only observed this issue when BIOS pre-boot DMA protection was enabled for Gfx IOMMU.",
        "workaround": "A BIOS code change has been identified and may be implemented as a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Processor May Return an Incorrect Brand String Value",
        "problem": "Intel \u00ae Pentium \u00ae Gold G6400TE processor may return an incorrect brand string value.",
        "implication": "Software that relies upon the brand string may not operate as expected.",
        "workaround": "It is possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer the Summary Table of Changes."
    },
    {
        "title": "Placing Page Table Information in the APIC-Access Page May Lead to \nUnexpected Page Faults While Performing Enclave Accesses",
        "problem": "Guest-physical access using a guest-physical address that translates to an address \non the APIC-access page (as identified by the APIC-access address field in the \nVMCS) should cause an APIC-access VM exit. This includes page table information \naccesses done as part of page translation (page walks). Due to this erratum placing \npage table information in the APIC-access page may result in a page fault instead of \nVM exit when the page translation is done as part of an enclave access.",
        "implication": "Software that places page table information in the APIC access page may get page \nfaults on executing enclave accesses, instead of exiting to the VMM (Virtual-Machine \nMonitor). Intel has not observed this erratum with any commercially available \nsoftware.",
        "workaround": "Software should not place page table information in the APIC access page.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "REP MOVSB Instruction To or From a Non-flat Segment May Cause \nUnpredictable System Behavior",
        "problem": "Under complex microarchitectural conditions, using a REP MOVSB instruction in \nwhich at least one of the operands (destination or source) of the instruction is in a \nnon-flat segment mode, might cause unpredictable system behavior.",
        "implication": "Due to this erratum, unpredictable system behavior may occur. Intel has not \nobserved this erratum with any commercially available software.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Usage of Bit 55 of IA32_TSC_DEADLINE MSR May Cause Spurious Timer \nInterrupt",
        "problem": "When using the APIC timer in Time Stamp Counter Deadline (TSC-deadline) mode, if \nthe most significant set bit in the written value to the TSC-Deadline MSR is bit 55, \nthe processor may generate a spurious timer interrupt.",
        "implication": "When this erratum occurs, a spurious timer interrupt may occur causing \nunpredictable system behavior. Intel has not observed this erratum with any \ncommercially available software.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Wrong Page Access Semantics May be Reported When \nIntel\u00ae SGX ENCLU[EMODPE] Instruction Generates Page Fault (#PF) \nException",
        "problem": "When Intel\u00ae SGX extends an Enclave Page Cache (EPC) via the page \npermissions instruction (ENCLU[EMODPE]) and generates a Page Fault (#PF), even \nthough the page permissions instruction access is a read access to the target page, \nthe Page Fault Error Code (#PF's PFEC) will indicate that the fault occurred on a \nwrite (PFEC.W bit will be set) instead.",
        "implication": "This erratum may impact debugging Intel\u00ae SGX enclaves software. Intel has not \nobserved this erratum with any commercially available software.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "IA32_RTIT_STATUS.FilterEn Bit Might Reflect a Previous Value",
        "problem": "Under complex microarchitectural conditions, reading the \nIA32_RTIT_STATUS.FilterEn bit (bit 0 in MSR 571h) after entering or exiting an RTIT \nregion might reflect a previous value instead of the current one.",
        "implication": "Due to this erratum, IA32_RTIT_STATUS.FilterEn bit might reflect a previous value. \nThis erratum has not been seen in any commercially available software.",
        "workaround": "Software should perform an LFENCE instruction prior to reading the \nIA32_RTIT_STATUS MSR to avoid this issue.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Time Stamp Counters May Contain a Shifted Time Value",
        "problem": "Under complex microarchitectural conditions, the processor's RDTSC and RDTSCP \ninstructions may report a shifted value. In these cases, the shift value will be larger \nthan a minute.",
        "implication": "Software may experience a non-monotonic time stamp counter, misalignment across \nthreads, or a spurious timer interrupt.",
        "workaround": "It is possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Unable to Transmit Modified Compliance Test Pattern at 2.5 GT/S or 5.0 \nGT/s Link Speeds",
        "problem": "The processor's PCIe port (Bus 0, Device 1, Function 0/1/2 or Bus 0, Device 6, \nFunction 0) does not transmit the Modified Compliance Test Pattern when in either \n2.5 GT/S or 5.0 GT/s link speeds.",
        "implication": "Due to this erratum, PCIe compliance testing may fail at 2.5 GT/S or 5.0 GT/s link \nspeeds when enabling the Modified Compliance Test Pattern.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "PCIe Root Ports May Fail Tx Differential Return Loss Compliance Test",
        "problem": "The processor\u2019s PCIe root ports may fail to meet the Tx Differential Return Loss \nCompliance Test\u2019s requirements as defined in PCIe Base Specification, version 4.0, \nsection 9.3.6.",
        "implication": "The processor may fail the Differential Return Loss compliance test. Intel has not \nobserved this erratum to cause any functional failures.",
        "workaround": "None identified",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "PEG10 PCIe Root Port May Report Incorrect Maximum Link Width",
        "problem": "When the PEG10 root port (Bus 0, Device 1, Function 0) is bifurcated, the port will \nincorrectly report Maximum Link Width (MLW) in the Link Capabilities register (Bus \n0, Device 1, Function 0, Offset 0Ch). The processor will always indicate the MLW of \nx16, rather than x8.",
        "implication": "Due to this erratum, software may expect the link to support x16 link widths, which \nthe port cannot do while bifurcated.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "DMI Link Failure During L1 Exit",
        "problem": "During S3/S4/S5 and/or S0ix cycles, DMI may fail to exit L1 in the time required.",
        "implication": "The system may hang with a machine check exception (MCACOD=2AH).",
        "workaround": "It is possible for a BIOS code change to workaround this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor Peg Ports 10,11, or 12 PCIe Link May Hang During \nS0ix/S3/S4/S5 Cycles",
        "problem": "During S0ix and/or S3/S4/S5 when processor exits a Package C-state, the PCIe link \nmay hang for Peg ports 10, 11, or 12.",
        "implication": "Due to this erratum, the PCIe link may hang with a machine check error \n(MCACOD=34H).",
        "workaround": "It is possible for a BIOS code change to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "System May Hang if Booted with TXT Disabled",
        "problem": "A system with TXT disabled may experience a hang during the boot process.",
        "implication": "Due to this erratum, the system may hang during boot.",
        "workaround": "It is possible for a BIOS code change to workaround this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Single Core Configurations May Hang on S3/S4 Resume",
        "problem": "When booting in a single core configuration, the system may hang when resuming \nfrom a S3/S4 or a warm reset.",
        "implication": "Due to this erratum, the system may hang.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "DMI Link May Hang During Package C State Exits",
        "problem": "When the processor exits Package C States, the DMI link may fail, showing \nRecoverySpeedReady (0x6C) in the DMI link status register (Base address \n0xFEDA0000 Offset : 0x2328, bits [31:24] will be 0x6C), leading to an Internal \nTimer Error Machine Check (IA32_MCi_STATUS.MCACOD=400H; bits 15:0).",
        "implication": "Due to this erratum, the DMI link may hang with a machine check error \n(MCACOD=400H).",
        "workaround": "It may be possible for a BIOS code change to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "System May Hang When Booting in Single Core Configuration",
        "problem": "When configured in single-core mode, the processor may issue non-posted \ntransactions during BIOS boot that may not complete.",
        "implication": "Due to this erratum, in single-core mode, the processor may hang during boot.",
        "workaround": "None identified. Platforms can use multi-core configurations to work around this \nerratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor May Generate Malformed TLP",
        "problem": "If the processor root port receives an FetchAdd, Swap, or CAS TLP (an atomic \noperation) that is erroneous, it should generate a UR completion to the downstream \nrequestor. If the TLP has an operand size greater than 4 bytes, the generated UR \ncompletion will report an operand size of 4 bytes, which will be interpreted as a \nmalformed transaction.",
        "implication": "When this erratum occurs, the processor may respond with a malformed transaction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "PCIe Link May Fail to Train Upon Exit From L1.2",
        "problem": "When the PCIe Link exits the L1.2 low-power link state, the link may fail to correctly \ntrain to L0.",
        "implication": "Due to this erratum, a PCIe link may incur unexpected link recovery events or it may \nenter a Link_Down state.",
        "workaround": "It may be possible for a BIOS code change to workaround this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Setting MISC_FEATURE_CONTROL.DISABLE_THREE_STRIKE_CNT Does Not \nPrevent The Three-strike Counter From Incrementing",
        "problem": "Setting MISC_FEATURE_CONTROL.DISABLE_THREE_STRIKE_CNT (bit 11 in MSR \n1A4h) does not prevent the three-strike counter from incrementing as documented; \ninstead, it only prevents the signaling of the three-strike event once the counter has \nexpired.",
        "implication": "Due to this erratum, software may be able to see the three-strike logged in the \nMC3_STATUS (MSR 40Dh, MCACOD = 400h [bits 15:0]) even when \nMISC_FEATURE_CONTROL.DISABLE_THREE_STRIKE_CNT is set.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor May Exceed Thermal Limits",
        "problem": "Under heavy workloads, the processor may not thermally throttle correctly due to \ntemperature gradients between the thermal sensor and other circuits.",
        "implication": "Due to this erratum, the system may hang or unpredictable system behavior may \noccur.",
        "workaround": "It may be possible for BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Writing Non-Zero Values to Read Only Fields in IA32_THERM_STATUS MSR \nMay Cause a #GP",
        "problem": "IA32_THERM_STATUS MSR (19CH) includes read-only (RO) fields as well as writable \nfields. Writing a non-zero value to any of the read-only fields may cause a #GP.",
        "implication": "Due to this erratum, software that reads the IA32_THERM_STATUS MSR, modifies \nsome of the writable fields, and attempts to write the MSR back may cause a #GP.",
        "workaround": "Software should clear all read-only fields before writing to this MSR.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Platform May Not Resume From G3/S3/S4/S5",
        "problem": "Transient noise on the CPU crystal clock differential signals (CPU_NSSC_DP and \nCPU_NSSC_ DN) when resuming from G3/S3/S4/S5 may prevent the platform from \nbooting.",
        "implication": "Due to this erratum, the platform may fail boot when resuming from G3/S3/S4/S5.",
        "workaround": "It may be possible for BIOS code changes to workaround this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Debug Exceptions May be Lost or Misreported When MOV SS or POP SS \nInstruction is Not Followed By a Write to SP",
        "problem": "If a MOV SS or POP SS instruction generated a debug exception, and is not followed \nby an explicit write to the Stack Pointer (SP), the processor may fail to deliver the \ndebug exception or, if it does, the DR6 register contents may not correctly reflect \nthe causes of the debug exception.",
        "implication": "Debugging software may fail to operate properly if a debug exception is lost or does \nnot report complete information. Intel has not observed this erratum with any \ncommercially available software.",
        "workaround": "Software should explicitly write to the stack pointer immediately after executing \nMOV SS or POP SS.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "VMREAD/VMWRITE Instructions May Not Fail When Accessing an \nUnsupported Field in VMCS",
        "problem": "The execution of VMREAD or VMWRITE instructions should fail if the value of the \ninstruction\u2019s register source operand corresponds to an unsupported field in the \nVMCS (Virtual Machine Control Structure). The correct operation is that the logical \nprocessor will set the ZF (Zero Flag), write 0CH into the VM-instruction error field \nand for VMREAD leave the instruction\u2019s destination unmodified. Due to this erratum, \nthe instruction may instead clear the ZF, leave the VM-instruction error field \nunmodified and for VMREAD modify the contents of its destination.",
        "implication": "Accessing an unsupported field in VMCS may fail to properly report an error. In \naddition, a VMREAD from an unsupported VMCS field may unexpectedly change its \ndestination. Intel has not observed this erratum with any commercially available \nsoftware.",
        "workaround": "Software should avoid accessing unsupported fields in a VMCS.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "BMI1, BMI2, LZCNT, ADXC, And ADOX Instructions May Not Generate an \n#UD",
        "problem": "BMI1, BMI2, LZCNT, ADXC, and ADOX instructions will not generate an #UD fault, \neven though the respective CPUID feature flags do not enumerate them as \nsupported instructions.",
        "implication": "Software that relies on BMI1, BMI2, LZCNT, ADXC, and ADOX instructions to \ngenerate an #UD fault, may not work correctly.",
        "workaround": "None identified. Software should check CPUID reported instructions availability and \nnot rely on the #UD fault behavior.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Exit Qualification For EPT Violations on Instruction Fetches May Incorrectly \nIndicate That The Guest-physical Address Was Writeable",
        "problem": "On EPT violations, bit 4 of the Exit Qualification indicates whether the guest-physical \naddress was writeable. When EPT is configured as supervisory shadow-stack (both \nbit 60 in EPT paging-structure leaf entry and bit 0 in EPT paging-structure entries \nare set), non-executable (bit 2 in EPT paging-structure entries is cleared), and non-\nwriteable (bit 1 in EPT paging-structure entries is cleared) a VMExit due to a guest \ninstruction fetch to a supervisory page will incorrectly set bit 4 of the Exit \nQualification. Bits 3, 5, and 6 of the Exit Qualification are not impacted by this \nerratum.",
        "implication": "Due to this erratum, bit 4 of the Exit Qualification may be incorrectly set. Intel has \nnot observed this erratum on any commercially available software.",
        "workaround": "EPT handlers processing an EPT violation due to an instruction fetch access on a \npresent page should ignore the value of bit 4 of the Exit Qualification.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor May Generate Spurious Page Faults On Shadow Stack Pages",
        "problem": "When operating in a virtualized environment, if shadow stack pages are mapped \nover an APIC page, the processor will generate spurious page faults on that shadow \nstack page whenever its linear to physical address translation is cached in the \nTranslation Look-aside Buffer.",
        "implication": "When this erratum occurs, the processor will generate a spurious page fault. Intel is \nnot aware of any software that maps shadow stack pages over an APIC page.",
        "workaround": "Software should avoid mapping shadow stack pages over the APIC page.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "System May Hang When Bus-Lock Detection Is Enabled And EPT Resides in \nUncacheable Memory",
        "problem": "On processors that support bus-lock detection (CPUID.(EAX=7, ECX=0).ECX[24]) \nand have it enabled (bit 2 in the IA32_DEBUGCTL MSR (1D9h)), and employ an \nExtended Page Table (EPT) that is mapped to an uncacheable area (UC), and the \nEPT_AD is enabled (bit 6 of the EPT Pointer is set), if the VMM performs an EPT \nmodification on a predefined valid page while a virtual machine is running, the \nprocessor may hang.",
        "implication": "Due to this erratum, the system may hang when bus-lock detection is enabled. Intel \nhas not observed this erratum in any commercially available software.",
        "workaround": "VMM should not map EPT tables to Uncacheable memory while using EPT_AD.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "No #GP Will be Signaled When Setting \nMSR_MISC_PWR_MGMT.ENABLE_SDC if MSR_MISC_PWR_MGMT.LOCK is \nSet",
        "problem": "If the MSR_MISC_PWR_MGMT.LOCK (MSR 1AAh, bit13 ) is set, a General Protection \nException (#GP) will not be signaled when MSR_MISC_PWR_MGMT.ENABLE_SDC \n(MSR 1AAh, bit 10) is cleared while IA32_XSS.HDC (MSR DA0h, bit 13) is set and if \nIA32_PKG_HDC_CTL.HDC_PKG_Enable (MSR DB0h, bit 0) was set at least once \nbefore.",
        "implication": "Due to this erratum, MSR_MISC_PWR_MGMT.ENABLE_SDC will be cleared even \nthough a #GP was not signaled.",
        "workaround": "None identified. Software should not attempt to clear \nMSR_MISC_PWR_MGMT.ENABLE_SDC if the above #GP conditions are met.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Last Branch Records May Not Survive Warm Reset",
        "problem": "Last Branch Records (LBRs) are expected to survive warm reset according to Intel\u00ae \narchitectures (SDM Vol3 Table 9-2). LBRs may be incorrectly cleared following warm \nreset if a valid machine check error was logged in one of the IA32_MCi_STATUS \nMSRs (401h, 405h, 409h, 40Dh).",
        "implication": "Reading LBRs following warm reset may show zero value even though LBRs were \nenabled (IA32_LBR_CTL.LBREn[0]=1) before the warm reset.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Incorrectly Formed PCIe Packets May Generate Correctable Errors",
        "problem": "Under complex microarchitectural conditions, the PCIe controller may transmit an \nincorrectly formed Transaction Layer Packet (TLP), which will fail CRC checks.",
        "implication": "When this erratum occurs, the PCIe end point may record correctable errors \nresulting in either a NAK or link recovery. Intel has not observed any functional \nimpact due to this erratum.",
        "workaround": "None Identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "#UD May be Delivered Instead of Other Exceptions",
        "problem": "An invalid instruction opcode that runs into another exception before fetching all \ninstruction bytes (e.g. A #GP due to the instruction being longer than 15 bytes or a \nCS limit violation) may signal a #UD despite not fetching all instruction bytes under \nsome microarchitectural conditions.",
        "implication": "Due to this erratum, a #UD exception may be serviced before other exceptions. This \ndoes not occur for valid instructions. Intel has only observed this erratum in a \nsynthetic test environment.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Type-C Host Controller Does Not Support Certain Qword Accesses",
        "problem": "The Type-C controller does not properly support Qword accesses to its MSI-X \ninterrupt table which may lead to unexpected behavior.",
        "implication": "When this erratum occurs, Qword reads do not return Unsupported Request and \nmay not return correct data and Qword writes may lead to unexpected behavior. \nIntel has not observed this erratum to affect any commercially available software.",
        "workaround": "Software should not utilize Qword access for the Type-C MSI-X table.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "#GP May be Serviced Before an Instruction Breakpoint",
        "problem": "An instruction breakpoint should have the highest priority and needs to be serviced \nbefore any other exception. In case an instruction breakpoint is marked on an illegal \ninstruction longer than 15 bytes that starts in bytes 0-16 of a 32B-aligned chunk, \nand that instruction does not complete within the same 32B-aligned chunk, a \nGeneral Protection Exception (#GP) on the same instruction will be serviced before \nthe breakpoint exception.",
        "implication": "Due to this erratum, an illegal instruction #GP exception may be serviced before an \ninstruction breakpoint.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Unexpected #PF Exception Might Be Serviced Before a #GP Exception",
        "problem": "Instructions longer than 15 bytes should assert a General Protection Exception \n(#GP). For instructions longer than 15 bytes, a Page Fault Exception (#PF) from the \nsubsequent page might be issued before the #GP exception in the following cases: \nThe GP instruction starts at byte 1 \u2013 16 of the last 32B-aligned chunk of a page \n1. \n(starting the count at byte 0), and it is not a target of taken jump, and it does \nnot complete within the same 32B-aligned chunk it started in. \nThe GP instruction starts at byte 17 of the last 32B-aligned chunk of a page. \n2.",
        "implication": "Due to this erratum, an unexpected #PF exception might be serviced before a #GP \nexception.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "WRMSR to Reserved Bits of IA32_L3_QOS_Mask_15 Will Not Signal a #GP",
        "problem": "A General Protection Exception (#GP) will not be signaled when writing non-zero \nvalues to the upper 32 bits of IA32_L3_QOS_Mask_15 MSR (Offset C9FH) even \nthough they are defined as reserved bits.",
        "implication": "Due to this erratum, a #GP will not be signaled when the upper bits of \nIA32_L3_QOS_Mask_15 are written with a non-zero value.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "VMX-Preemption Timer May Not Work if Configured With a Value of 1",
        "problem": "Under complex micro-architectural conditions, the VMX-preemption timer may not \ngenerate a VM Exit if the VMX-preemption timer value is set to 1.",
        "implication": "Due to this erratum, if the value configured to a value of 1, a VM exit may not occur.",
        "workaround": "None identified. Software should avoid programming the VMX-preemption timer with \na value of 1.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Single Step on Branches Might be Missed When VMM Enables Notification \nOn VM Exit",
        "problem": "Under complex micro-architectural conditions, single step on branches \n(IA32_DEBUGCTLMSR (Offset 1D9h, bit [1]) and also TF flag in EFLAGS register is \nset) in guest might be missed when VMM enables notification on VM Exit \n(IA32_VMX_PROCBASED_CTLS2 MSR, Offset 48Bh, bit [31]) while the dirty access \nbit is not set for the code page (bit [6] in paging-structure entry).",
        "implication": "When single step is enabled under the above condition, some single step branches \nwill be missed. Intel has only observed this erratum in a synthetic test environment.",
        "workaround": "When enabling single step on branches for debugging, software should first set the \ndirty bit of the code page.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Reading The PPERF MSR May Not Return Correct Values",
        "problem": "Under complex micro-architectural conditions, RDMSR instruction to Productive \nPerformance (MSR_PPERF) MSR (Offset 64eh) may not return correct values in the \nupper 32 bits (EDX register) if Core C6 is enabled.",
        "implication": "Software may experience a non-monotonic value when reading the MSR_PPERF \nmultiple times.",
        "workaround": "None identified. Software should not rely on the upper bits of the MSR_PPERF when \ncore C6 is enabled.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Incorrect #CP Error Code on UIRET",
        "problem": "If a #CP exception is triggered during a UIRET instruction execution, the error code \non the stack will report NEAR-RET instruction (code 1) instead of FAR-RET \ninstruction (code 2).",
        "implication": "Due to this erratum, an incorrect #CP error code is logged when #CP is triggered \nduring UIRET instruction.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor May Not Wake From TPAUSE/UMWAIT in Limited Situations",
        "problem": "External interrupts should cause the processor to exit the implementation-dependent \noptimized state reached by the TPAUSE and UMWAIT instructions regardless of the \nvalue of RFLAGS.IF. Due to this erratum, an interrupt may not wake the processor \nfrom such a state when RFLAGS.IF is 0. Additionally, the processor may not exit \nfrom UMWAIT/TPAUSE sleep state if the virtualization execution control of Interrupt-\nWindow Exiting is active (bit[2] of Primary Processor Based VM Execution Control is \nset to 1) or if Virtual-interrupt Delivery is active (bit[9] of Secondary Processor \nBased VM Execution Control is 1 & bit[31] of Primary Processor Based VM Execution \nControl is 1). Note that the only method to reach UMWAIT/TPAUSE sleep state with \ninterrupt-window exiting pending is if the previous instruction is a STI, MOV SS, POP \nSS, or VM-entry which sets MOV/POP SS blocking or STI blocking.",
        "implication": "If interrupts are masked because RFLAGS.IF = 0, arrival of an interrupt (or virtual \ninterrupt) will not wake the processor from TPAUSE/UWMAIT. For operating systems \nthat ensure that RFLAGS.IF = 1 whenever CPL > 0, this erratum applies only if \nTPAUSE or UMWAIT is used with interrupts disabled by RFLAGS.IF while CPL = 0. \nIntel is not aware of production software affected by this erratum.",
        "workaround": "It may be possible for the BIOS to contain a workaround for this erratum.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Unsynchronized Cross-Modifying Code Operations Can Cause Unexpected \nInstruction Execution Results",
        "problem": "The act of one processor or system bus master writing data into a currently \nexecuting code segment of a second processor with the intent of having the second \nprocessor execute that data as code is called cross-modifying code (XMC). XMC that \ndoes not force the second processor to execute a synchronizing instruction prior to \nexecution of the new code is called unsynchronized XMC. \nSoftware using unsynchronized XMC to modify the instruction byte stream of a \nprocessor can see unexpected or unpredictable execution behavior from the \nprocessor that is executing the modified code.",
        "implication": "In this case the phrase \"unexpected or unpredictable execution behavior\" \nencompasses the generation of most of the exceptions listed in the Intel Architecture \nSoftware Developer's Manual Volume 3: System Programming Guide including a \nGeneral Protection Fault (GPF) or other unexpected behaviors. In the event that \nunpredictable execution causes a GPF the application executing the unsynchronized \nXMC operation would be terminated by the operating system.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    },
    {
        "title": "Processor May Hang When PROCHOT# is Active",
        "problem": "When PROCHOT# is activated during BIOS initialization, the processor may hang \nwith a machine check error reported in IA32_MCi_STATUS, with MCACOD (bits \n[15:0]) value of 0402H, and MSCOD (bits [31:16]) value of 0409H.",
        "implication": "Due to this erratum, the processor may hang.",
        "workaround": "None identified.",
        "status": "For the steppings affected, refer to the Summary Table of Changes."
    }
]